{"version":3,"sources":["components/FormComponents.jsx","components/clientes/ClientesForm.jsx","components/Tabla.jsx","RestServices.js","components/clientes/Clientes.jsx","components/login/Login.jsx","components/obras/ObrasForm.jsx","components/obras/ClienteObrasForm.jsx","components/obras/Obras.jsx","components/productos/ProductosForm.jsx","components/productos/Productos.jsx","components/pedidos/PedidosForm.jsx","components/pedidos/DetallePedidoForm.jsx","components/pedidos/Pedidos.jsx","components/pagos/Pagos.jsx","components/liquidacion/LiquidacionForm.jsx","components/liquidacion/Liquidacion.jsx","components/NavBar.jsx","App.js","index.js"],"names":["ComboForm","opciones","value","onChange","label","name","options","map","o","index","className","Label","CampoForm","pattern","readOnly","Button","action","type","onClick","ClientesForm","cliente","actualizarCliente","saveOrUpdate","clean","handleChange","evt","nombreAtributo","target","valorAtributo","checked","validity","valid","razonSocial","cuit","mail","maxCuentaCorriente","habilitadoOnline","Tabla","titulo","encabezado","filas","EncabezadoTabla","children","FilaTabla","CeldaTabla","dato","CeldaBotonTabla","accion","RAIZ_URL","PORT","API_PRODUCTO","API_PEDIDO","API_OBRA","API_DETALLE_PEDIDO","API_LIQUIDACION","API_CLIENTE","API_EMPLEADO","headers","login","a","username","password","URL","axios","post","response","dataResponse","data","status","Error","message","console","log","method","getObras","GET","postObra","obra","POST","putObra","PUT","id","getPedidos","postPedido","pedido","putPedido","postDetalle","detallePedido","putDetalle","deleteDetalle","DELETE","getProductos","postProducto","producto","putProducto","getLiquidaciones","postLiquidacionTodos","postLiquidacionEmpleado","empleado","postSueldo","sueldo","getSueldo","getClientes","postCliente","putCliente","getEmpleados","getNewHeader","newHeader","Authorization","window","accessToken","postfixUrl","post_request","post_response","error","put_request","put","put_response","get_request","get","get_response","delete_request","headersCopy","delete","delete_response","clienteInicial","Clientes","useState","setCliente","listaClientes","setListaClientes","history","useHistory","useEffect","then","push","RUTAS","fetchClientes","e","i","atributo","valor","clienteNuevo","Login","ingresar","actualizarCampos","logged","user","setUsername","pass","setPassword","placeholder","ObrasForm","preventDefault","descripcion","latitud","longitud","direccion","superficie","tipoObra","ClienteObrasForm","c","obraInicial","Obras","setObra","listaObras","setListaObras","fetchObras","nuevaObra","findIndex","ProductosForm","unidades","nombre","precio","stockActual","stockMinimo","unidad","u","unidadInicial","productoInicial","Productos","setProducto","listaProductos","setListaProductos","listaUnidades","setListaUnidades","fetchProductos","nuevoProducto","PedidosForm","verDetalle","obras","fechaPedido","estado","DetallePedidoForm","cantidad","p","pedidoInicial","detalle","detallePedidoInicial","Pedidos","setPedido","listaPedidos","setListaPedidos","setDetalle","listaDetalle","setListaDetalle","fetchPedidos","cleanPedido","seleccionarPedido","filasDetalle","encabezadoDetalle","nuevoPedido","nuevoDetalle","Pagos","LiquidacionForm","listaEmpleados","liquidarTodos","liquidarEmpleado","actualizarCamposSueldo","actualizarSueldoEmpleado","sueldoEmpleado","handleChangeSueldo","monto","comision","empleadoInicial","sueldoInicial","Liquidacion","listaLiquidacion","setListaLiquidacion","setListaEmpleados","setEmpleado","setSueldo","fetchLiquidacion","fetchSueldo","nuevoSueldo","fecha","NavBar","to","clientes","pagos","pedidos","liquidacion","usuarioInicial","productos","App","alert","useAlert","usuario","setUsuario","setLogged","exact","path","success","component","position","positions","BOTTOM_RIGHT","timeout","offset","transition","transitions","SCALE","Root","template","AlertTemplate","render","document","getElementById"],"mappings":"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","file":"static/js/main.a17213f4.chunk.js","sourcesContent":["export const CampoForm = ({value, onChange, label, name, pattern, readOnly}) => {\r\n    return (\r\n        <div className=\"row\">\r\n            <Label value={label}/>\r\n            <div className=\"col-75\">\r\n                <input name={name}\r\n                       pattern={pattern}\r\n                       value={value}\r\n                       onChange={onChange}\r\n                       readOnly={readOnly}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const ComboForm = ({opciones, value, onChange, label, name}) => {\r\n\r\n    const options = opciones ?\r\n        opciones.map((o, index) => <option key={index} value={o}>{o}</option>)\r\n        : <></>\r\n\r\n    return <div className=\"row\">\r\n        <Label value={label}/>\r\n        <div className=\"col-75\">\r\n            <select\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}>\r\n                {options}\r\n            </select>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const Label = ({value}) => <div className=\"col-25 form-label\">\r\n    <label>{value}</label>\r\n</div>\r\n\r\n\r\nexport default CampoForm;","import \"../styles/Form.css\";\r\nimport {Label} from \"../FormComponents\";\r\n\r\nconst ClientesForm = ({cliente, actualizarCliente, saveOrUpdate, clean}) => {\r\n\r\n    const handleChange = evt => {\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.type === 'checkbox' ?\r\n            evt.target.checked : evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCliente(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-box container\">\r\n            <div className=\"row\">\r\n                <Label value=\"Razon Social\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        name=\"razonSocial\"\r\n                        value={cliente.razonSocial}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <Label value=\"Cuit\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        type=\"text\"\r\n                        pattern=\"[0-9]*\"\r\n                        name=\"cuit\"\r\n                        value={cliente.cuit}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <Label value=\"Email\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        name=\"mail\"\r\n                        value={cliente.mail}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <Label value=\"Maximo Descubierto\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        type=\"text\"\r\n                        pattern=\"[0-9.]*\"\r\n                        name=\"maxCuentaCorriente\"\r\n                        value={cliente.maxCuentaCorriente}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <Label value=\"Habilitado Online\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        name=\"habilitadoOnline\"\r\n                        type=\"checkbox\"\r\n                        checked={cliente.habilitadoOnline}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <Button label=\"Cancelar action\" action={clean}/>\r\n                <Button label=\"Guardar\" action={() => saveOrUpdate()}/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst Button = ({action, label}) =>\r\n    <div className=\"col-50\">\r\n        <button type=\"button\" onClick={action}>{label}</button>\r\n    </div>\r\n\r\nexport default ClientesForm;","import React from 'react';\r\n\r\nexport const Tabla = ({titulo = '', encabezado, filas}) => {\r\n\r\n    return (\r\n        <div>\r\n            <h2>{titulo}</h2>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        {encabezado}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                     {filas}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const EncabezadoTabla = ({children}) => {\r\n    return (\r\n        <th>\r\n            {children}\r\n        </th>\r\n    )\r\n}\r\nexport const FilaTabla = ({children}) => {\r\n    return (\r\n        <tr>\r\n            {children}\r\n        </tr>\r\n    )\r\n}\r\nexport const CeldaTabla = ({dato}) => {\r\n    return (\r\n        <td className=\"celdaTabla\">\r\n            {dato}\r\n        </td>\r\n    )\r\n}\r\nexport const CeldaBotonTabla = ({titulo, accion}) => {\r\n    return (\r\n        <td className=\"celdaTabla\">\r\n            <button onClick={accion}>{titulo}</button>\r\n        </td>\r\n    )\r\n}\r\n\r\nexport default Tabla;","import axios from 'axios';\r\n\r\nconst RAIZ_URL = 'http://localhost';\r\nconst PORT = 8181; //TODO arreglar esto pordio\r\nconst API_PRODUCTO = 'producto'\r\nconst API_PEDIDO = 'pedido'\r\nconst API_OBRA = 'user'\r\nconst API_DETALLE_PEDIDO = 'detallepedido'\r\nconst API_LIQUIDACION = 'liquidacion'\r\nconst API_CLIENTE = 'cliente'\r\nconst API_EMPLEADO = 'empleado'\r\n\r\nconst headers = {\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-Control-Allow-Methods': \"GET, POST, PATCH, PUT, DELETE, OPTIONS\",\r\n    'Access-Control-Allow-Headers': \"Origin, X-Requested-With, Content-Type, Accept\"\r\n}\r\n\r\n// --- USER METHODS ---\r\nexport const login = async ({username, password}) => {\r\n    const URL = `http://localhost:8181/login`;\r\n    try {\r\n        const response = await axios.post(URL, {username, password}, {headers})\r\n\r\n        const {data: dataResponse, status} = response\r\n        if (typeof dataResponse === 'string' || status !== 200) {\r\n            throw new Error(dataResponse)\r\n        } else {\r\n            return dataResponse\r\n        }\r\n    } catch (error) {\r\n        const message = `${error.response ? error.message : error}`;\r\n        console.log(\"Error en el login: \", {method: 'login', URL, message})\r\n    }\r\n}\r\nexport const register = async (user) => POST(`${API_OBRA}`, user);\r\n\r\n// --- OBRA METHODS ---\r\nexport const getObras = async () => GET(`${API_OBRA}`);\r\nexport const postObra = async (obra) => POST(`${API_OBRA}`, obra);\r\nexport const putObra = async (obra) => PUT(`${API_OBRA}/${obra.id}`, obra);\r\n\r\n// --- PEDIDO METHODS ---\r\nexport const getPedidos = async () => GET(`${API_PEDIDO}`);\r\nexport const postPedido = async (pedido) => POST(`${API_PEDIDO}`, pedido);\r\nexport const putPedido = async (pedido) => PUT(`${API_PEDIDO}/${pedido.id}`, pedido);\r\n\r\n// --- DETALLE PEDIDO METHODS ---\r\nexport const postDetalle = async (detallePedido, pedido) => POST(`${API_DETALLE_PEDIDO}/?idPedido=${pedido.id}`, detallePedido);\r\nexport const putDetalle = async (detallePedido) => PUT(`${API_DETALLE_PEDIDO}`, detallePedido);\r\nexport const deleteDetalle = async (detallePedido) => DELETE(`${API_DETALLE_PEDIDO}/id?idDetalle=${detallePedido.id}`);\r\n\r\n// --- PRODUCTO METHODS ---\r\nexport const getProductos = async () => GET(`${API_PRODUCTO}`);\r\nexport const getUnidades = () => GET(`${API_PRODUCTO}/unidades`);\r\nexport const postProducto = async (producto) => POST(`${API_PRODUCTO}`, producto);\r\nexport const putProducto = async (producto) => PUT(`${API_PRODUCTO}`, producto);\r\n\r\n// --- LIQUIDACION METHODS ---\r\nexport const getLiquidaciones = async () => GET(`${API_LIQUIDACION}`);\r\nexport const postLiquidacionTodos = async () => POST(`${API_LIQUIDACION}/todos`);\r\nexport const postLiquidacionEmpleado = async (empleado) => POST(`${API_LIQUIDACION}/empleado?idEmpleado=${empleado.id}`);\r\nexport const postSueldo = async (sueldo) => POST(`${API_LIQUIDACION}/sueldo`, sueldo);\r\nexport const getSueldo = async (empleado) => GET(`${API_LIQUIDACION}/empleado/sueldo?idEmpleado=${empleado.id}`);\r\n\r\n// --- CLIENTE METHODS ---\r\nexport const getClientes = async () => GET(`${API_CLIENTE}`);\r\nexport const postCliente = async (cliente) => POST(`${API_CLIENTE}`, cliente);\r\nexport const putCliente = async (cliente) => PUT(`${API_CLIENTE}`, cliente);\r\n\r\n// --- EMPLEADO METHODS ---\r\nexport const getEmpleados = async () => GET(`${API_EMPLEADO}`);\r\nexport const postEmpleado = async (empleado) => POST(`${API_EMPLEADO}`, empleado);\r\nexport const putEmpleado = async (empleado) => PUT(`${API_EMPLEADO}`, empleado);\r\n\r\nconst getNewHeader = () => {\r\n    let newHeader = headers;\r\n    newHeader.Authorization = `Bearer ${window.accessToken}`;\r\n    return newHeader;\r\n}\r\n\r\n// --- GENERAL METHODS ---\r\nexport const POST = async (postfixUrl, data,) => {\r\n    const URL = `${RAIZ_URL}:${PORT}/api/${postfixUrl}`;\r\n    console.log({post_request: URL, data})\r\n    try {\r\n        const response = await axios.post(URL, data, {headers: getNewHeader()})\r\n        const {data: dataResponse, status} = response\r\n        if (typeof dataResponse === 'string' || status !== 200) {\r\n            throw new Error(dataResponse)\r\n        } else {\r\n            console.log({post_response: URL, dataResponse})\r\n            return dataResponse\r\n        }\r\n    } catch (error) {\r\n        const message = `${error.response ? error.message : error}`;\r\n        console.log(\"Error en método: \", {method: 'POST', URL, message, error: error.response})\r\n    }\r\n}\r\n\r\nexport const PUT = async (postfixUrl, data) => {\r\n    const URL = `${RAIZ_URL}:${PORT}/api/${postfixUrl}`;\r\n\r\n    console.log({put_request: URL, data})\r\n\r\n    try {\r\n        const response = await axios.put(URL, data, {headers: getNewHeader()})\r\n        const {data: dataResponse, status} = response\r\n        if (typeof dataResponse === 'string' || status !== 200) {\r\n            throw new Error(dataResponse)\r\n        } else {\r\n            console.log({put_response: URL, dataResponse})\r\n            return dataResponse\r\n        }\r\n    } catch (error) {\r\n        const message = `${error.response ? error.message : error}`;\r\n        console.log(\"Error en método: \", {method: 'PUT', URL, message, error: error.response})\r\n    }\r\n}\r\n\r\nexport const GET = async (postfixUrl) => {\r\n    const URL = `${RAIZ_URL}:${PORT}/api/${postfixUrl}`;\r\n    console.log({get_request: URL})\r\n\r\n    try {\r\n        const response = await axios.get(URL, {headers: getNewHeader()})\r\n\r\n        const {data: dataResponse, status} = response\r\n\r\n        if (typeof dataResponse === 'string' || status !== 200) {\r\n            throw new Error(dataResponse)\r\n        } else {\r\n            console.log(\"Error en método: \", {get_response: URL, dataResponse})\r\n            return dataResponse\r\n        }\r\n    } catch (error) {\r\n        const message = `${error.response ? error.message : error}`;\r\n        console.error({method: 'GET', URL, message, error: error.response})\r\n    }\r\n}\r\n\r\nexport const DELETE = async (postfixUrl) => {\r\n    const URL = `${RAIZ_URL}:${PORT}/api/${postfixUrl}`;\r\n    console.log({delete_request: URL})\r\n\r\n    try {\r\n        let headersCopy = [...headers, {Authorization: `Bearer ${window.accessToken}`}]\r\n        const response = await axios.delete(URL, {headers: headersCopy})\r\n\r\n        const {data: dataResponse, status} = response\r\n\r\n        if (typeof dataResponse === 'string' || status !== 200) {\r\n            throw new Error(dataResponse)\r\n        } else {\r\n            console.log(\"Error en método: \", {delete_response: URL, dataResponse})\r\n            return dataResponse\r\n        }\r\n    } catch (error) {\r\n        const message = `${error.response ? error.message : error}`;\r\n        console.error({method: 'DELETE', URL, message, error: error.response})\r\n    }\r\n}","import ClientesForm from './ClientesForm';\r\nimport {CeldaBotonTabla, CeldaTabla, EncabezadoTabla, FilaTabla, Tabla} from '../Tabla';\r\nimport {useEffect, useState} from 'react';\r\nimport '../styles/Clientes.css';\r\nimport '../styles/Tabla.css';\r\nimport {getClientes, postCliente, putCliente} from '../../RestServices';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\n\r\nconst clienteInicial = {\r\n    razonSocial: '-',\r\n    habilitadoOnline: true,\r\n    maxCuentaCorriente: 0.0,\r\n    mail: '',\r\n    cuit: ''\r\n};\r\n\r\nconst Clientes = () => {\r\n    const [cliente, setCliente] = useState(clienteInicial);\r\n    const [listaClientes, setListaClientes] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (window.accessToken) {\r\n            getClientes().then(data => {\r\n                if (data)\r\n                    setListaClientes(data)\r\n            });\r\n        } else {\r\n            history.push(RUTAS.login)\r\n        }\r\n    }, []);\r\n\r\n    const fetchClientes = () => {\r\n        getClientes().then(data => {\r\n            if (data)\r\n                setListaClientes(data)\r\n        });\r\n    }\r\n\r\n\r\n    const actualizarCliente = (atributo, valor) => {\r\n        const clienteNuevo = {...cliente, [atributo]: valor};\r\n        setCliente(clienteNuevo);\r\n    }\r\n\r\n    const saveOrUpdate = () => {\r\n        (!(cliente.id)) ? postCliente(cliente).then(() => fetchClientes()) :\r\n            putCliente(cliente).then(() => fetchClientes());\r\n        setCliente(clienteInicial);\r\n    };\r\n\r\n    const filasCliente = () => {\r\n        if (listaClientes)\r\n            return listaClientes.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={e.razonSocial}/>\r\n                    <CeldaTabla dato={e.mail}/>\r\n                    <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => setCliente(e)}/>\r\n                </FilaTabla>\r\n            });\r\n        else\r\n            return <></>\r\n    }\r\n\r\n    const encabezado = [\"ID Usuario\", \"Razon Social\", \"e-mail\", \"\"].map((e, i) => {\r\n        return <EncabezadoTabla key={i}>{e}</EncabezadoTabla>\r\n    })\r\n\r\n    const limpiarCampos = () => {\r\n        setCliente(clienteInicial);\r\n    }\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div><h1>Gestion de clientes</h1></div>\r\n            <div className=\"panelForm\">\r\n                <div className=\"panelFormAlta\">\r\n                    <ClientesForm cliente={cliente}\r\n                                  actualizarCliente={actualizarCliente}\r\n                                  saveOrUpdate={saveOrUpdate}\r\n                                  clean={limpiarCampos}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"panel\">\r\n                <Tabla encabezado={encabezado} filas={filasCliente()}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clientes;","import \"../styles/Form.css\";\r\nimport {Label} from \"../FormComponents\";\r\nimport {useState} from \"react\";\r\n\r\nconst Login = ({username, password, ingresar, actualizarCampos, logged}) => {\r\n    const [user, setUsername] = useState(username);\r\n    const [pass, setPassword] = useState(password);\r\n\r\n    const changePassword = (evt) => {\r\n        setPassword(evt.target.value)\r\n        actualizarCampos({username: user, password: pass});\r\n    }\r\n\r\n    const changeUsername = (evt) => {\r\n        setUsername(evt.target.value)\r\n        actualizarCampos({username: user, password: pass});\r\n    }\r\n\r\n    if (logged){\r\n        return <h1>Bienvenido!</h1>\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"form-step\"> Login </h1>\r\n            <form>\r\n                <div className=\"row\">\r\n                    <Label value=\"Nombre de usuario\"/>\r\n                    <div className=\"col-75\">\r\n                        <input\r\n                            name=\"nombre\"\r\n                            type=\"text\"\r\n                            placeholder=\"usuario\"\r\n                            value={user}\r\n                            onChange={changeUsername}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Label value=\"Contraseña\"/>\r\n                    <div className=\"col-75\">\r\n                        <input\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"Contraseña\"\r\n                            value={pass}\r\n                            onChange={changePassword}/>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div className=\"row\">\r\n                <Label/>\r\n                <div className=\"col-75\">\r\n                    <button className=\"btn-wide\" onClick={ingresar}>Ingresar</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import {Label} from \"../FormComponents\";\r\n\r\nconst ObrasForm = ({ obra, actualizarCampos, saveOrUpdate, clean }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        evt.preventDefault();\r\n        // console.log(evt.target.value);\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-box container\">\r\n            <h3>Obra</h3>\r\n            <div className=\"row\">\r\n                <Label value=\"Descripción\"/>\r\n                <div className=\"col-75\">\r\n                    <input name=\"descripcion\"\r\n                        value={obra.descripcion}\r\n                        onChange={handleChange} />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <Label value=\"Latitud\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        type=\"text\"\r\n                        pattern=\"[0-9]*\"\r\n                        name=\"latitud\"\r\n                        value={obra.latitud}\r\n                        onChange={handleChange} />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <Label value=\"Longitud\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        type=\"text\"\r\n                        pattern=\"[0-9]*\"\r\n                        name=\"longitud\"\r\n                        value={obra.longitud}\r\n                        onChange={handleChange} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <Label value=\"Dirección\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        name=\"direccion\"\r\n                        value={obra.direccion}\r\n                        onChange={handleChange} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <Label value=\"Superficie\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        type=\"text\"\r\n                        pattern=\"[0-9]*\"\r\n                        name=\"superficie\"\r\n                        value={obra.superficie}\r\n                        onChange={handleChange} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <Label value=\"Tipo de Obra\"/>\r\n                <div className=\"col-75\">\r\n                    <select name=\"tipoObra\" value={obra.tipoObra} onChange={handleChange} >\r\n                        <option value=\"REFORMA\">Reforma</option>\r\n                        <option value=\"CASA\">Casa</option>\r\n                        <option value=\"EDIFICIO\">Edificio</option>\r\n                        <option value=\"VIAL\">Vial</option>\r\n\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-50 \">\r\n                    <button type=\"button\" onClick={clean}>Limpiar</button>\r\n                </div>\r\n                <div className=\"col-50\">\r\n                    <button type=\"button\" onClick={saveOrUpdate}>Guardar</button>\r\n                </div>\r\n            </div>\r\n        </form >\r\n    );\r\n}\r\n\r\nexport default ObrasForm;","import { ComboForm } from \"../FormComponents\";\r\n\r\nconst ClienteObrasForm = ({ cliente, actualizarCampos, listaClientes }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-box container\">\r\n            <h3>Cliente</h3>\r\n\r\n            <ComboForm\r\n                label='Razon Social'\r\n                placeholder='Razon Social'\r\n                name='razonSocial'\r\n                value={cliente.razonSocial}\r\n                onChange={handleChange}\r\n                opciones={listaClientes.map(c => { return c.razonSocial })} />\r\n\r\n            <ComboForm\r\n                label='CUIT'\r\n                placeholder='CUIT'\r\n                name='cuit'\r\n                value={cliente.cuit}\r\n                onChange={handleChange}\r\n                opciones={listaClientes.map(c => { return c.cuit })} />\r\n\r\n        </form >\r\n    );\r\n}\r\n\r\nexport default ClienteObrasForm;","import {CeldaBotonTabla, CeldaTabla, EncabezadoTabla, FilaTabla, Tabla} from '../Tabla';\r\nimport ObrasForm from \"./ObrasForm\";\r\nimport ClienteObrasForm from \"./ClienteObrasForm\";\r\nimport \"../styles/Form.css\";\r\nimport \"../styles/Tabla.css\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {getClientes, getObras, postObra, putObra} from '../../RestServices';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\n\r\nconst clienteInicial = {\r\n    id: null,\r\n    razonSocial: \"\",\r\n    cuit: \"\"\r\n}\r\n\r\nconst obraInicial = {\r\n    id: null,\r\n    descripcion: \"\",\r\n    latitud: 0,\r\n    longitud: 0,\r\n    direccion: \"\",\r\n    superficie: 0,\r\n    tipoObra: \"\",\r\n    cliente: clienteInicial\r\n}\r\n\r\nconst Obras = () => {\r\n    const history = useHistory();\r\n\r\n    const [obra, setObra] = useState(obraInicial);\r\n    const [cliente, setCliente] = useState(clienteInicial);\r\n    const [listaClientes, setListaClientes] = useState([]);\r\n    const [listaObras, setListaObras] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (window.accessToken){\r\n            fetchClientes();\r\n            fetchObras();\r\n        }\r\n        else\r\n            history.push(RUTAS.login)\r\n    }, []);\r\n\r\n    const fetchClientes = () => {\r\n        getClientes().then(data => setListaClientes(data));\r\n    }\r\n\r\n    const fetchObras = () => {\r\n        getObras().then(data => setListaObras(data));\r\n    }\r\n\r\n    const actualizarObra = (nombreAtributo, valorAtributo) => {\r\n        const nuevaObra = {...obra, [nombreAtributo]: valorAtributo};\r\n        setObra(nuevaObra);\r\n    }\r\n\r\n    const actualizarCliente = (nombreAtributo, valorAtributo) => {\r\n        const index = listaClientes.findIndex(c => c.[nombreAtributo] === valorAtributo);\r\n        setCliente(listaClientes[index])\r\n        const nuevaObra = {...obra, cliente: listaClientes[index]};\r\n        setObra(nuevaObra);\r\n    }\r\n\r\n    const saveOrUpdate = () => {\r\n        !(obra.id) ? postObra(obra).then(() => fetchObras()) :\r\n            putObra(obra).then(() => fetchObras());\r\n        setObra(obraInicial);\r\n        setCliente(clienteInicial);\r\n    };\r\n\r\n    const cleanObra = () => {\r\n        setObra(obraInicial);\r\n        setCliente(clienteInicial);\r\n    }\r\n\r\n    const filasObras = () => {\r\n        if (listaObras){\r\n            return listaObras.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={e.descripcion}/>\r\n                    <CeldaTabla dato={e.direccion}/>\r\n                    <CeldaTabla dato={e.superficie}/>\r\n                    <CeldaTabla dato={e.tipoObra}/>\r\n                    <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => {\r\n                        setObra(e);\r\n                        setCliente(e.cliente);\r\n                    }}/>\r\n                </FilaTabla>\r\n            });\r\n        }\r\n        else{\r\n            return <></>\r\n        }\r\n\r\n    }\r\n\r\n    const encabezado = [\"ID Obra\", \"Descripcion\", \"Direccion\", \"Superficie\", \"Tipo de Obra\", \"\"]\r\n        .map((e) => {\r\n            return <EncabezadoTabla>{e}</EncabezadoTabla>\r\n        })\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div><h1>Gestion de Obras</h1></div>\r\n            <div className=\"panelForm\">\r\n                <div className=\"panelFormAlta\">\r\n\r\n                    <ObrasForm\r\n                        obra={obra}\r\n                        actualizarCampos={actualizarObra}\r\n                        clean={cleanObra}\r\n                        saveOrUpdate={saveOrUpdate}/>\r\n                </div>\r\n\r\n                <div className=\"panelFormBusqueda\">\r\n\r\n                    <ClienteObrasForm\r\n                        cliente={cliente}\r\n                        actualizarCampos={actualizarCliente}\r\n                        listaClientes={listaClientes}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"panel\">\r\n                <Tabla filas={filasObras} encabezado={encabezado}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Obras;","import '../FormComponents';\r\nimport CampoForm, { ComboForm } from '../FormComponents';\r\n\r\nconst ProductosForm = ({ producto, unidades, actualizarCampos, clean, saveOrUpdate }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        evt.preventDefault();\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-box container\">\r\n            <h3>Producto</h3>\r\n\r\n            <CampoForm label='Nombre del Producto'\r\n                name='nombre'\r\n                value={producto.nombre}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm label='Descripcion'\r\n                name='descripcion'\r\n                value={producto.descripcion}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm label='Precio'\r\n                name='precio'\r\n                pattern=\"[0-9.]*\"\r\n                value={producto.precio}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm label='Stock Actual'\r\n                name='stockActual'\r\n                pattern=\"[0-9.]*\"\r\n                value={producto.stockActual}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm label='Stock Minimo'\r\n                name='stockMinimo'\r\n                pattern=\"[0-9.]*\"\r\n                value={producto.stockMinimo}\r\n                onChange={handleChange} />\r\n\r\n            <ComboForm\r\n                label=\"Unidad\"\r\n                name=\"unidad\"\r\n                value={producto.unidad.descripcion}\r\n                opciones={unidades ? unidades.map(u => { return u.descripcion }) : []}\r\n                onChange={handleChange} />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-50 \">\r\n                    <button type=\"button\" onClick={clean}>Limpiar</button>\r\n                </div>\r\n                <div className=\"col-50\">\r\n                    <button type=\"button\" onClick={saveOrUpdate}>Guardar</button>\r\n                </div>\r\n            </div>\r\n        </form >\r\n    );\r\n}\r\n\r\nexport default ProductosForm;","import {CeldaBotonTabla, CeldaTabla, EncabezadoTabla, FilaTabla, Tabla} from '../Tabla';\r\nimport ProductosForm from './ProductosForm';\r\nimport '../styles/Form.css';\r\nimport '../styles/Clientes.css';\r\nimport {useEffect, useState} from 'react';\r\nimport {getProductos, getUnidades, postProducto, putProducto} from '../../RestServices';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\n\r\nconst unidadInicial = {\r\n    descripcion: ''\r\n}\r\n\r\nconst productoInicial = {\r\n    nombre: '',\r\n    descripcion: '',\r\n    precio: 0,\r\n    stockActual: 0,\r\n    stockMinimo: 0,\r\n    unidad: unidadInicial\r\n}\r\n\r\nconst Productos = () => {\r\n    const history = useHistory();\r\n\r\n    const [producto, setProducto] = useState(productoInicial);\r\n    const [listaProductos, setListaProductos] = useState([]);\r\n    const [listaUnidades, setListaUnidades] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (window.accessToken) {\r\n            fetchProductos();\r\n        } else\r\n            history.push(RUTAS.login)\r\n    }, []);\r\n\r\n    const fetchProductos = () => {\r\n        getProductos().then(data => setListaProductos(data));\r\n        getUnidades().then(data => setListaUnidades(data));\r\n    }\r\n\r\n    const actualizarProducto = (nombreAtributo, valorAtributo) => {\r\n        if (nombreAtributo === 'unidad') valorAtributo = {...unidadInicial, descripcion: valorAtributo};\r\n        const nuevoProducto = {...producto, [nombreAtributo]: valorAtributo};\r\n        setProducto(nuevoProducto);\r\n    }\r\n\r\n    const saveOrUpdate = () => {\r\n        !(producto.id) ? postProducto(producto).then(() => fetchProductos()) :\r\n            putProducto(producto).then(() => fetchProductos());\r\n        setProducto(productoInicial);\r\n    };\r\n\r\n    const cleanProducto = () => {\r\n        setProducto(productoInicial);\r\n    }\r\n\r\n    const filasProductos = () => {\r\n        if (listaProductos)\r\n            return listaProductos.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={e.nombre}/>\r\n                    <CeldaTabla dato={e.descripcion}/>\r\n                    <CeldaTabla dato={e.precio}/>\r\n                    <CeldaTabla dato={e.stockActual}/>\r\n                    <CeldaTabla dato={e.stockMinimo}/>\r\n                    <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => setProducto(e)}/>\r\n                </FilaTabla>\r\n            });\r\n        else\r\n            return <></>\r\n    }\r\n\r\n    const encabezado = [\"ID Producto\", \"Nombre\", \"Descripcion\", \"Precio\", \"Stock Actual\", \"Stock Minimo\", \"\"]\r\n        .map((e) => {\r\n            return <EncabezadoTabla>{e}</EncabezadoTabla>\r\n        })\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div><h1>Productos</h1></div>\r\n            <div className=\"panel\">\r\n                <ProductosForm\r\n                    producto={producto}\r\n                    unidades={listaUnidades}\r\n                    actualizarCampos={actualizarProducto}\r\n                    clean={cleanProducto}\r\n                    saveOrUpdate={saveOrUpdate}/>\r\n            </div>\r\n            <div className=\"panel\">\r\n                <Tabla>\r\n                    {encabezado}\r\n                    {filasProductos}\r\n                </Tabla>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Productos;","import CampoForm, { ComboForm } from \"../FormComponents\";\r\n\r\nconst PedidosForm = ({ pedido, actualizarCampos, clean, saveOrUpdate, verDetalle, obras }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        evt.preventDefault();\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    const estadosPedido =\r\n        ['NUEVO', 'CONFIRMADO', 'PENDIENTE', 'CANCELADO', 'ACEPTADO', 'RECHAZADO', 'EN_PREPARACION', 'ENTREGADO'];\r\n    return (\r\n        <form className=\"form-box container\">\r\n            <CampoForm\r\n                label='Fecha'\r\n                name='fechaPedido'\r\n                value={pedido.fechaPedido}\r\n                onChange={handleChange} />\r\n            <ComboForm\r\n                label='Obra'\r\n                name='obra'\r\n                onChange={handleChange}\r\n                opciones={obras.map(o => { return o.id })} />\r\n            <ComboForm\r\n                label='Estado'\r\n                name='estado'\r\n                value={pedido.estado}\r\n                onChange={handleChange}\r\n                opciones={estadosPedido} />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-25 \">\r\n                    <button type=\"button\" onClick={clean}>Limpiar</button>\r\n                </div>\r\n                <div className=\"col-50\">\r\n                    <button type=\"button\" onClick={verDetalle}>Ver Detalle</button>\r\n                </div>\r\n                <div className=\"col-25\">\r\n                    <button type=\"button\" onClick={saveOrUpdate}>Guardar</button>\r\n                </div>\r\n            </div>\r\n        </form >\r\n    );\r\n}\r\n\r\nexport default PedidosForm;","import '../FormComponents'\r\nimport CampoForm, { ComboForm } from '../FormComponents';\r\n\r\nconst DetallePedidoForm = ({ detallePedido, actualizarCampos, listaProductos, saveOrUpdate }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"formbox container\">\r\n\r\n            <CampoForm\r\n                label='Cantidad'\r\n                pattern='[0-9.]*'\r\n                name='cantidad'\r\n                value={detallePedido.cantidad}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm\r\n                label='Precio'\r\n                name='precio'\r\n                readOnly={true}\r\n                value={detallePedido.cantidad * detallePedido.producto.precio} />\r\n\r\n            <ComboForm\r\n                label='Producto'\r\n                name='producto'\r\n                onChange={handleChange}\r\n                value={detallePedido.producto.nombre}\r\n                opciones={listaProductos.map(p => { return p.nombre })} />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-25\" />\r\n                <div className=\"col-75\">\r\n                    <button className=\"btn-wide\" type=\"button\" onClick={saveOrUpdate}>Guardar</button>\r\n                </div>\r\n            </div>\r\n        </form >\r\n    );\r\n}\r\n\r\nexport default DetallePedidoForm;","import {Tabla, FilaTabla, CeldaTabla, CeldaBotonTabla, EncabezadoTabla} from '../Tabla';\r\nimport PedidosForm from './PedidosForm';\r\nimport DetallePedidoForm from './DetallePedidoForm'\r\nimport '../styles/Form.css';\r\nimport '../styles/Clientes.css';\r\nimport {useEffect, useState} from \"react\";\r\nimport {\r\n    getPedidos,\r\n    postPedido,\r\n    putPedido,\r\n    postDetalle,\r\n    putDetalle,\r\n    deleteDetalle,\r\n    getProductos,\r\n    getObras\r\n} from '../../RestServices';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\n\r\nconst pedidoInicial = {\r\n    id: null,\r\n    fechaPedido: '',\r\n    obra: '',\r\n    estado: 'NUEVO',\r\n    detalle: []\r\n}\r\n\r\nconst detallePedidoInicial = {\r\n    id: null,\r\n    cantidad: '',\r\n    precio: 0,\r\n    producto: ''\r\n}\r\n\r\nconst Pedidos = () => {\r\n    const history = useHistory();\r\n\r\n    const [pedido, setPedido] = useState(pedidoInicial);\r\n    const [listaPedidos, setListaPedidos] = useState([]);\r\n\r\n    const [detallePedido, setDetalle] = useState(detallePedidoInicial);\r\n    const [listaDetalle, setListaDetalle] = useState([]);\r\n    const [listaProductos, setListaProductos] = useState([]);\r\n    const [listaObras, setListaObras] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (window.accessToken){\r\n            fetchPedidos();\r\n            fetchProductos();\r\n            fetchObras();\r\n        }\r\n        else\r\n            history.push(RUTAS.login)\r\n\r\n    }, [listaPedidos, listaDetalle]);\r\n\r\n    const fetchPedidos = () => {\r\n        getPedidos().then(data => {\r\n            if (data)\r\n                setListaPedidos(data)\r\n        })\r\n    }\r\n\r\n    const fetchProductos = () => {\r\n        getProductos().then(data => {\r\n            if (data)\r\n                setListaProductos(data)\r\n        });\r\n    }\r\n\r\n    const fetchObras = () => {\r\n        getObras().then(data => {\r\n            if (data)\r\n                setListaObras(data)\r\n        });\r\n    }\r\n\r\n    const actualizarPedido = (nombreAtributo, valorAtributo) => {\r\n        if (nombreAtributo === 'obra') {\r\n            const index = listaObras.findIndex(o => o.id === valorAtributo);\r\n            const nuevoPedido = {...pedido, obra: listaObras[index]};\r\n            setPedido(nuevoPedido);\r\n        } else {\r\n            const nuevoPedido = {...pedido, [nombreAtributo]: valorAtributo};\r\n            setPedido(nuevoPedido);\r\n        }\r\n    }\r\n\r\n    const saveOrUpdatePedido = () => {\r\n        !(pedido.id) ? postPedido(pedido).then(() => fetchPedidos()) :\r\n            putPedido(pedido).then(() => fetchPedidos());\r\n        cleanPedido();\r\n    };\r\n\r\n    const cleanPedido = () => {\r\n        setPedido(pedidoInicial);\r\n        setListaDetalle([]);\r\n        setDetalle(detallePedidoInicial);\r\n    }\r\n\r\n    const actualizarDetalle = (nombreAtributo, valorAtributo) => {\r\n        if (nombreAtributo === 'producto') {\r\n            const index = listaProductos.findIndex(p => p.nombre === valorAtributo);\r\n            const nuevoDetalle = {\r\n                ...detallePedido,\r\n                producto: listaProductos[index],\r\n                precio: detallePedido.cantidad * listaProductos[index].precio\r\n            };\r\n            setDetalle(nuevoDetalle)\r\n        } else {\r\n            const nuevoDetalle = {...detallePedido, [nombreAtributo]: valorAtributo};\r\n            setDetalle(nuevoDetalle);\r\n        }\r\n    }\r\n\r\n    const saveOrUpdateDetalle = () => {\r\n        !(detallePedido.id) ? postDetalle(detallePedido, pedido).then(() => fetchPedidos()) :\r\n            putDetalle(detallePedido).then(() => fetchPedidos());\r\n    };\r\n\r\n    const filasPedidos = () => {\r\n        if (listaPedidos){\r\n            listaPedidos.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={e.fechaPedido}/>\r\n                    <CeldaTabla dato={e.obra.id}/>\r\n                    <CeldaTabla dato={e.estado}/>\r\n                    <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => seleccionarPedido(e)}/>\r\n                </FilaTabla>\r\n            });\r\n        }\r\n        else\r\n            return <></>\r\n    }\r\n\r\n    const encabezado = [\"ID Pedido\", \"Fecha de Pedido\", \"ID Obra\", \"Estado\", \"\"]\r\n        .map((e) => {\r\n            return <EncabezadoTabla>{e}</EncabezadoTabla>\r\n        })\r\n\r\n    const seleccionarPedido = (p) => {\r\n        setPedido(p);\r\n        setListaDetalle(p.detalle);\r\n        setDetalle(detallePedidoInicial);\r\n    }\r\n\r\n    const eliminarDetalle = (d) => {\r\n        deleteDetalle(d).then(() => fetchPedidos());\r\n    }\r\n\r\n    const filasDetalle = listaDetalle.map((e, i) => {\r\n        return <FilaTabla key={i}>\r\n            <CeldaTabla dato={e.id}/>\r\n            <CeldaTabla dato={e.cantidad}/>\r\n            <CeldaTabla dato={e.precio}/>\r\n            <CeldaTabla dato={e.producto.nombre}/>\r\n            <CeldaBotonTabla titulo=\"Eliminar\" accion={() => eliminarDetalle(e)}/>\r\n            <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => setDetalle(e)}/>\r\n        </FilaTabla>\r\n    });\r\n\r\n    const encabezadoDetalle = [\"ID Detalle\", \"Cantidad\", \"Precio\", \"Producto\", \"\", \"\"]\r\n        .map((e) => {\r\n            return <EncabezadoTabla>{e}</EncabezadoTabla>\r\n        })\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div><h1>Pedidos</h1></div>\r\n            <div className=\"panelForm\">\r\n                <div className=\"panelFormAlta\">\r\n                    <PedidosForm\r\n                        pedido={pedido}\r\n                        actualizarCampos={actualizarPedido}\r\n                        clean={cleanPedido}\r\n                        saveOrUpdate={saveOrUpdatePedido}\r\n                        obras={listaObras}/>\r\n                </div>\r\n                <div className=\"panelFormAlta\">\r\n                    <DetallePedidoForm\r\n                        detallePedido={detallePedido}\r\n                        listaProductos={listaProductos}\r\n                        actualizarCampos={actualizarDetalle}\r\n                        saveOrUpdate={saveOrUpdateDetalle}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"panel\">\r\n                <div><h3>Detalle</h3></div>\r\n                <Tabla>\r\n                    {encabezadoDetalle}\r\n                    {filasDetalle}\r\n                </Tabla>\r\n                <div><h3>Pedidos</h3></div>\r\n                <Tabla encabezado={encabezado} filas={filasPedidos}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Pedidos;","import {useEffect, useState} from 'react';\r\nimport {CeldaBotonTabla, CeldaTabla, EncabezadoTabla, FilaTabla, Tabla} from '../Tabla'\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\n\r\nconst Pagos = () => {\r\n    const history = useHistory();\r\n\r\n    const [listaPedidos, setListaPedidos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (!window.accessToken) {\r\n            history.push(RUTAS.login)\r\n        }\r\n    }, []);\r\n\r\n    const abonarPedido = () => {\r\n        console.log(\"Abonar pedido listo\")\r\n    }\r\n\r\n    const filasPedidos = () => {\r\n        if (listaPedidos) {\r\n            return listaPedidos.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={e.fechaPedido}/>\r\n                    <CeldaTabla dato={e.obra}/>\r\n                    <CeldaTabla dato={e.estado}/>\r\n                    <CeldaBotonTabla titulo=\"Abonar\" accion={() => abonarPedido(e)}/>\r\n                </FilaTabla>\r\n            });\r\n        } else return <></>\r\n    }\r\n\r\n    const encabezado = [\"ID Pedido\", \"Fecha de Pedido\", \"ID Obra\", \"Estado\", \"\"]\r\n        .map((e) => {\r\n            return <EncabezadoTabla>{e}</EncabezadoTabla>\r\n        })\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div><h1>Pagos</h1></div>\r\n            <div className=\"panel\">\r\n                <div><h3>Pedidos</h3></div>\r\n                <Tabla encabezado={encabezado} filas={filasPedidos}/>\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default Pagos;","import '../FormComponents'\r\nimport CampoForm, { ComboForm } from '../FormComponents'\r\n\r\nconst LiquidacionForm = ({ empleado, actualizarCampos, listaEmpleados, liquidarTodos, liquidarEmpleado, actualizarCamposSueldo, actualizarSueldoEmpleado, sueldoEmpleado }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(valorAtributo);\r\n    }\r\n    const handleChangeSueldo = (evt) => {\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCamposSueldo(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className='formbox-container'>\r\n            <ComboForm\r\n                label=\"Empleado\"\r\n                name=\"nombre\"\r\n                value={empleado.nombre}\r\n                onChange={handleChange}\r\n                opciones={listaEmpleados.map(e => { return e.nombre })}\r\n            />\r\n            <CampoForm\r\n                label=\"Monto\"\r\n                name=\"monto\"\r\n                pattern=\"[0-9.]*\"\r\n                value={sueldoEmpleado.monto}\r\n                onChange={handleChangeSueldo} />\r\n            <CampoForm\r\n                label=\"Porcentaje de comision\"\r\n                name=\"comision\"\r\n                pattern=\"[0-9.]*\"\r\n                value={sueldoEmpleado.comision}\r\n                onChange={handleChangeSueldo}\r\n            />\r\n            <div className=\"row\">\r\n                <div className=\"col-25\" />\r\n                <div className=\"col-25\">\r\n                    <button type=\"button\" onClick={actualizarSueldoEmpleado}>Actualizar Sueldo</button>\r\n                </div>\r\n                <div className=\"col-25\">\r\n                    <button type=\"button\" onClick={liquidarEmpleado}>Liquidar Empleado</button>\r\n                </div>\r\n                <div className=\"col-25\">\r\n                    <button type=\"button\" onClick={liquidarTodos}>Liquidar a todos</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default LiquidacionForm;","import {useState} from \"react\";\r\nimport LiquidacionForm from \"./LiquidacionForm\";\r\nimport '../Tabla';\r\nimport '../styles/Form.css';\r\nimport '../styles/Clientes.css';\r\nimport {CeldaTabla, EncabezadoTabla, FilaTabla, Tabla} from '../Tabla';\r\nimport {\r\n    getEmpleados,\r\n    getLiquidaciones,\r\n    getSueldo,\r\n    postLiquidacionEmpleado,\r\n    postLiquidacionTodos,\r\n    postSueldo\r\n} from \"../../RestServices\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\n\r\nconst empleadoInicial = {\r\n    nombre: ''\r\n}\r\n\r\nconst sueldoInicial = {\r\n    monto: 0,\r\n    comision: 0\r\n}\r\n\r\nconst Liquidacion = () => {\r\n    const history = useHistory();\r\n\r\n    const [listaLiquidacion, setListaLiquidacion] = useState([]);\r\n    const [listaEmpleados, setListaEmpleados] = useState([]);\r\n    const [empleado, setEmpleado] = useState(empleadoInicial);\r\n    const [sueldo, setSueldo] = useState(sueldoInicial);\r\n\r\n\r\n\r\n    const fetchEmpleados = () => {\r\n        getEmpleados().then(data => {\r\n            if (data)\r\n                setListaEmpleados(data)\r\n        });\r\n    }\r\n\r\n    const fetchLiquidacion = () => {\r\n        getLiquidaciones().then(data => {\r\n            if (data)\r\n                setListaLiquidacion(data)\r\n        });\r\n    }\r\n\r\n    const fetchSueldo = (empleado) => {\r\n        getSueldo(empleado).then(data => {\r\n            if (data)\r\n                setSueldo(data)\r\n        });\r\n    }\r\n\r\n    useState(() => {\r\n        if (window.accessToken) {\r\n            fetchEmpleados();\r\n            fetchLiquidacion();\r\n        } else\r\n            history.push(RUTAS.login)\r\n\r\n    }, []);\r\n\r\n    const liquidarEmpleado = () => {\r\n        postLiquidacionEmpleado(empleado).then(() => fetchLiquidacion());\r\n    }\r\n\r\n    const liquidarTodos = () => {\r\n        postLiquidacionTodos().then(() => fetchLiquidacion());\r\n    }\r\n\r\n    const actualizarEmpleado = (valorAtributo) => {\r\n        const index = listaEmpleados.findIndex(e => e.nombre === valorAtributo);\r\n        setEmpleado(listaEmpleados[index]);\r\n        fetchSueldo(listaEmpleados[index]);\r\n    }\r\n\r\n    const actualizarCamposSueldo = (nombreAtributo, valorAtributo) => {\r\n        const nuevoSueldo = {...sueldo, [nombreAtributo]: valorAtributo};\r\n        setSueldo(nuevoSueldo);\r\n    }\r\n\r\n    const actualizarSueldoEmpleado = () => {\r\n        console.log(sueldo);\r\n        postSueldo(sueldo).then(() => fetchSueldo());\r\n    }\r\n\r\n\r\n    const filasLiquidacion = () => {\r\n        if (listaLiquidacion)\r\n            return listaLiquidacion.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={\r\n                        listaEmpleados[listaEmpleados.findIndex(o => o.id === e.empleado.id)].nombre\r\n                    }/>\r\n                    <CeldaTabla dato={e.fecha}/>\r\n                    <CeldaTabla dato={e.monto}/>\r\n                </FilaTabla>\r\n            });\r\n        else\r\n            return <></>\r\n    }\r\n\r\n    const encabezado = [\"ID Liquidacion\", \"Empleado\", \"Fecha\", \"Monto\"].map((e) =>\r\n        <EncabezadoTabla>{e}</EncabezadoTabla>)\r\n\r\n    return (\r\n        <div className='box'>\r\n            <div><h3>Liquidacion</h3></div>\r\n\r\n            <div className=\"panelForm\">\r\n                <div className=\"panelFormAlta\">\r\n                    <LiquidacionForm\r\n                        empleado={empleado}\r\n                        listaEmpleados={listaEmpleados}\r\n                        actualizarCampos={actualizarEmpleado}\r\n                        actualizarCamposSueldo={actualizarCamposSueldo}\r\n                        actualizarSueldoEmpleado={actualizarSueldoEmpleado}\r\n                        liquidarEmpleado={liquidarEmpleado}\r\n                        liquidarTodos={liquidarTodos}\r\n                        sueldoEmpleado={sueldo}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"panelForm\">\r\n                <Tabla encabezado={encabezado} filas={filasLiquidacion}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Liquidacion","import {Link} from \"react-router-dom\";\r\nimport './styles/App.css'\r\nimport {RUTAS} from \"../App\";\r\n\r\nconst NavBar = ({logged}) => {\r\n    return (\r\n        <nav>\r\n            <ul className=\"nav-links\">\r\n                {logged ?\r\n                    <>\r\n                        <Link className=\"nav-links\" to={RUTAS.clientes}>\r\n                            <li>Clientes</li>\r\n                        </Link>\r\n                        <Link className=\"nav-links\" to={RUTAS.obras}>\r\n                            <li>Obras</li>\r\n                        </Link>\r\n                        <Link className=\"nav-links\" to={RUTAS.pagos}>\r\n                            <li>Pagos</li>\r\n                        </Link>\r\n                        <Link className=\"nav-links\" to={RUTAS.pedidos}>\r\n                            <li>Pedidos</li>\r\n                        </Link>\r\n                        <Link className=\"nav-links\" to={RUTAS.pedidos}>\r\n                            <li>Productos</li>\r\n                        </Link>\r\n                        <Link className=\"nav-links\" to={RUTAS.liquidacion}>\r\n                            <li>Liquidación</li>\r\n                        </Link>\r\n                    </>\r\n                    : <></>\r\n                }\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport {useState} from \"react\";\r\nimport Clientes from \"./components/clientes/Clientes\";\r\nimport Login from \"./components/login/Login\";\r\nimport Obras from \"./components/obras/Obras\"\r\nimport Productos from \"./components/productos/Productos\";\r\nimport Pedidos from './components/pedidos/Pedidos';\r\nimport Pagos from './components/pagos/Pagos';\r\nimport Liquidacion from './components/liquidacion/Liquidacion'\r\nimport NavBar from './components/NavBar';\r\nimport {login} from \"./RestServices\";\r\n\r\nimport {useAlert} from 'react-alert'\r\n\r\nconst usuarioInicial = {\r\n    username: \"dan2021\",\r\n    password: \"dan2021\"\r\n}\r\n\r\nexport const RUTAS = {\r\n    login: \"/\",\r\n    clientes: \"/page/clientes\",\r\n    obras: \"/page/obras\",\r\n    productos: \"/page/productos\",\r\n    pedidos: \"/page/pedidos\",\r\n    pagos: \"/page/pagos\",\r\n    liquidacion: \"/page/liquidacion\"\r\n}\r\n\r\nfunction App() {\r\n\r\n    const alert = useAlert()\r\n\r\n    const [usuario, setUsuario] = useState(usuarioInicial);\r\n\r\n    const [logged, setLogged] = useState(false);\r\n\r\n    const ingresar = () => {\r\n        login(usuario).then((data) => {\r\n            if (data && data.accessToken) {\r\n                alert.success('Se ha logueado correctamente!')\r\n                window.accessToken = data.accessToken;// mala práctica pero hay apuro\r\n                //TODO redigir a un menú\r\n                setLogged(true)\r\n            } else {\r\n                alert.error('Revise usuario y/o contraseña')\r\n                setLogged(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    const actualizarUsuario = ({username, password}) => {\r\n        setUsuario({username, password});\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Router>\r\n                <NavBar logged={logged}/>\r\n                <Switch>\r\n                    <Route exact path={RUTAS.login}>\r\n                        <Login username={usuario.username} password={usuario.password} ingresar={ingresar}\r\n                               actualizarCampos={actualizarUsuario} logged={logged}/>\r\n                    </Route>\r\n                    <Route path={RUTAS.clientes} component={Clientes}/>\r\n                    <Route path={RUTAS.obras} component={Obras}/>\r\n                    <Route path={RUTAS.productos} component={Productos}/>\r\n                    <Route path={RUTAS.pedidos} component={Pedidos}/>\r\n                    <Route path={RUTAS.pagos} component={Pagos}/>\r\n                    <Route path={RUTAS.liquidacion} component={Liquidacion} name='Liquidación'/>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {positions, Provider as AlertProvider, transitions, types} from 'react-alert'\r\nimport AlertTemplate from 'react-alert-template-basic'\r\n\r\n// optional configuration\r\nconst options = {\r\n    // you can also just use 'bottom center'\r\n    position: positions.BOTTOM_RIGHT,\r\n    timeout: 3000,\r\n    offset: '10px',\r\n    // you can also just use 'scale'\r\n    transition: transitions.SCALE\r\n}\r\n\r\nconst Root = () => (\r\n    <AlertProvider template={AlertTemplate} {...options}>\r\n        <App/>\r\n    </AlertProvider>\r\n)\r\n\r\nrender(<Root/>, document.getElementById('root'))\r\n"],"sourceRoot":""}