{"version":3,"sources":["components/FormComponents.jsx","components/clientes/ClientesForm.jsx","components/Tabla.jsx","RestServices.js","components/clientes/Clientes.jsx","components/login/Login.jsx","components/obras/ObrasForm.jsx","components/obras/ClienteObrasForm.jsx","components/obras/Obras.jsx","components/productos/ProductosForm.jsx","components/productos/Productos.jsx","components/pedidos/PedidosForm.jsx","components/pedidos/DetallePedidoForm.jsx","components/pedidos/Pedidos.jsx","components/pagos/Pagos.jsx","components/liquidacion/LiquidacionForm.jsx","components/liquidacion/Liquidacion.jsx","components/NavBar.jsx","App.js","index.js"],"names":["ComboForm","opciones","value","onChange","label","name","options","map","o","index","className","Label","CampoForm","pattern","readOnly","Button","action","type","onClick","ClientesForm","cliente","actualizarCliente","saveOrUpdate","clean","handleChange","evt","nombreAtributo","target","valorAtributo","checked","validity","valid","razonSocial","cuit","mail","maxCuentaCorriente","habilitadoOnline","Tabla","titulo","encabezado","filas","EncabezadoTabla","children","FilaTabla","CeldaTabla","dato","CeldaBotonTabla","accion","RAIZ_URL","API_PRODUCTO","API_PEDIDO","API_OBRA","API_DETALLE_PEDIDO","API_LIQUIDACION","API_CLIENTE","API_EMPLEADO","headers","login","a","username","password","URL","axios","post","response","dataResponse","data","status","localStorage","removeItem","Error","message","console","log","method","getObras","GET","postObra","obra","POST","putObra","PUT","id","getPedidos","postPedido","pedido","putPedido","postDetalle","detallePedido","putDetalle","deleteDetalle","DELETE","getProductos","postProducto","producto","putProducto","getLiquidaciones","postLiquidacionTodos","postLiquidacionEmpleado","empleado","postSueldo","sueldo","getSueldo","getClientes","postCliente","putCliente","getEmpleados","getNewHeader","token","getItem","Authorization","postfixUrl","post_request","post_response","error","put_request","put","put_response","get_request","get","get_response","delete_request","headersCopy","window","accessToken","delete","delete_response","clienteInicial","Clientes","useState","setCliente","listaClientes","setListaClientes","history","useHistory","useEffect","then","push","RUTAS","fetchClientes","e","i","atributo","valor","clienteNuevo","Login","logged","setLogged","setUsername","setPassword","alert","useAlert","ingresar","setItem","success","placeholder","onKeyPress","event","key","form","Array","prototype","indexOf","call","elements","focus","preventDefault","handleEnter","ObrasForm","actualizarCampos","descripcion","latitud","longitud","direccion","superficie","tipoObra","ClienteObrasForm","c","obraInicial","Obras","setObra","listaObras","setListaObras","fetchObras","nuevaObra","algoObra","findIndex","ProductosForm","unidades","nombre","precio","stockActual","stockMinimo","unidad","u","unidadInicial","productoInicial","Productos","setProducto","listaProductos","setListaProductos","listaUnidades","setListaUnidades","fetchProductos","nuevoProducto","PedidosForm","verDetalle","obras","fechaPedido","estado","DetallePedidoForm","cantidad","p","pedidoInicial","detalle","detallePedidoInicial","Pedidos","setPedido","listaPedidos","setListaPedidos","setDetalle","listaDetalle","setListaDetalle","fetchPedidos","cleanPedido","seleccionarPedido","filasDetalle","encabezadoDetalle","nuevoPedido","nuevoDetalle","Pagos","LiquidacionForm","listaEmpleados","liquidarTodos","liquidarEmpleado","actualizarCamposSueldo","actualizarSueldoEmpleado","sueldoEmpleado","handleChangeSueldo","monto","comision","empleadoInicial","sueldoInicial","Liquidacion","listaLiquidacion","setListaLiquidacion","setListaEmpleados","setEmpleado","setSueldo","fetchLiquidacion","fetchSueldo","nuevoSueldo","fecha","NavBar","logout","to","clientes","pagos","pedidos","productos","liquidacion","App","undefined","info","exact","path","component","position","positions","BOTTOM_RIGHT","timeout","offset","transition","transitions","SCALE","Root","template","AlertTemplate","render","document","getElementById"],"mappings":"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","file":"static/js/main.c437fee6.chunk.js","sourcesContent":["export const CampoForm = ({value, onChange, label, name, pattern, readOnly}) => {\r\n    return (\r\n        <div className=\"row\">\r\n            <Label value={label}/>\r\n            <div className=\"col-75\">\r\n                <input name={name}\r\n                       pattern={pattern}\r\n                       value={value}\r\n                       onChange={onChange}\r\n                       readOnly={readOnly}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const ComboForm = ({opciones, value, onChange, label, name}) => {\r\n\r\n    const options = opciones ?\r\n        opciones.map((o, index) => <option key={index} value={o}>{o}</option>)\r\n        : <></>\r\n\r\n    return <div className=\"row\">\r\n        <Label value={label}/>\r\n        <div className=\"col-75\">\r\n            <select\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}>\r\n                {options}\r\n            </select>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const Label = ({value}) => <div className=\"col-25 form-label\">\r\n    <label>{value}</label>\r\n</div>\r\n\r\n\r\nexport default CampoForm;","import \"../styles/Form.css\";\r\nimport {Label} from \"../FormComponents\";\r\n\r\nconst ClientesForm = ({cliente, actualizarCliente, saveOrUpdate, clean}) => {\r\n\r\n    const handleChange = evt => {\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.type === 'checkbox' ?\r\n            evt.target.checked : evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCliente(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-box container\">\r\n            <div className=\"row\">\r\n                <Label value=\"Razon Social\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        name=\"razonSocial\"\r\n                        value={cliente.razonSocial}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <Label value=\"Cuit\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        type=\"text\"\r\n                        pattern=\"[0-9]*\"\r\n                        name=\"cuit\"\r\n                        value={cliente.cuit}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <Label value=\"Email\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        name=\"mail\"\r\n                        value={cliente.mail}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <Label value=\"Maximo Descubierto\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        type=\"text\"\r\n                        pattern=\"[0-9.]*\"\r\n                        name=\"maxCuentaCorriente\"\r\n                        value={cliente.maxCuentaCorriente}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <Label value=\"Habilitado Online\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        name=\"habilitadoOnline\"\r\n                        type=\"checkbox\"\r\n                        checked={cliente.habilitadoOnline}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <Button label=\"Cancelar action\" action={clean}/>\r\n                <Button label=\"Guardar\" action={() => saveOrUpdate()}/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst Button = ({action, label}) =>\r\n    <div className=\"col-50\">\r\n        <button type=\"button\" onClick={action}>{label}</button>\r\n    </div>\r\n\r\nexport default ClientesForm;","import React from 'react';\r\n\r\nexport const Tabla = ({titulo = '', encabezado, filas}) => {\r\n\r\n    return (\r\n        <div>\r\n            <h2>{titulo}</h2>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        {encabezado}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                     {filas}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const EncabezadoTabla = ({children}) => {\r\n    return (\r\n        <th>\r\n            {children}\r\n        </th>\r\n    )\r\n}\r\nexport const FilaTabla = ({children}) => {\r\n    return (\r\n        <tr>\r\n            {children}\r\n        </tr>\r\n    )\r\n}\r\nexport const CeldaTabla = ({dato}) => {\r\n    return (\r\n        <td className=\"celdaTabla\">\r\n            {dato}\r\n        </td>\r\n    )\r\n}\r\nexport const CeldaBotonTabla = ({titulo, accion}) => {\r\n    return (\r\n        <td className=\"celdaTabla\">\r\n            <button onClick={accion}>{titulo}</button>\r\n        </td>\r\n    )\r\n}\r\n\r\nexport default Tabla;","import axios from 'axios';\r\n\r\nconst RAIZ_URL = `http://localhost`;\r\nconst API_PRODUCTO = 'producto'\r\nconst API_PEDIDO = 'pedido'\r\nconst API_OBRA = 'obra'\r\nconst API_DETALLE_PEDIDO = 'detallepedido'\r\nconst API_LIQUIDACION = 'liquidacion'\r\nconst API_CLIENTE = 'cliente'\r\nconst API_EMPLEADO = 'empleado'\r\n\r\nconst headers = {\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-Control-Allow-Methods': \"GET, POST, PATCH, PUT, DELETE, OPTIONS\",\r\n    'Access-Control-Allow-Headers': \"Origin, X-Requested-With, Content-Type, Accept\"\r\n}\r\n\r\n// --- USER METHODS ---\r\nexport const login = async ({username, password}) => {\r\n    const URL = `${RAIZ_URL}:8181/login`;\r\n    try {\r\n        const response = await axios.post(URL, {username, password}, {headers})\r\n        const {data: dataResponse, status} = response\r\n        if (typeof dataResponse === 'string' || status !== 200) {\r\n            if (status === 404){\r\n                localStorage.removeItem(\"token\")\r\n            }\r\n            throw new Error(dataResponse)\r\n        } else {\r\n            return dataResponse\r\n        }\r\n    } catch (error) {\r\n        const message = `${error.response ? error.message : error}`;\r\n        console.log(\"Error en el login: \", {method: 'login', URL, message})\r\n    }\r\n}\r\nexport const register = async (user) => POST(`${API_OBRA}`, user);\r\n\r\n// --- OBRA METHODS ---\r\nexport const getObras = async () => GET(`${API_OBRA}`);\r\nexport const postObra = async (obra) => POST(`${API_OBRA}`, obra);\r\nexport const putObra = async (obra) => PUT(`${API_OBRA}/${obra.id}`, obra);\r\n\r\n// --- PEDIDO METHODS ---\r\nexport const getPedidos = async () => GET(`${API_PEDIDO}`);\r\nexport const postPedido = async (pedido) => POST(`${API_PEDIDO}`, pedido);\r\nexport const putPedido = async (pedido) => PUT(`${API_PEDIDO}/${pedido.id}`, pedido);\r\n\r\n// --- DETALLE PEDIDO METHODS ---\r\nexport const postDetalle = async (detallePedido, pedido) => POST(`${API_DETALLE_PEDIDO}/?idPedido=${pedido.id}`, detallePedido);\r\nexport const putDetalle = async (detallePedido) => PUT(`${API_DETALLE_PEDIDO}`, detallePedido);\r\nexport const deleteDetalle = async (detallePedido) => DELETE(`${API_DETALLE_PEDIDO}/id?idDetalle=${detallePedido.id}`);\r\n\r\n// --- PRODUCTO METHODS ---\r\nexport const getProductos = async () => GET(`${API_PRODUCTO}`);\r\nexport const getUnidades = () => GET(`${API_PRODUCTO}/unidades`);\r\nexport const postProducto = async (producto) => POST(`${API_PRODUCTO}`, producto);\r\nexport const putProducto = async (producto) => PUT(`${API_PRODUCTO}`, producto);\r\n\r\n// --- LIQUIDACION METHODS ---\r\nexport const getLiquidaciones = async () => GET(`${API_LIQUIDACION}`);\r\nexport const postLiquidacionTodos = async () => POST(`${API_LIQUIDACION}/todos`);\r\nexport const postLiquidacionEmpleado = async (empleado) => POST(`${API_LIQUIDACION}/empleado?idEmpleado=${empleado.id}`);\r\nexport const postSueldo = async (sueldo) => POST(`${API_LIQUIDACION}/sueldo`, sueldo);\r\nexport const getSueldo = async (empleado) => GET(`${API_LIQUIDACION}/empleado/sueldo?idEmpleado=${empleado.id}`);\r\n\r\n// --- CLIENTE METHODS ---\r\nexport const getClientes = async () => GET(`${API_CLIENTE}`);\r\nexport const postCliente = async (cliente) => POST(`${API_CLIENTE}`, cliente);\r\nexport const putCliente = async (cliente) => PUT(`${API_CLIENTE}`, cliente);\r\n\r\n// --- EMPLEADO METHODS ---\r\nexport const getEmpleados = async () => GET(`${API_EMPLEADO}`);\r\nexport const postEmpleado = async (empleado) => POST(`${API_EMPLEADO}`, empleado);\r\nexport const putEmpleado = async (empleado) => PUT(`${API_EMPLEADO}`, empleado);\r\n\r\nconst getNewHeader = () => {\r\n    const token = localStorage.getItem('token');\r\n    return {...headers, Authorization:`Bearer ${token}`}\r\n}\r\n\r\n// --- GENERAL METHODS ---\r\nexport const POST = async (postfixUrl, data,) => {\r\n    const URL = `${RAIZ_URL}/api/${postfixUrl}`;\r\n    console.log({post_request: URL, data})\r\n    try {\r\n        const response = await axios.post(URL, data, {headers: getNewHeader()})\r\n        const {data: dataResponse, status} = response\r\n        if (typeof dataResponse === 'string' || status !== 200) {\r\n            if (status === 401){\r\n                localStorage.removeItem(\"token\")\r\n                localStorage.removeItem(\"username\")\r\n            }\r\n            throw new Error(dataResponse)\r\n        } else {\r\n            console.log({post_response: URL, dataResponse})\r\n            return dataResponse\r\n        }\r\n    } catch (error) {\r\n        const message = `${error.response ? error.message : error}`;\r\n        console.log(\"Error en método: \", {method: 'POST', URL, message, error: error.response})\r\n    }\r\n}\r\n\r\nexport const PUT = async (postfixUrl, data) => {\r\n    const URL = `${RAIZ_URL}/api/${postfixUrl}`;\r\n\r\n    console.log({put_request: URL, data})\r\n\r\n    try {\r\n        const response = await axios.put(URL, data, {headers: getNewHeader()})\r\n        const {data: dataResponse, status} = response\r\n        if (typeof dataResponse === 'string' || status !== 200) {\r\n            if (status === 401){\r\n                localStorage.removeItem(\"token\")\r\n                localStorage.removeItem(\"username\")\r\n            }\r\n            throw new Error(dataResponse)\r\n        } else {\r\n            console.log({put_response: URL, dataResponse})\r\n            return dataResponse\r\n        }\r\n    } catch (error) {\r\n        const message = `${error.response ? error.message : error}`;\r\n        console.log(\"Error en método: \", {method: 'PUT', URL, message, error: error.response})\r\n    }\r\n}\r\n\r\nexport const GET = async (postfixUrl) => {\r\n    const URL = `${RAIZ_URL}:8181/api/${postfixUrl}`;\r\n    console.log({get_request: URL})\r\n\r\n    try {\r\n        const response = await axios.get(URL, {headers: getNewHeader()})\r\n\r\n        const {data: dataResponse, status} = response\r\n\r\n        if (typeof dataResponse === 'string' || status !== 200) {\r\n            if (status === 401){\r\n                localStorage.removeItem(\"token\")\r\n                localStorage.removeItem(\"username\")\r\n            }\r\n            throw new Error(dataResponse)\r\n        } else {\r\n            console.log(\"Error en método: \", {get_response: URL, dataResponse})\r\n            return dataResponse\r\n        }\r\n    } catch (error) {\r\n        const message = `${error.response ? error.message : error}`;\r\n        console.error({method: 'GET', URL, message, error: error.response})\r\n    }\r\n}\r\n\r\nexport const DELETE = async (postfixUrl) => {\r\n    const URL = `${RAIZ_URL}/api/${postfixUrl}`;\r\n    console.log({delete_request: URL})\r\n\r\n    try {\r\n        let headersCopy = [...headers, {Authorization: `Bearer ${window.accessToken}`}]\r\n        const response = await axios.delete(URL, {headers: headersCopy})\r\n\r\n        const {data: dataResponse, status} = response\r\n\r\n        if (typeof dataResponse === 'string' || status !== 200) {\r\n            if (status === 401){\r\n                localStorage.removeItem(\"token\")\r\n                localStorage.removeItem(\"username\")\r\n            }\r\n            throw new Error(dataResponse)\r\n        } else {\r\n            console.log(\"Error en método: \", {delete_response: URL, dataResponse})\r\n            return dataResponse\r\n        }\r\n    } catch (error) {\r\n        const message = `${error.response ? error.message : error}`;\r\n        console.error({method: 'DELETE', URL, message, error: error.response})\r\n    }\r\n}","import ClientesForm from './ClientesForm';\r\nimport {CeldaBotonTabla, CeldaTabla, EncabezadoTabla, FilaTabla, Tabla} from '../Tabla';\r\nimport {useEffect, useState} from 'react';\r\nimport '../styles/Clientes.css';\r\nimport '../styles/Tabla.css';\r\nimport {getClientes, postCliente, putCliente} from '../../RestServices';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\n\r\nconst clienteInicial = {\r\n    razonSocial: '-',\r\n    habilitadoOnline: true,\r\n    maxCuentaCorriente: 0.0,\r\n    mail: '',\r\n    cuit: ''\r\n};\r\n\r\nconst Clientes = () => {\r\n    const [cliente, setCliente] = useState(clienteInicial);\r\n    const [listaClientes, setListaClientes] = useState([]);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"token\")) {\r\n            getClientes().then(data => {\r\n                if (data) {\r\n                    setListaClientes(data)\r\n                }\r\n            });\r\n        } else {\r\n            history.push(RUTAS.login[2])\r\n        }\r\n    }, [history]);\r\n\r\n    const fetchClientes = () => {\r\n        getClientes().then(data => {\r\n            if (data) {\r\n                setListaClientes(data)\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    const actualizarCliente = (atributo, valor) => {\r\n        const clienteNuevo = {...cliente, [atributo]: valor};\r\n        setCliente(clienteNuevo);\r\n    }\r\n\r\n    const saveOrUpdate = () => {\r\n        (!(cliente.id)) ? postCliente(cliente).then(() => fetchClientes()) :\r\n            putCliente(cliente).then(() => fetchClientes());\r\n        setCliente(clienteInicial);\r\n    };\r\n\r\n    const filasCliente = () => {\r\n        if (listaClientes)\r\n            return listaClientes.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={e.razonSocial}/>\r\n                    <CeldaTabla dato={e.mail}/>\r\n                    <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => setCliente(e)}/>\r\n                </FilaTabla>\r\n            });\r\n        else\r\n            return <></>\r\n    }\r\n\r\n    const encabezado = [\"ID Usuario\", \"Razón Social\", \"e-mail\", \"\"].map((e, i) => <EncabezadoTabla key={i}>{e}</EncabezadoTabla>)\r\n\r\n    const limpiarCampos = () => {\r\n        setCliente(clienteInicial);\r\n    }\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div><h1>Gestion de clientes</h1></div>\r\n            <div className=\"panelForm\">\r\n                <div className=\"panelFormAlta\">\r\n                    <ClientesForm cliente={cliente}\r\n                                  actualizarCliente={actualizarCliente}\r\n                                  saveOrUpdate={saveOrUpdate}\r\n                                  clean={limpiarCampos}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"panel\">\r\n                <Tabla encabezado={encabezado} filas={filasCliente()}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clientes;","import \"../styles/Form.css\";\r\nimport {Label} from \"../FormComponents\";\r\nimport {useState} from \"react\";\r\nimport {login} from \"../../RestServices\";\r\nimport {RUTAS} from \"../../App\";\r\nimport {useAlert} from \"react-alert\";\r\n\r\nconst Login = ({logged, setLogged}) => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const alert = useAlert()\r\n\r\n    const ingresar = () => {\r\n        if (!logged) {\r\n            login({username, password}).then((data) => {\r\n                if (data && data.accessToken) {\r\n                    setLogged(true)\r\n                    localStorage.setItem('token', data.accessToken);\r\n                    localStorage.setItem('username', username);\r\n                    alert.success('Se ha logueado correctamente!')\r\n                } else {\r\n                    alert.error('Revise usuario y/o contraseña')\r\n                    setLogged(false)\r\n                    localStorage.removeItem('token');\r\n                    localStorage.removeItem('username');\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function handleEnter(event) {\r\n        if (event.key === 'Enter') {\r\n            const form = event.target.form;\r\n            const index = Array.prototype.indexOf.call(form, event.target);\r\n            form.elements[index + 1].focus();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    if (logged) {\r\n        return <h1>Bienvenido {localStorage.getItem(\"username\")}!</h1>\r\n    } else {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1 className=\"form-step\"> Login </h1>\r\n                <form id='formLogin'>\r\n                    <div className=\"row\">\r\n                        <Label value=\"Nombre de usuario\"/>\r\n                        <div className=\"col-75\">\r\n                            <input\r\n                                name=\"nombre\"\r\n                                type=\"text\"\r\n                                placeholder=\"Username (dan2021)\"\r\n                                value={username}\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                                onKeyPress={e => handleEnter(e)}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <Label value=\"Contraseña\"/>\r\n                        <div className=\"col-75\">\r\n                            <input\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                placeholder=\"Password (dan2021)\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                onKeyPress={event => {\r\n                                    if (event.key === 'Enter') {\r\n                                        ingresar()\r\n                                    }\r\n                                }}/>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div className=\"row button-login\">\r\n                    <div>\r\n                        <button className=\"btn-wide\" onClick={ingresar}>Ingresar</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import {Label} from \"../FormComponents\";\r\n\r\nconst ObrasForm = ({ obra, actualizarCampos, saveOrUpdate, clean }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        evt.preventDefault();\r\n        // console.log(evt.target.value);\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-box container\">\r\n            <h3>Obra</h3>\r\n            <div className=\"row\">\r\n                <Label value=\"Descripción\"/>\r\n                <div className=\"col-75\">\r\n                    <input name=\"descripcion\"\r\n                        value={obra.descripcion}\r\n                        onChange={handleChange} />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <Label value=\"Latitud\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        type=\"text\"\r\n                        pattern=\"[0-9]*\"\r\n                        name=\"latitud\"\r\n                        value={obra.latitud}\r\n                        onChange={handleChange} />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <Label value=\"Longitud\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        type=\"text\"\r\n                        pattern=\"[0-9]*\"\r\n                        name=\"longitud\"\r\n                        value={obra.longitud}\r\n                        onChange={handleChange} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <Label value=\"Dirección\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        name=\"direccion\"\r\n                        value={obra.direccion}\r\n                        onChange={handleChange} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <Label value=\"Superficie\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        type=\"text\"\r\n                        pattern=\"[0-9]*\"\r\n                        name=\"superficie\"\r\n                        value={obra.superficie}\r\n                        onChange={handleChange} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <Label value=\"Tipo de Obra\"/>\r\n                <div className=\"col-75\">\r\n                    <select name=\"tipoObra\" value={obra.tipoObra} onChange={handleChange} >\r\n                        <option value=\"REFORMA\">Reforma</option>\r\n                        <option value=\"CASA\">Casa</option>\r\n                        <option value=\"EDIFICIO\">Edificio</option>\r\n                        <option value=\"VIAL\">Vial</option>\r\n\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-50 \">\r\n                    <button type=\"button\" onClick={clean}>Limpiar</button>\r\n                </div>\r\n                <div className=\"col-50\">\r\n                    <button type=\"button\" onClick={saveOrUpdate}>Guardar</button>\r\n                </div>\r\n            </div>\r\n        </form >\r\n    );\r\n}\r\n\r\nexport default ObrasForm;","import { ComboForm } from \"../FormComponents\";\r\n\r\nconst ClienteObrasForm = ({ cliente, actualizarCampos, listaClientes }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-box container\">\r\n            <h3>Cliente</h3>\r\n\r\n            <ComboForm\r\n                label='Razon Social'\r\n                placeholder='Razon Social'\r\n                name='razonSocial'\r\n                value={cliente.razonSocial}\r\n                onChange={handleChange}\r\n                opciones={listaClientes.map(c => { return c.razonSocial })} />\r\n\r\n            <ComboForm\r\n                label='CUIT'\r\n                placeholder='CUIT'\r\n                name='cuit'\r\n                value={cliente.cuit}\r\n                onChange={handleChange}\r\n                opciones={listaClientes.map(c => { return c.cuit })} />\r\n\r\n        </form >\r\n    );\r\n}\r\n\r\nexport default ClienteObrasForm;","import {CeldaBotonTabla, CeldaTabla, EncabezadoTabla, FilaTabla, Tabla} from '../Tabla';\r\nimport ObrasForm from \"./ObrasForm\";\r\nimport ClienteObrasForm from \"./ClienteObrasForm\";\r\nimport \"../styles/Form.css\";\r\nimport \"../styles/Tabla.css\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {getClientes, getObras, postObra, putObra} from '../../RestServices';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\n\r\nconst clienteInicial = {\r\n    id: null,\r\n    razonSocial: \"\",\r\n    cuit: \"\"\r\n}\r\n\r\nconst obraInicial = {\r\n    id: null,\r\n    descripcion: \"\",\r\n    latitud: 0,\r\n    longitud: 0,\r\n    direccion: \"\",\r\n    superficie: 0,\r\n    tipoObra: \"\",\r\n    cliente: clienteInicial\r\n}\r\n\r\nconst Obras = () => {\r\n    const history = useHistory();\r\n    const [obra, setObra] = useState(obraInicial);\r\n    const [cliente, setCliente] = useState(clienteInicial);\r\n    const [listaClientes, setListaClientes] = useState([]);\r\n    const [listaObras, setListaObras] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"token\")) {\r\n            fetchClientes();\r\n            fetchObras();\r\n        } else\r\n            history.push(RUTAS.login)\r\n    }, [history]);\r\n\r\n    const fetchClientes = () => {\r\n        getClientes().then(data => {\r\n            if (data)\r\n                setListaClientes(data)\r\n        });\r\n    }\r\n\r\n    const fetchObras = () => {\r\n        getObras().then(data => {\r\n            if (data)\r\n                setListaObras(data)\r\n        });\r\n    }\r\n\r\n    const actualizarObra = (nombreAtributo, valorAtributo) => {\r\n        const nuevaObra = {...obra, [nombreAtributo]: valorAtributo};\r\n        setObra(nuevaObra);\r\n    }\r\n\r\n    const actualizarCliente = (nombreAtributo, valorAtributo) => {\r\n        const index = listaClientes.findIndex(c => c.[nombreAtributo] === valorAtributo);\r\n        setCliente(listaClientes[index])\r\n        const nuevaObra = {...obra, cliente: listaClientes[index]};\r\n        setObra(nuevaObra);\r\n    }\r\n\r\n    const saveOrUpdate = () => {\r\n        const algoObra = () => {\r\n            fetchObras()\r\n        }\r\n        !(obra.id) ? postObra(obra).then(algoObra) : putObra(obra).then(algoObra);\r\n        setObra(obraInicial);\r\n        setCliente(clienteInicial);\r\n    };\r\n\r\n    const cleanObra = () => {\r\n        setObra(obraInicial);\r\n        setCliente(clienteInicial);\r\n    }\r\n\r\n    const filasObras = () => {\r\n        if (listaObras) {\r\n            return listaObras.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={e.descripcion}/>\r\n                    <CeldaTabla dato={e.direccion}/>\r\n                    <CeldaTabla dato={e.superficie}/>\r\n                    <CeldaTabla dato={e.tipoObra}/>\r\n                    <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => {\r\n                        setObra(e);\r\n                        setCliente(e.cliente);\r\n                    }}/>\r\n                </FilaTabla>\r\n            });\r\n        } else {\r\n            return <></>\r\n        }\r\n\r\n    }\r\n\r\n    const encabezado = [\"ID Obra\", \"Descripcion\", \"Direccion\", \"Superficie\", \"Tipo de Obra\", \"\"]\r\n        .map((e) => {\r\n            return <EncabezadoTabla>{e}</EncabezadoTabla>\r\n        })\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div><h1>Gestion de Obras</h1></div>\r\n            <div className=\"panelForm\">\r\n                <div className=\"panelFormAlta\">\r\n                    <ObrasForm\r\n                        obra={obra}\r\n                        actualizarCampos={actualizarObra}\r\n                        clean={cleanObra}\r\n                        saveOrUpdate={saveOrUpdate}/>\r\n                </div>\r\n\r\n                <div className=\"panelFormBusqueda\">\r\n                    <ClienteObrasForm\r\n                        cliente={cliente}\r\n                        actualizarCampos={actualizarCliente}\r\n                        listaClientes={listaClientes}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"panel\">\r\n                <Tabla encabezado={encabezado} filas={filasObras}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Obras;","import '../FormComponents';\r\nimport CampoForm, { ComboForm } from '../FormComponents';\r\n\r\nconst ProductosForm = ({ producto, unidades, actualizarCampos, clean, saveOrUpdate }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        evt.preventDefault();\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-box container\">\r\n            <h3>Producto</h3>\r\n\r\n            <CampoForm label='Nombre del Producto'\r\n                name='nombre'\r\n                value={producto.nombre}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm label='Descripcion'\r\n                name='descripcion'\r\n                value={producto.descripcion}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm label='Precio'\r\n                name='precio'\r\n                pattern=\"[0-9.]*\"\r\n                value={producto.precio}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm label='Stock Actual'\r\n                name='stockActual'\r\n                pattern=\"[0-9.]*\"\r\n                value={producto.stockActual}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm label='Stock Minimo'\r\n                name='stockMinimo'\r\n                pattern=\"[0-9.]*\"\r\n                value={producto.stockMinimo}\r\n                onChange={handleChange} />\r\n\r\n            <ComboForm\r\n                label=\"Unidad\"\r\n                name=\"unidad\"\r\n                value={producto.unidad.descripcion}\r\n                opciones={unidades ? unidades.map(u => { return u.descripcion }) : []}\r\n                onChange={handleChange} />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-50 \">\r\n                    <button type=\"button\" onClick={clean}>Limpiar</button>\r\n                </div>\r\n                <div className=\"col-50\">\r\n                    <button type=\"button\" onClick={saveOrUpdate}>Guardar</button>\r\n                </div>\r\n            </div>\r\n        </form >\r\n    );\r\n}\r\n\r\nexport default ProductosForm;","import {CeldaBotonTabla, CeldaTabla, EncabezadoTabla, FilaTabla, Tabla} from '../Tabla';\r\nimport ProductosForm from './ProductosForm';\r\nimport '../styles/Form.css';\r\nimport '../styles/Clientes.css';\r\nimport {useEffect, useState} from 'react';\r\nimport {getProductos, getUnidades, postProducto, putProducto} from '../../RestServices';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\nimport {useAlert} from \"react-alert\";\r\n\r\nconst unidadInicial = {\r\n    descripcion: ''\r\n}\r\n\r\nconst productoInicial = {\r\n    nombre: '',\r\n    descripcion: '',\r\n    precio: 0,\r\n    stockActual: 0,\r\n    stockMinimo: 0,\r\n    unidad: unidadInicial\r\n}\r\n\r\nconst Productos = () => {\r\n    const history = useHistory();\r\n    const alert = useAlert();\r\n    const [producto, setProducto] = useState(productoInicial);\r\n    const [listaProductos, setListaProductos] = useState([]);\r\n    const [listaUnidades, setListaUnidades] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"token\")) {\r\n            fetchProductos();\r\n        } else\r\n            history.push(RUTAS.login)\r\n    }, [history]);\r\n\r\n    const fetchProductos = () => {\r\n        getProductos().then(data => {\r\n            if (data)\r\n                setListaProductos(data)\r\n        });\r\n        getUnidades().then(data => {\r\n            if (data)\r\n                setListaUnidades(data)\r\n        });\r\n    }\r\n\r\n    const actualizarProducto = (nombreAtributo, valorAtributo) => {\r\n        if (nombreAtributo === 'unidad') valorAtributo = {...unidadInicial, descripcion: valorAtributo};\r\n        const nuevoProducto = {...producto, [nombreAtributo]: valorAtributo};\r\n        setProducto(nuevoProducto);\r\n    }\r\n\r\n    const saveOrUpdate = () => {\r\n        !(producto.id) ? postProducto(producto).then(() => fetchProductos()) :\r\n            putProducto(producto).then(() => fetchProductos());\r\n        setProducto(productoInicial);\r\n    };\r\n\r\n    const cleanProducto = () => {\r\n        setProducto(productoInicial);\r\n    }\r\n\r\n    const filasProductos = () => {\r\n        if (listaProductos)\r\n            return listaProductos.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={e.nombre}/>\r\n                    <CeldaTabla dato={e.descripcion}/>\r\n                    <CeldaTabla dato={e.precio}/>\r\n                    <CeldaTabla dato={e.stockActual}/>\r\n                    <CeldaTabla dato={e.stockMinimo}/>\r\n                    <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => setProducto(e)}/>\r\n                </FilaTabla>\r\n            });\r\n        else\r\n            return <></>\r\n    }\r\n\r\n    const encabezado = [\"ID Producto\", \"Nombre\", \"Descripcion\", \"Precio\", \"Stock Actual\", \"Stock Minimo\", \"\"]\r\n        .map((e, i) => {\r\n            return <EncabezadoTabla key={i}>{e}</EncabezadoTabla>\r\n        })\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div><h1>Productos</h1></div>\r\n            <div className=\"panel\">\r\n                <ProductosForm\r\n                    producto={producto}\r\n                    unidades={listaUnidades}\r\n                    actualizarCampos={actualizarProducto}\r\n                    clean={cleanProducto}\r\n                    saveOrUpdate={saveOrUpdate}/>\r\n            </div>\r\n            <div className=\"panel\">\r\n                <Tabla encabezado={encabezado} filas={filasProductos}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Productos;","import CampoForm, { ComboForm } from \"../FormComponents\";\r\n\r\nconst PedidosForm = ({ pedido, actualizarCampos, clean, saveOrUpdate, verDetalle, obras }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        evt.preventDefault();\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    const estadosPedido =\r\n        ['NUEVO', 'CONFIRMADO', 'PENDIENTE', 'CANCELADO', 'ACEPTADO', 'RECHAZADO', 'EN_PREPARACION', 'ENTREGADO'];\r\n    return (\r\n        <form className=\"form-box container\">\r\n            <CampoForm\r\n                label='Fecha'\r\n                name='fechaPedido'\r\n                value={pedido.fechaPedido}\r\n                onChange={handleChange} />\r\n            <ComboForm\r\n                label='Obra'\r\n                name='obra'\r\n                onChange={handleChange}\r\n                opciones={obras.map(o => { return o.id })} />\r\n            <ComboForm\r\n                label='Estado'\r\n                name='estado'\r\n                value={pedido.estado}\r\n                onChange={handleChange}\r\n                opciones={estadosPedido} />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-25 \">\r\n                    <button type=\"button\" onClick={clean}>Limpiar</button>\r\n                </div>\r\n                <div className=\"col-50\">\r\n                    <button type=\"button\" onClick={verDetalle}>Ver Detalle</button>\r\n                </div>\r\n                <div className=\"col-25\">\r\n                    <button type=\"button\" onClick={saveOrUpdate}>Guardar</button>\r\n                </div>\r\n            </div>\r\n        </form >\r\n    );\r\n}\r\n\r\nexport default PedidosForm;","import '../FormComponents'\r\nimport CampoForm, { ComboForm } from '../FormComponents';\r\n\r\nconst DetallePedidoForm = ({ detallePedido, actualizarCampos, listaProductos, saveOrUpdate }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"formbox container\">\r\n\r\n            <CampoForm\r\n                label='Cantidad'\r\n                pattern='[0-9.]*'\r\n                name='cantidad'\r\n                value={detallePedido.cantidad}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm\r\n                label='Precio'\r\n                name='precio'\r\n                readOnly={true}\r\n                value={(detallePedido.cantidad ?? 0) * (detallePedido.producto.precio ?? 1)} />\r\n\r\n            <ComboForm\r\n                label='Producto'\r\n                name='producto'\r\n                onChange={handleChange}\r\n                value={detallePedido.producto.nombre}\r\n                opciones={listaProductos.map(p => { return p.nombre })} />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-25\" />\r\n                <div className=\"col-75\">\r\n                    <button className=\"btn-wide\" type=\"button\" onClick={saveOrUpdate}>Guardar</button>\r\n                </div>\r\n            </div>\r\n        </form >\r\n    );\r\n}\r\n\r\nexport default DetallePedidoForm;","import {Tabla, FilaTabla, CeldaTabla, CeldaBotonTabla, EncabezadoTabla} from '../Tabla';\r\nimport PedidosForm from './PedidosForm';\r\nimport DetallePedidoForm from './DetallePedidoForm'\r\nimport '../styles/Form.css';\r\nimport '../styles/Clientes.css';\r\nimport {useEffect, useState} from \"react\";\r\nimport {\r\n    getPedidos,\r\n    postPedido,\r\n    putPedido,\r\n    postDetalle,\r\n    putDetalle,\r\n    deleteDetalle,\r\n    getProductos,\r\n    getObras\r\n} from '../../RestServices';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\n\r\nconst pedidoInicial = {\r\n    id: null,\r\n    fechaPedido: '',\r\n    obra: '',\r\n    estado: 'NUEVO',\r\n    detalle: []\r\n}\r\n\r\nconst detallePedidoInicial = {\r\n    id: null,\r\n    cantidad: '',\r\n    precio: 0,\r\n    producto: ''\r\n}\r\n\r\nconst Pedidos = () => {\r\n    const history = useHistory();\r\n\r\n    const [pedido, setPedido] = useState(pedidoInicial);\r\n    const [listaPedidos, setListaPedidos] = useState([]);\r\n\r\n    const [detallePedido, setDetalle] = useState(detallePedidoInicial);\r\n    const [listaDetalle, setListaDetalle] = useState([]);\r\n    const [listaProductos, setListaProductos] = useState([]);\r\n    const [listaObras, setListaObras] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"token\")){\r\n            fetchPedidos();\r\n            fetchProductos();\r\n            fetchObras();\r\n        }\r\n        else\r\n            history.push(RUTAS.login)\r\n\r\n    }, [listaPedidos, listaDetalle, history]);\r\n\r\n    const fetchPedidos = () => {\r\n        getPedidos().then(data => {\r\n            if (data)\r\n                setListaPedidos(data)\r\n        })\r\n    }\r\n\r\n    const fetchProductos = () => {\r\n        getProductos().then(data => {\r\n            if (data)\r\n                setListaProductos(data)\r\n        });\r\n    }\r\n\r\n    const fetchObras = () => {\r\n        getObras().then(data => {\r\n            if (data)\r\n                setListaObras(data)\r\n        });\r\n    }\r\n\r\n    const actualizarPedido = (nombreAtributo, valorAtributo) => {\r\n        if (nombreAtributo === 'obra') {\r\n            const index = listaObras.findIndex(o => o.id === valorAtributo);\r\n            const nuevoPedido = {...pedido, obra: listaObras[index]};\r\n            setPedido(nuevoPedido);\r\n        } else {\r\n            const nuevoPedido = {...pedido, [nombreAtributo]: valorAtributo};\r\n            setPedido(nuevoPedido);\r\n        }\r\n    }\r\n\r\n    const saveOrUpdatePedido = () => {\r\n        !(pedido.id) ? postPedido(pedido).then(() => fetchPedidos()) :\r\n            putPedido(pedido).then(() => fetchPedidos());\r\n        cleanPedido();\r\n    };\r\n\r\n    const cleanPedido = () => {\r\n        setPedido(pedidoInicial);\r\n        setListaDetalle([]);\r\n        setDetalle(detallePedidoInicial);\r\n    }\r\n\r\n    const actualizarDetalle = (nombreAtributo, valorAtributo) => {\r\n        if (nombreAtributo === 'producto') {\r\n            const index = listaProductos.findIndex(p => p.nombre === valorAtributo);\r\n            const nuevoDetalle = {\r\n                ...detallePedido,\r\n                producto: listaProductos[index],\r\n                precio: (detallePedido.cantidad ?? 0) * (listaProductos[index] ? listaProductos[index].precio : 1)\r\n            };\r\n            setDetalle(nuevoDetalle)\r\n        } else {\r\n            const nuevoDetalle = {...detallePedido, [nombreAtributo]: valorAtributo};\r\n            setDetalle(nuevoDetalle);\r\n        }\r\n    }\r\n\r\n    const saveOrUpdateDetalle = () => {\r\n        !(detallePedido.id) ? postDetalle(detallePedido, pedido).then(() => fetchPedidos()) :\r\n            putDetalle(detallePedido).then(() => fetchPedidos());\r\n    };\r\n\r\n    const filasPedidos = () => {\r\n        if (listaPedidos){\r\n            listaPedidos.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={e.fechaPedido}/>\r\n                    <CeldaTabla dato={e.obra.id}/>\r\n                    <CeldaTabla dato={e.estado}/>\r\n                    <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => seleccionarPedido(e)}/>\r\n                </FilaTabla>\r\n            });\r\n        }\r\n        else\r\n            return <></>\r\n    }\r\n\r\n    const encabezado = [\"ID Pedido\", \"Fecha de Pedido\", \"ID Obra\", \"Estado\"]\r\n        .map((e, i) => {\r\n            return <EncabezadoTabla key={i}>{e}</EncabezadoTabla>\r\n        })\r\n\r\n    const seleccionarPedido = (p) => {\r\n        setPedido(p);\r\n        setListaDetalle(p.detalle);\r\n        setDetalle(detallePedidoInicial);\r\n    }\r\n\r\n    const eliminarDetalle = (d) => {\r\n        deleteDetalle(d).then(() => fetchPedidos());\r\n    }\r\n\r\n    const filasDetalle = listaDetalle.map((e, i) => {\r\n        return <FilaTabla key={i}>\r\n            <CeldaTabla dato={e.id}/>\r\n            <CeldaTabla dato={e.cantidad}/>\r\n            <CeldaTabla dato={e.precio}/>\r\n            <CeldaTabla dato={e.producto.nombre}/>\r\n            <CeldaBotonTabla titulo=\"Eliminar\" accion={() => eliminarDetalle(e)}/>\r\n            <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => setDetalle(e)}/>\r\n        </FilaTabla>\r\n    });\r\n\r\n    const encabezadoDetalle = [\"ID Detalle\", \"Cantidad\", \"Precio\", \"Producto\", \"Eliminar\", \"Seleccionar\"]\r\n        .map((e, i) => {\r\n            return <EncabezadoTabla key={i}>{e}</EncabezadoTabla>\r\n        })\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div><h1>Pedidos</h1></div>\r\n            <div className=\"panelForm\">\r\n                <div className=\"panelFormAlta\">\r\n                    <PedidosForm\r\n                        pedido={pedido}\r\n                        actualizarCampos={actualizarPedido}\r\n                        clean={cleanPedido}\r\n                        saveOrUpdate={saveOrUpdatePedido}\r\n                        obras={listaObras}/>\r\n                </div>\r\n                <div className=\"panelFormAlta\">\r\n                    <DetallePedidoForm\r\n                        detallePedido={detallePedido}\r\n                        listaProductos={listaProductos}\r\n                        actualizarCampos={actualizarDetalle}\r\n                        saveOrUpdate={saveOrUpdateDetalle}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"panel\">\r\n                <div><h3>Detalle</h3></div>\r\n                <Tabla encabezado={encabezadoDetalle} filas={filasDetalle}/>\r\n                <div><h3>Pedidos</h3></div>\r\n                <Tabla encabezado={encabezado} filas={filasPedidos}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Pedidos;","import {useEffect, useState} from 'react';\r\nimport {CeldaBotonTabla, CeldaTabla, EncabezadoTabla, FilaTabla, Tabla} from '../Tabla'\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\n\r\nconst Pagos = () => {\r\n    const history = useHistory();\r\n\r\n    const [listaPedidos, setListaPedidos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"token\")) {\r\n            history.push(RUTAS.login)\r\n        }\r\n    }, [history]);\r\n\r\n    const abonarPedido = () => {\r\n        console.log(\"Abonar pedido listo\")\r\n    }\r\n\r\n    const filasPedidos = () => {\r\n        if (listaPedidos) {\r\n            return listaPedidos.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={e.fechaPedido}/>\r\n                    <CeldaTabla dato={e.obra}/>\r\n                    <CeldaTabla dato={e.estado}/>\r\n                    <CeldaBotonTabla titulo=\"Abonar\" accion={() => abonarPedido(e)}/>\r\n                </FilaTabla>\r\n            });\r\n        } else return <></>\r\n    }\r\n\r\n    const encabezado = [\"ID Pedido\", \"Fecha de Pedido\", \"ID Obra\", \"Estado\", \"\"]\r\n        .map((e) => {\r\n            return <EncabezadoTabla>{e}</EncabezadoTabla>\r\n        })\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div><h1>Pagos</h1></div>\r\n            <div className=\"panel\">\r\n                <div><h3>Pedidos</h3></div>\r\n                <Tabla encabezado={encabezado} filas={filasPedidos}/>\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default Pagos;","import '../FormComponents'\r\nimport CampoForm, { ComboForm } from '../FormComponents'\r\n\r\nconst LiquidacionForm = ({ empleado, actualizarCampos, listaEmpleados, liquidarTodos, liquidarEmpleado, actualizarCamposSueldo, actualizarSueldoEmpleado, sueldoEmpleado }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(valorAtributo);\r\n    }\r\n    const handleChangeSueldo = (evt) => {\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCamposSueldo(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className='formbox-container'>\r\n            <ComboForm\r\n                label=\"Empleado\"\r\n                name=\"nombre\"\r\n                value={empleado.nombre}\r\n                onChange={handleChange}\r\n                opciones={listaEmpleados.map(e => { return e.nombre })}\r\n            />\r\n            <CampoForm\r\n                label=\"Monto\"\r\n                name=\"monto\"\r\n                pattern=\"[0-9.]*\"\r\n                value={sueldoEmpleado.monto}\r\n                onChange={handleChangeSueldo} />\r\n            <CampoForm\r\n                label=\"Porcentaje de comision\"\r\n                name=\"comision\"\r\n                pattern=\"[0-9.]*\"\r\n                value={sueldoEmpleado.comision}\r\n                onChange={handleChangeSueldo}\r\n            />\r\n            <div className=\"row\">\r\n                <div className=\"col-25\" />\r\n                <div className=\"col-25\">\r\n                    <button type=\"button\" onClick={actualizarSueldoEmpleado}>Actualizar Sueldo</button>\r\n                </div>\r\n                <div className=\"col-25\">\r\n                    <button type=\"button\" onClick={liquidarEmpleado}>Liquidar Empleado</button>\r\n                </div>\r\n                <div className=\"col-25\">\r\n                    <button type=\"button\" onClick={liquidarTodos}>Liquidar a todos</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default LiquidacionForm;","import {useState} from \"react\";\r\nimport LiquidacionForm from \"./LiquidacionForm\";\r\nimport '../Tabla';\r\nimport '../styles/Form.css';\r\nimport '../styles/Clientes.css';\r\nimport {CeldaTabla, EncabezadoTabla, FilaTabla, Tabla} from '../Tabla';\r\nimport {\r\n    getEmpleados,\r\n    getLiquidaciones,\r\n    getSueldo,\r\n    postLiquidacionEmpleado,\r\n    postLiquidacionTodos,\r\n    postSueldo\r\n} from \"../../RestServices\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\n\r\nconst empleadoInicial = {\r\n    nombre: ''\r\n}\r\n\r\nconst sueldoInicial = {\r\n    monto: 0,\r\n    comision: 0\r\n}\r\n\r\nconst Liquidacion = () => {\r\n    const history = useHistory();\r\n    const [listaLiquidacion, setListaLiquidacion] = useState([]);\r\n    const [listaEmpleados, setListaEmpleados] = useState([]);\r\n    const [empleado, setEmpleado] = useState(empleadoInicial);\r\n    const [sueldo, setSueldo] = useState(sueldoInicial);\r\n\r\n    const fetchEmpleados = () => {\r\n        getEmpleados().then(data => {\r\n            if (data)\r\n                setListaEmpleados(data)\r\n        });\r\n    }\r\n\r\n    const fetchLiquidacion = () => {\r\n        getLiquidaciones().then(data => {\r\n            if (data)\r\n                setListaLiquidacion(data)\r\n        });\r\n    }\r\n\r\n    const fetchSueldo = (empleado) => {\r\n        getSueldo(empleado).then(data => {\r\n            if (data)\r\n                setSueldo(data)\r\n        });\r\n    }\r\n\r\n    useState(() => {\r\n        if (localStorage.getItem(\"token\")) {\r\n            fetchEmpleados();\r\n            fetchLiquidacion();\r\n        } else\r\n            history.push(RUTAS.login)\r\n\r\n    }, [history]);\r\n\r\n    const liquidarEmpleado = () => {\r\n        postLiquidacionEmpleado(empleado).then(() => fetchLiquidacion());\r\n    }\r\n\r\n    const liquidarTodos = () => {\r\n        postLiquidacionTodos().then(() => fetchLiquidacion());\r\n    }\r\n\r\n    const actualizarEmpleado = (valorAtributo) => {\r\n        const index = listaEmpleados.findIndex(e => e.nombre === valorAtributo);\r\n        setEmpleado(listaEmpleados[index]);\r\n        fetchSueldo(listaEmpleados[index]);\r\n    }\r\n\r\n    const actualizarCamposSueldo = (nombreAtributo, valorAtributo) => {\r\n        const nuevoSueldo = {...sueldo, [nombreAtributo]: valorAtributo};\r\n        setSueldo(nuevoSueldo);\r\n    }\r\n\r\n    const actualizarSueldoEmpleado = () => {\r\n        console.log(sueldo);\r\n        postSueldo(sueldo).then(() => {\r\n            fetchSueldo()\r\n        });\r\n    }\r\n\r\n\r\n    const filasLiquidacion = () => {\r\n        if (listaLiquidacion)\r\n            return listaLiquidacion.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={\r\n                        listaEmpleados[listaEmpleados.findIndex(o => o.id === e.empleado.id)].nombre\r\n                    }/>\r\n                    <CeldaTabla dato={e.fecha}/>\r\n                    <CeldaTabla dato={e.monto}/>\r\n                </FilaTabla>\r\n            });\r\n        else\r\n            return <></>\r\n    }\r\n\r\n    const encabezado = [\"ID Liquidacion\", \"Empleado\", \"Fecha\", \"Monto\"].map((e) =>\r\n        <EncabezadoTabla>{e}</EncabezadoTabla>)\r\n\r\n    return (\r\n        <div className='box'>\r\n            <div><h3>Liquidacion</h3></div>\r\n\r\n            <div className=\"panelForm\">\r\n                <div className=\"panelFormAlta\">\r\n                    <LiquidacionForm\r\n                        empleado={empleado}\r\n                        listaEmpleados={listaEmpleados}\r\n                        actualizarCampos={actualizarEmpleado}\r\n                        actualizarCamposSueldo={actualizarCamposSueldo}\r\n                        actualizarSueldoEmpleado={actualizarSueldoEmpleado}\r\n                        liquidarEmpleado={liquidarEmpleado}\r\n                        liquidarTodos={liquidarTodos}\r\n                        sueldoEmpleado={sueldo}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"panelForm\">\r\n                <Tabla encabezado={encabezado} filas={filasLiquidacion}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Liquidacion","import {Link} from \"react-router-dom\";\r\nimport './styles/App.css'\r\nimport {RUTAS} from \"../App\";\r\n\r\nconst NavBar = ({logout}) => {\r\n\r\n    return (\r\n        <nav>\r\n            <ul className=\"nav-links\">\r\n                <Link className=\"nav-links\" to={RUTAS.clientes}>\r\n                    <li>Clientes</li>\r\n                </Link>\r\n                <Link className=\"nav-links\" to={RUTAS.obras}>\r\n                    <li>Obras</li>\r\n                </Link>\r\n                <Link className=\"nav-links\" to={RUTAS.pagos}>\r\n                    <li>Pagos</li>\r\n                </Link>\r\n                <Link className=\"nav-links\" to={RUTAS.pedidos}>\r\n                    <li>Pedidos</li>\r\n                </Link>\r\n                <Link className=\"nav-links\" to={RUTAS.productos}>\r\n                    <li>Productos</li>\r\n                </Link>\r\n                <Link className=\"nav-links\" to={RUTAS.liquidacion}>\r\n                    <li>Liquidación</li>\r\n                </Link>\r\n                <Link className=\"nav-links\" to={RUTAS.login} onClick={() => logout()}>\r\n                    <li>Cerrar Sesión</li>\r\n                </Link>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport {useEffect, useState} from \"react\";\r\nimport Clientes from \"./components/clientes/Clientes\";\r\nimport Login from \"./components/login/Login\";\r\nimport Obras from \"./components/obras/Obras\"\r\nimport Productos from \"./components/productos/Productos\";\r\nimport Pedidos from './components/pedidos/Pedidos';\r\nimport Pagos from './components/pagos/Pagos';\r\nimport Liquidacion from './components/liquidacion/Liquidacion'\r\nimport NavBar from './components/NavBar';\r\nimport {useAlert} from \"react-alert\";\r\n\r\nexport const RUTAS = {\r\n    login: \"/\",\r\n    clientes: \"/page/clientes\",\r\n    obras: \"/page/obras\",\r\n    productos: \"/page/productos\",\r\n    pedidos: \"/page/pedidos\",\r\n    pagos: \"/page/pagos\",\r\n    liquidacion: \"/page/liquidacion\",\r\n    logout: \"/logout\"\r\n}\r\n\r\nfunction App() {\r\n    const [logged, setLogged] = useState(false);\r\n    const alert = useAlert()\r\n\r\n    useEffect(() => {\r\n        setLogged(localStorage.getItem(\"token\") !== null && localStorage.getItem(\"token\") !== undefined)\r\n    }, []);\r\n\r\n    const logout = () => {\r\n        alert.info(\"Sesión cerrada\")\r\n        setLogged(false)\r\n        localStorage.removeItem('token')\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Router>\r\n                {logged ? <NavBar logout={logout}/> : <></>}\r\n\r\n                <Switch>\r\n\r\n                    <Route exact path={RUTAS.login}>\r\n                        <Login logged={logged} setLogged={setLogged}/>\r\n                    </Route>\r\n                    <Route path={RUTAS.clientes} component={Clientes}/>\r\n                    <Route path={RUTAS.obras} component={Obras}/>\r\n                    <Route path={RUTAS.productos} component={Productos}/>\r\n                    <Route path={RUTAS.pedidos} component={Pedidos}/>\r\n                    <Route path={RUTAS.pagos} component={Pagos}/>\r\n                    <Route path={RUTAS.liquidacion} component={Liquidacion}/>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {positions, Provider as AlertProvider, transitions} from 'react-alert'\r\nimport AlertTemplate from 'react-alert-template-basic'\r\n\r\n// optional configuration\r\nconst options = {\r\n    // you can also just use 'bottom center'\r\n    position: positions.BOTTOM_RIGHT,\r\n    timeout: 3000,\r\n    offset: '10px',\r\n    // you can also just use 'scale'\r\n    transition: transitions.SCALE\r\n}\r\n\r\nconst Root = () => (\r\n    <AlertProvider template={AlertTemplate} {...options}>\r\n        <App/>\r\n    </AlertProvider>\r\n)\r\n\r\nrender(<Root/>, document.getElementById('root'))\r\n"],"sourceRoot":""}