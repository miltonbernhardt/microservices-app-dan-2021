{"version":3,"sources":["components/clientes/ClientesForm.jsx","components/Tabla.jsx","RestServices.js","components/clientes/Clientes.jsx","components/Login.jsx","components/obras/ObrasForm.jsx","components/FormComponents.jsx","components/obras/ClienteObrasForm.jsx","components/obras/Obras.jsx","components/productos/ProductosForm.jsx","components/productos/Productos.jsx","components/pedidos/PedidosForm.jsx","components/pedidos/DetallePedidoForm.jsx","components/pedidos/Pedidos.jsx","components/pagos/Pagos.jsx","components/liquidacion/LiquidacionForm.jsx","components/liquidacion/Liquidacion.jsx","components/NavBar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Label","value","className","Button","action","label","type","onClick","ClientesForm","cliente","actualizarCliente","saveOrUpdate","clean","handleChange","evt","nombreAtributo","target","name","valorAtributo","checked","validity","valid","razonSocial","onChange","pattern","cuit","mail","maxCuentaCorriente","habilitadoOnline","Tabla","titulo","encabezado","filas","EncabezadoTabla","children","FilaTabla","CeldaTabla","dato","CeldaBotonTabla","accion","RAIZ_URL","PORT","API_PRODUCTO","API_PEDIDO","API_OBRA","API_DETALLE_PEDIDO","API_LIQUIDACION","API_CLIENTE","API_EMPLEADO","headers","getObras","a","GET","postObra","obra","POST","putObra","PUT","id","getPedidos","postPedido","pedido","putPedido","postDetalle","detallePedido","putDetalle","deleteDetalle","DELETE","getProductos","postProducto","producto","putProducto","getLiquidaciones","postLiquidacionTodos","postLiquidacionEmpleado","empleado","postSueldo","sueldo","getSueldo","getClientes","postCliente","putCliente","getEmpleados","postfixUrl","data","URL","console","log","post_request","axios","post","response","dataResponse","status","Error","post_response","error","method","message","put_request","put","put_response","get_request","get","get_response","delete_request","delete","delete_response","clienteInicial","Clientes","useState","setCliente","listaClientes","setListaClientes","useEffect","then","fetchClientes","map","e","i","atributo","valor","clienteNuevo","Login","usuario","ingresar","actualizarCampos","preventDefault","placeholder","nombre","password","ObrasForm","descripcion","latitud","longitud","direccion","superficie","tipoObra","ComboForm","opciones","options","o","index","CampoForm","readOnly","ClienteObrasForm","c","obraInicial","Obras","setObra","listaObras","setListaObras","fetchObras","filasObras","nuevaObra","findIndex","ProductosForm","unidades","precio","stockActual","stockMinimo","unidad","u","unidadInicial","productoInicial","Productos","setProducto","listaProductos","setListaProductos","listaUnidades","setListaUnidades","fetchProductos","nuevoProducto","PedidosForm","verDetalle","obras","fechaPedido","estado","DetallePedidoForm","cantidad","p","pedidoInicial","detalle","detallePedidoInicial","Pedidos","setPedido","listaPedidos","setListaPedidos","setDetalle","listaDetalle","setListaDetalle","fetchPedidos","cleanPedido","filasPedidos","seleccionarPedido","filasDetalle","encabezadoDetalle","nuevoPedido","nuevoDetalle","Pagos","LiquidacionForm","listaEmpleados","liquidarTodos","liquidarEmpleado","actualizarCamposSueldo","actualizarSueldoEmpleado","sueldoEmpleado","handleChangeSueldo","monto","comision","empleadoInicial","sueldoInicial","Liquidacion","listaLiquidacion","setListaLiquidacion","setListaEmpleados","setEmpleado","setSueldo","fetchLiquidacion","fetchSueldo","filasLiquidacion","fecha","nuevoSueldo","NavBar","to","usuarioInicial","autenticado","App","setUsuario","exact","path","nuevoUsuario","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3022fa72.chunk.js","sourcesContent":["import \"../styles/Form.css\";\r\n\r\nconst Label = ({value}) => {\r\n    return (\r\n        <div className=\"col-25 form-label\">\r\n            <label>{value}</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ClientesForm = ({cliente, actualizarCliente, saveOrUpdate, clean}) => {\r\n\r\n    const handleChange = evt => {\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.type === 'checkbox' ?\r\n            evt.target.checked : evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCliente(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-box container\">\r\n            <div className=\"row\">\r\n                <Label value=\"Razon Social\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        name=\"razonSocial\"\r\n                        value={cliente.razonSocial}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <Label value=\"Cuit\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        type=\"text\"\r\n                        pattern=\"[0-9]*\"\r\n                        name=\"cuit\"\r\n                        value={cliente.cuit}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <Label value=\"Email\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        name=\"mail\"\r\n                        value={cliente.mail}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <Label value=\"Maximo Descubierto\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        type=\"text\"\r\n                        pattern=\"[0-9.]*\"\r\n                        name=\"maxCuentaCorriente\"\r\n                        value={cliente.maxCuentaCorriente}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <Label value=\"Habilitado Online\"/>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        name=\"habilitadoOnline\"\r\n                        type=\"checkbox\"\r\n                        checked={cliente.habilitadoOnline}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <Button label=\"Cancelar action\" action={clean}/>\r\n                <Button label=\"Guardar\" action={() => saveOrUpdate()}/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst Button = ({action, label}) =>\r\n    <div className=\"col-50\">\r\n        <button type=\"button\" onClick={action}>{label}</button>\r\n    </div>\r\n\r\nexport default ClientesForm;","import React from 'react';\r\n\r\nexport const Tabla = ({titulo = '', encabezado, filas}) => {\r\n\r\n    return (\r\n        <div>\r\n            <h2>{titulo}</h2>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        {encabezado}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                     {filas}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const EncabezadoTabla = ({children}) => {\r\n    return (\r\n        <th>\r\n            {children}\r\n        </th>\r\n    )\r\n}\r\nexport const FilaTabla = ({children}) => {\r\n    return (\r\n        <tr>\r\n            {children}\r\n        </tr>\r\n    )\r\n}\r\nexport const CeldaTabla = ({dato}) => {\r\n    return (\r\n        <td className=\"celdaTabla\">\r\n            {dato}\r\n        </td>\r\n    )\r\n}\r\nexport const CeldaBotonTabla = ({titulo, accion}) => {\r\n    return (\r\n        <td className=\"celdaTabla\">\r\n            <button onClick={accion}>{titulo}</button>\r\n        </td>\r\n    )\r\n}\r\n\r\nexport default Tabla;","import axios from 'axios';\r\n\r\nconst RAIZ_URL = 'http://localhost';\r\nconst PORT = 8181; //TODO arreglar esto pordio\r\nconst API_PRODUCTO = 'producto'\r\nconst API_PEDIDO = 'pedido'\r\nconst API_OBRA = 'obra'\r\nconst API_DETALLE_PEDIDO = 'detallepedido'\r\nconst API_LIQUIDACION = 'liquidacion'\r\nconst API_CLIENTE = 'cliente'\r\nconst API_EMPLEADO = 'empleado'\r\n\r\nconst headers = {\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-Control-Allow-Methods': \"GET, POST, PATCH, PUT, DELETE, OPTIONS\",\r\n    'Access-Control-Allow-Headers': \"Origin, X-Requested-With, Content-Type, Accept\",//Origin, Content-Type, X-Auth-Token\r\n    'Authorization': 'Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkYW4yMDIxIiwiaWF0IjoxNjI5Njc5MzE4fQ.S0vnGCmthN6yHcVK2t2ldbeJbYhQsqufpmc4CFxLUONwYUY1sgRuIrc0lBrKm9cyDQ0T6Mi4bZ8zJQZRxoCWxg'\r\n}\r\n\r\n\r\n// --- OBRA METHODS ---\r\nexport const getObras = async () => GET(`${API_OBRA}`);\r\nexport const postObra = async (obra) => POST(`${API_OBRA}`, obra);\r\nexport const putObra = async (obra) => PUT(`${API_OBRA}/${obra.id}`, obra);\r\n\r\n// --- PEDIDO METHODS ---\r\nexport const getPedidos = async () => GET(`${API_PEDIDO}`);\r\nexport const postPedido = async (pedido) => POST(`${API_PEDIDO}`, pedido);\r\nexport const putPedido = async (pedido) => PUT(`${API_PEDIDO}/${pedido.id}`, pedido);\r\n\r\n// --- DETALLE PEDIDO METHODS ---\r\nexport const postDetalle = async (detallePedido, pedido) => POST(`${API_DETALLE_PEDIDO}/?idPedido=${pedido.id}`, detallePedido);\r\nexport const putDetalle = async (detallePedido) => PUT(`${API_DETALLE_PEDIDO}`, detallePedido);\r\nexport const deleteDetalle = async (detallePedido) => DELETE(`${API_DETALLE_PEDIDO}/id?idDetalle=${detallePedido.id}`);\r\n\r\n// --- PRODUCTO METHODS ---\r\nexport const getProductos = async () => GET(`${API_PRODUCTO}`);\r\nexport const getUnidades = () => GET(`${API_PRODUCTO}/unidades`);\r\nexport const postProducto = async (producto) => POST(`${API_PRODUCTO}`, producto);\r\nexport const putProducto = async (producto) => PUT(`${API_PRODUCTO}`, producto);\r\n\r\n// --- LIQUIDACION METHODS ---\r\nexport const getLiquidaciones = async () => GET(`${API_LIQUIDACION}`);\r\nexport const postLiquidacionTodos = async () => POST(`${API_LIQUIDACION}/todos`);\r\nexport const postLiquidacionEmpleado = async (empleado) => POST(`${API_LIQUIDACION}/empleado?idEmpleado=${empleado.id}`);\r\nexport const postSueldo = async (sueldo) => POST(`${API_LIQUIDACION}/sueldo`, sueldo);\r\nexport const getSueldo = async (empleado) => GET(`${API_LIQUIDACION}/empleado/sueldo?idEmpleado=${empleado.id}`);\r\n\r\n// --- CLIENTE METHODS ---\r\nexport const getClientes = async () => GET(`${API_CLIENTE}`);\r\nexport const postCliente = async (cliente) => POST(`${API_CLIENTE}`, cliente);\r\nexport const putCliente = async (cliente) => PUT(`${API_CLIENTE}`, cliente);\r\n\r\n// --- EMPLEADO METHODS ---\r\nexport const getEmpleados = async () => GET(`${API_EMPLEADO}`);\r\nexport const postEmpleado = async (empleado) => POST(`${API_EMPLEADO}`, empleado);\r\nexport const putEmpleado = async (empleado) => PUT(`${API_EMPLEADO}`, empleado);\r\n\r\n// --- GENERAL METHODS ---\r\nexport const POST = async (postfixUrl, data,) => {\r\n    const URL = `${RAIZ_URL}:${PORT}/api/${postfixUrl}`;\r\n    console.log({post_request: URL, data})\r\n    try {\r\n        // axios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\r\n        // axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\r\n        // axios.defaults.headers.post['Access-Control-Allow-Headers'] = \"Origin, X-Requested-With, Content-Type, Accept\";\r\n        const response = await axios.post(URL, data, {headers})\r\n\r\n        const {data: dataResponse, status} = response\r\n        if (typeof dataResponse === 'string' || status !== 200) {\r\n            throw new Error(dataResponse)\r\n        } else {\r\n            console.log({post_response: URL, dataResponse})\r\n            return dataResponse\r\n        }\r\n    } catch (error) {\r\n        console.error({\r\n            method: 'POST',\r\n            URL,\r\n            message: `${error.response ? error.message : error}`,\r\n            error: error.response\r\n        })\r\n    }\r\n}\r\n\r\nexport const PUT = async (postfixUrl, data) => {\r\n    const URL = `${RAIZ_URL}:${PORT}/api/${postfixUrl}`;\r\n\r\n    console.log({put_request: URL, data})\r\n\r\n    try {\r\n        const response = await axios.put(URL, data, {headers})\r\n        const {data: dataResponse, status} = response\r\n        if (typeof dataResponse === 'string' || status !== 200) {\r\n            throw new Error(dataResponse)\r\n        } else {\r\n            console.log({put_response: URL, dataResponse})\r\n            return dataResponse\r\n        }\r\n    } catch (error) {\r\n        console.error({method: 'PUT', URL, message: `${error.response ? error.message : error}`, error: error.response})\r\n    }\r\n}\r\n\r\nexport const GET = async (postfixUrl) => {\r\n    const URL = `${RAIZ_URL}:${PORT}/api/${postfixUrl}`;\r\n    console.log({get_request: URL})\r\n\r\n    try {\r\n        const response = await axios.get(URL, {headers})\r\n\r\n        const {data: dataResponse, status} = response\r\n\r\n        if (typeof dataResponse === 'string' || status !== 200) {\r\n            throw new Error(dataResponse)\r\n        } else {\r\n            console.log({get_response: URL, dataResponse})\r\n            return dataResponse\r\n        }\r\n    } catch (error) {\r\n        console.error({method: 'GET', URL, message: `${error.response ? error.message : error}`, error: error.response})\r\n    }\r\n}\r\n\r\nexport const DELETE = async (postfixUrl) => {\r\n    const URL = `${RAIZ_URL}:${PORT}/api/${postfixUrl}`;\r\n    console.log({delete_request: URL})\r\n\r\n    try {\r\n        const response = await axios.delete(URL, {headers})\r\n\r\n        const {data: dataResponse, status} = response\r\n\r\n        if (typeof dataResponse === 'string' || status !== 200) {\r\n            throw new Error(dataResponse)\r\n        } else {\r\n            console.log({delete_response: URL, dataResponse})\r\n            return dataResponse\r\n        }\r\n    } catch (error) {\r\n        console.error({\r\n            method: 'DELETE',\r\n            URL,\r\n            message: `${error.response ? error.message : error}`,\r\n            error: error.response\r\n        })\r\n    }\r\n}","import ClientesForm from './ClientesForm';\r\nimport {Tabla, FilaTabla, CeldaTabla, CeldaBotonTabla, EncabezadoTabla} from '../Tabla';\r\nimport {useEffect, useState} from 'react';\r\nimport '../styles/Clientes.css';\r\nimport '../styles/Tabla.css';\r\nimport {getClientes, postCliente, putCliente} from '../../RestServices';\r\n\r\nconst clienteInicial = {\r\n    razonSocial: '-',\r\n    habilitadoOnline: true,\r\n    maxCuentaCorriente: 0.0,\r\n    mail: '',\r\n    cuit: ''\r\n};\r\n\r\nconst Clientes = () => {\r\n\r\n    const [cliente, setCliente] = useState(clienteInicial);\r\n    const [listaClientes, setListaClientes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getClientes().then(data => setListaClientes(data));\r\n    }, []);\r\n\r\n    const fetchClientes = () => {\r\n        getClientes().then(data => setListaClientes(data));\r\n    }\r\n\r\n\r\n    const actualizarCliente = (atributo, valor) => {\r\n        const clienteNuevo = {...cliente, [atributo]: valor};\r\n        setCliente(clienteNuevo);\r\n    }\r\n\r\n    const saveOrUpdate = () => {\r\n        (!(cliente.id)) ? postCliente(cliente).then(() => fetchClientes()) :\r\n            putCliente(cliente).then(() => fetchClientes());\r\n        setCliente(clienteInicial);\r\n    };\r\n\r\n    const filasCliente = () => {\r\n        if (listaClientes)\r\n            return listaClientes.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={e.razonSocial}/>\r\n                    <CeldaTabla dato={e.mail}/>\r\n                    <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => setCliente(e)}/>\r\n                </FilaTabla>\r\n            });\r\n        else\r\n            return <></>\r\n    }\r\n\r\n    const encabezado = [\"ID Usuario\", \"Razon Social\", \"e-mail\", \"\"].map((e, i) => {\r\n        return <EncabezadoTabla key={i}>{e}</EncabezadoTabla>\r\n    })\r\n\r\n    const limpiarCampos = () => {\r\n        setCliente(clienteInicial);\r\n    }\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div><h1>Gestion de clientes</h1></div>\r\n            <div className=\"panelForm\">\r\n                <div className=\"panelFormAlta\">\r\n                    <ClientesForm cliente={cliente}\r\n                                  actualizarCliente={actualizarCliente}\r\n                                  saveOrUpdate={saveOrUpdate}\r\n                                  clean={limpiarCampos}/>\r\n                </div>\r\n                <div className=\"panelFormBusqueda\">Busqueda</div>\r\n            </div>\r\n            <div className=\"panel\">\r\n                <Tabla encabezado={encabezado} filas={filasCliente()}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clientes;","import \"./styles/Form.css\";\r\n\r\nconst Login = ({ usuario, ingresar, actualizarCampos }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        evt.preventDefault();\r\n        // console.log(evt.target.value);\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"form-step\"> Login </h1>\r\n            <form >\r\n                <div className=\"row\">\r\n                    <div className=\"col-25 form-label\">\r\n                        <label>Nombre de usuario</label>\r\n                    </div>\r\n                    <div className=\"col-75\">\r\n                        <input\r\n                            name=\"nombre\"\r\n                            type=\"text\"\r\n                            placeholder=\"usuario\"\r\n                            value={usuario.nombre}\r\n                            onChange={handleChange} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-25 form-label\">\r\n                        <label>Contraseña</label>\r\n                    </div>\r\n                    <div className=\"col-75\">\r\n                        <input\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"Contraseña\"\r\n                            value={usuario.password}\r\n                            onChange={handleChange} />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div className=\"row\">\r\n                <div className=\"col-25\" />\r\n                <div className=\"col-75\">\r\n                    <button className=\"btn-wide\" onClick={ingresar}>Ingresar</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","const ObrasForm = ({ obra, actualizarCampos, saveOrUpdate, clean }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        evt.preventDefault();\r\n        // console.log(evt.target.value);\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-box container\">\r\n            <h3>Obra</h3>\r\n            <div className=\"row\">\r\n                <div className=\"col-25 form-label\">\r\n                    <label>Descripcion</label>\r\n                </div>\r\n                <div className=\"col-75\">\r\n                    <input name=\"descripcion\"\r\n                        value={obra.descripcion}\r\n                        onChange={handleChange} />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-25 form-label\">\r\n                    <label >Latitud</label>\r\n                </div>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        type=\"text\"\r\n                        pattern=\"[0-9]*\"\r\n                        name=\"latitud\"\r\n                        value={obra.latitud}\r\n                        onChange={handleChange} />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-25 form-label\">\r\n                    <label>Longitud</label>\r\n                </div>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        type=\"text\"\r\n                        pattern=\"[0-9]*\"\r\n                        name=\"longitud\"\r\n                        value={obra.longitud}\r\n                        onChange={handleChange} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-25 form-label\">\r\n                    <label>Direccion</label>\r\n                </div>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        name=\"direccion\"\r\n                        value={obra.direccion}\r\n                        onChange={handleChange} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-25 form-label\">\r\n                    <label>Superficie</label>\r\n                </div>\r\n                <div className=\"col-75\">\r\n                    <input\r\n                        type=\"text\"\r\n                        pattern=\"[0-9]*\"\r\n                        name=\"superficie\"\r\n                        value={obra.superficie}\r\n                        onChange={handleChange} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-25 form-label\">\r\n                    <label>Tipo de Obra</label>\r\n                </div>\r\n                <div className=\"col-75\">\r\n                    <select name=\"tipoObra\" value={obra.tipoObra} onChange={handleChange} >\r\n                        <option value=\"REFORMA\">Reforma</option>\r\n                        <option value=\"CASA\">Casa</option>\r\n                        <option value=\"EDIFICIO\">Edificio</option>\r\n                        <option value=\"VIAL\">Vial</option>\r\n\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-50 \">\r\n                    <button type=\"button\" onClick={clean}>Limpiar</button>\r\n                </div>\r\n                <div className=\"col-50\">\r\n                    <button type=\"button\" onClick={saveOrUpdate}>Guardar</button>\r\n                </div>\r\n            </div>\r\n        </form >\r\n    );\r\n}\r\n\r\nexport default ObrasForm;","export const CampoForm = ({value, onChange, label, name, pattern, readOnly}) => {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-25 form-label\">\r\n                <label>{label}</label>\r\n            </div>\r\n            <div className=\"col-75\">\r\n                <input name={name}\r\n                       pattern={pattern}\r\n                       value={value}\r\n                       onChange={onChange}\r\n                       readOnly={readOnly}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const ComboForm = ({opciones, value, onChange, label, name}) => {\r\n\r\n    const options = opciones ?\r\n        opciones.map((o, index) => <option key={index} value={o}>{o}</option>)\r\n        : <></>\r\n\r\n    return <div className=\"row\">\r\n        <div className=\"col-25 form-label\">\r\n            <label>{label}</label>\r\n        </div>\r\n        <div className=\"col-75\">\r\n            <select\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}>\r\n                {options}\r\n            </select>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default CampoForm;","import { ComboForm } from \"../FormComponents\";\r\n\r\nconst ClienteObrasForm = ({ cliente, actualizarCampos, listaClientes }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-box container\">\r\n            <h3>Cliente</h3>\r\n\r\n            <ComboForm\r\n                label='Razon Social'\r\n                placeholder='Razon Social'\r\n                name='razonSocial'\r\n                value={cliente.razonSocial}\r\n                onChange={handleChange}\r\n                opciones={listaClientes.map(c => { return c.razonSocial })} />\r\n\r\n            <ComboForm\r\n                label='CUIT'\r\n                placeholder='CUIT'\r\n                name='cuit'\r\n                value={cliente.cuit}\r\n                onChange={handleChange}\r\n                opciones={listaClientes.map(c => { return c.cuit })} />\r\n\r\n        </form >\r\n    );\r\n}\r\n\r\nexport default ClienteObrasForm;","import {CeldaBotonTabla, CeldaTabla, EncabezadoTabla, FilaTabla, Tabla} from '../Tabla';\r\nimport ObrasForm from \"./ObrasForm\";\r\nimport ClienteObrasForm from \"./ClienteObrasForm\";\r\nimport \"../styles/Form.css\";\r\nimport \"../styles/Tabla.css\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {getClientes, getObras, postObra, putObra} from '../../RestServices';\r\n\r\nconst clienteInicial = {\r\n    id: null,\r\n    razonSocial: \"\",\r\n    cuit: \"\"\r\n}\r\n\r\nconst obraInicial = {\r\n    id: null,\r\n    descripcion: \"\",\r\n    latitud: 0,\r\n    longitud: 0,\r\n    direccion: \"\",\r\n    superficie: 0,\r\n    tipoObra: \"\",\r\n    cliente: clienteInicial\r\n}\r\n\r\nconst Obras = () => {\r\n\r\n    const [obra, setObra] = useState(obraInicial);\r\n    const [cliente, setCliente] = useState(clienteInicial);\r\n    const [listaClientes, setListaClientes] = useState([]);\r\n    const [listaObras, setListaObras] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchClientes();\r\n        fetchObras();\r\n    }, []);\r\n\r\n    const fetchClientes = () => {\r\n        getClientes().then(data => setListaClientes(data));\r\n    }\r\n\r\n    const fetchObras = () => {\r\n        getObras().then(data => setListaObras(data));\r\n    }\r\n\r\n    const actualizarObra = (nombreAtributo, valorAtributo) => {\r\n        const nuevaObra = {...obra, [nombreAtributo]: valorAtributo};\r\n        setObra(nuevaObra);\r\n    }\r\n\r\n    const actualizarCliente = (nombreAtributo, valorAtributo) => {\r\n        const index = listaClientes.findIndex(c => c.[nombreAtributo] === valorAtributo);\r\n        setCliente(listaClientes[index])\r\n        const nuevaObra = {...obra, cliente: listaClientes[index]};\r\n        setObra(nuevaObra);\r\n    }\r\n\r\n    const saveOrUpdate = () => {\r\n        !(obra.id) ? postObra(obra).then(() => fetchObras()) :\r\n            putObra(obra).then(() => fetchObras());\r\n        setObra(obraInicial);\r\n        setCliente(clienteInicial);\r\n    };\r\n\r\n    const cleanObra = () => {\r\n        setObra(obraInicial);\r\n        setCliente(clienteInicial);\r\n    }\r\n\r\n    const filasObras = listaObras.map((e, i) => {\r\n        return <FilaTabla key={i}>\r\n            <CeldaTabla dato={e.id}/>\r\n            <CeldaTabla dato={e.descripcion}/>\r\n            <CeldaTabla dato={e.direccion}/>\r\n            <CeldaTabla dato={e.superficie}/>\r\n            <CeldaTabla dato={e.tipoObra}/>\r\n            <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => {\r\n                setObra(e);\r\n                setCliente(e.cliente);\r\n            }}/>\r\n        </FilaTabla>\r\n    });\r\n\r\n    const encabezado = [\"ID Obra\", \"Descripcion\", \"Direccion\", \"Superficie\", \"Tipo de Obra\", \"\"]\r\n        .map((e) => {\r\n            return <EncabezadoTabla>{e}</EncabezadoTabla>\r\n        })\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div><h1>Gestion de Obras</h1></div>\r\n            <div className=\"panelForm\">\r\n                <div className=\"panelFormAlta\">\r\n\r\n                    <ObrasForm\r\n                        obra={obra}\r\n                        actualizarCampos={actualizarObra}\r\n                        clean={cleanObra}\r\n                        saveOrUpdate={saveOrUpdate}/>\r\n                </div>\r\n\r\n                <div className=\"panelFormBusqueda\">\r\n\r\n                    <ClienteObrasForm\r\n                        cliente={cliente}\r\n                        actualizarCampos={actualizarCliente}\r\n                        listaClientes={listaClientes}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"panel\">\r\n                <Tabla filas={filasObras} encabezado={encabezado}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Obras;","import '../FormComponents';\r\nimport CampoForm, { ComboForm } from '../FormComponents';\r\n\r\nconst ProductosForm = ({ producto, unidades, actualizarCampos, clean, saveOrUpdate }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        evt.preventDefault();\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-box container\">\r\n            <h3>Producto</h3>\r\n\r\n            <CampoForm label='Nombre del Producto'\r\n                name='nombre'\r\n                value={producto.nombre}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm label='Descripcion'\r\n                name='descripcion'\r\n                value={producto.descripcion}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm label='Precio'\r\n                name='precio'\r\n                pattern=\"[0-9.]*\"\r\n                value={producto.precio}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm label='Stock Actual'\r\n                name='stockActual'\r\n                pattern=\"[0-9.]*\"\r\n                value={producto.stockActual}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm label='Stock Minimo'\r\n                name='stockMinimo'\r\n                pattern=\"[0-9.]*\"\r\n                value={producto.stockMinimo}\r\n                onChange={handleChange} />\r\n\r\n            <ComboForm\r\n                label=\"Unidad\"\r\n                name=\"unidad\"\r\n                value={producto.unidad.descripcion}\r\n                opciones={unidades ? unidades.map(u => { return u.descripcion }) : []}\r\n                onChange={handleChange} />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-50 \">\r\n                    <button type=\"button\" onClick={clean}>Limpiar</button>\r\n                </div>\r\n                <div className=\"col-50\">\r\n                    <button type=\"button\" onClick={saveOrUpdate}>Guardar</button>\r\n                </div>\r\n            </div>\r\n        </form >\r\n    );\r\n}\r\n\r\nexport default ProductosForm;","import {Tabla, FilaTabla, CeldaTabla, CeldaBotonTabla, EncabezadoTabla} from '../Tabla';\r\nimport ProductosForm from './ProductosForm';\r\nimport '../styles/Form.css';\r\nimport '../styles/Clientes.css';\r\nimport {useEffect, useState} from 'react';\r\nimport {getClientes, getProductos, getUnidades, postProducto, putProducto} from '../../RestServices';\r\n\r\nconst unidadInicial = {\r\n    descripcion: ''\r\n}\r\n\r\nconst productoInicial = {\r\n    nombre: '',\r\n    descripcion: '',\r\n    precio: 0,\r\n    stockActual: 0,\r\n    stockMinimo: 0,\r\n    unidad: unidadInicial\r\n}\r\n\r\nconst Productos = () => {\r\n\r\n    const [producto, setProducto] = useState(productoInicial);\r\n    const [listaProductos, setListaProductos] = useState([]);\r\n    const [listaUnidades, setListaUnidades] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchProductos();\r\n    }, []);\r\n\r\n    const fetchProductos = () => {\r\n        getProductos().then(data => setListaProductos(data));\r\n        getUnidades().then(data => setListaUnidades(data));\r\n    }\r\n\r\n    const actualizarProducto = (nombreAtributo, valorAtributo) => {\r\n        if (nombreAtributo === 'unidad') valorAtributo = {...unidadInicial, descripcion: valorAtributo};\r\n        const nuevoProducto = {...producto, [nombreAtributo]: valorAtributo};\r\n        setProducto(nuevoProducto);\r\n    }\r\n\r\n    const saveOrUpdate = () => {\r\n        !(producto.id) ? postProducto(producto).then(() => fetchProductos()) :\r\n            putProducto(producto).then(() => fetchProductos());\r\n        setProducto(productoInicial);\r\n    };\r\n\r\n    const cleanProducto = () => {\r\n        setProducto(productoInicial);\r\n    }\r\n\r\n    const filasProductos = () => {\r\n        if (listaProductos)\r\n            return listaProductos.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={e.nombre}/>\r\n                    <CeldaTabla dato={e.descripcion}/>\r\n                    <CeldaTabla dato={e.precio}/>\r\n                    <CeldaTabla dato={e.stockActual}/>\r\n                    <CeldaTabla dato={e.stockMinimo}/>\r\n                    <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => setProducto(e)}/>\r\n                </FilaTabla>\r\n            });\r\n        else\r\n            return <></>\r\n    }\r\n\r\n    const encabezado = [\"ID Producto\", \"Nombre\", \"Descripcion\", \"Precio\", \"Stock Actual\", \"Stock Minimo\", \"\"]\r\n        .map((e) => {\r\n            return <EncabezadoTabla>{e}</EncabezadoTabla>\r\n        })\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div><h1>Productos</h1></div>\r\n            <div className=\"panel\">\r\n                <ProductosForm\r\n                    producto={producto}\r\n                    unidades={listaUnidades}\r\n                    actualizarCampos={actualizarProducto}\r\n                    clean={cleanProducto}\r\n                    saveOrUpdate={saveOrUpdate}/>\r\n            </div>\r\n            <div className=\"panel\">\r\n                <Tabla>\r\n                    {encabezado}\r\n                    {filasProductos}\r\n                </Tabla>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Productos;","import CampoForm, { ComboForm } from \"../FormComponents\";\r\n\r\nconst PedidosForm = ({ pedido, actualizarCampos, clean, saveOrUpdate, verDetalle, obras }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        evt.preventDefault();\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    const estadosPedido =\r\n        ['NUEVO', 'CONFIRMADO', 'PENDIENTE', 'CANCELADO', 'ACEPTADO', 'RECHAZADO', 'EN_PREPARACION', 'ENTREGADO'];\r\n    return (\r\n        <form className=\"form-box container\">\r\n            <CampoForm\r\n                label='Fecha'\r\n                name='fechaPedido'\r\n                value={pedido.fechaPedido}\r\n                onChange={handleChange} />\r\n            <ComboForm\r\n                label='Obra'\r\n                name='obra'\r\n                onChange={handleChange}\r\n                opciones={obras.map(o => { return o.id })} />\r\n            <ComboForm\r\n                label='Estado'\r\n                name='estado'\r\n                value={pedido.estado}\r\n                onChange={handleChange}\r\n                opciones={estadosPedido} />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-25 \">\r\n                    <button type=\"button\" onClick={clean}>Limpiar</button>\r\n                </div>\r\n                <div className=\"col-50\">\r\n                    <button type=\"button\" onClick={verDetalle}>Ver Detalle</button>\r\n                </div>\r\n                <div className=\"col-25\">\r\n                    <button type=\"button\" onClick={saveOrUpdate}>Guardar</button>\r\n                </div>\r\n            </div>\r\n        </form >\r\n    );\r\n}\r\n\r\nexport default PedidosForm;","import '../FormComponents'\r\nimport CampoForm, { ComboForm } from '../FormComponents';\r\n\r\nconst DetallePedidoForm = ({ detallePedido, actualizarCampos, listaProductos, saveOrUpdate }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"formbox container\">\r\n\r\n            <CampoForm\r\n                label='Cantidad'\r\n                pattern='[0-9.]*'\r\n                name='cantidad'\r\n                value={detallePedido.cantidad}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm\r\n                label='Precio'\r\n                name='precio'\r\n                readOnly={true}\r\n                value={detallePedido.cantidad * detallePedido.producto.precio} />\r\n\r\n            <ComboForm\r\n                label='Producto'\r\n                name='producto'\r\n                onChange={handleChange}\r\n                value={detallePedido.producto.nombre}\r\n                opciones={listaProductos.map(p => { return p.nombre })} />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-25\" />\r\n                <div className=\"col-75\">\r\n                    <button className=\"btn-wide\" type=\"button\" onClick={saveOrUpdate}>Guardar</button>\r\n                </div>\r\n            </div>\r\n        </form >\r\n    );\r\n}\r\n\r\nexport default DetallePedidoForm;","import {Tabla, FilaTabla, CeldaTabla, CeldaBotonTabla, EncabezadoTabla} from '../Tabla';\r\nimport PedidosForm from './PedidosForm';\r\nimport DetallePedidoForm from './DetallePedidoForm'\r\nimport '../styles/Form.css';\r\nimport '../styles/Clientes.css';\r\nimport {useEffect, useState} from \"react\";\r\nimport {\r\n    getPedidos,\r\n    postPedido,\r\n    putPedido,\r\n    postDetalle,\r\n    putDetalle,\r\n    deleteDetalle,\r\n    getProductos,\r\n    getObras\r\n} from '../../RestServices';\r\n\r\nconst pedidoInicial = {\r\n    id: null,\r\n    fechaPedido: '',\r\n    obra: '',\r\n    estado: 'NUEVO',\r\n    detalle: []\r\n}\r\n\r\nconst detallePedidoInicial = {\r\n    id: null,\r\n    cantidad: '',\r\n    precio: 0,\r\n    producto: ''\r\n}\r\n\r\nconst Pedidos = () => {\r\n\r\n    const [pedido, setPedido] = useState(pedidoInicial);\r\n    const [listaPedidos, setListaPedidos] = useState([]);\r\n\r\n    const [detallePedido, setDetalle] = useState(detallePedidoInicial);\r\n    const [listaDetalle, setListaDetalle] = useState([]);\r\n    const [listaProductos, setListaProductos] = useState([]);\r\n    const [listaObras, setListaObras] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchPedidos();\r\n        fetchProductos();\r\n        fetchObras();\r\n    }, [listaPedidos, listaDetalle]);\r\n\r\n    const fetchPedidos = () => {\r\n        getPedidos().then(data => setListaPedidos(data))\r\n    }\r\n\r\n    const fetchProductos = () => {\r\n        getProductos().then(data => setListaProductos(data));\r\n    }\r\n\r\n    const fetchObras = () => {\r\n        getObras().then(data => setListaObras(data));\r\n    }\r\n\r\n    const actualizarPedido = (nombreAtributo, valorAtributo) => {\r\n        if (nombreAtributo === 'obra') {\r\n            const index = listaObras.findIndex(o => o.id === valorAtributo);\r\n            const nuevoPedido = {...pedido, obra: listaObras[index]};\r\n            setPedido(nuevoPedido);\r\n        } else {\r\n            const nuevoPedido = {...pedido, [nombreAtributo]: valorAtributo};\r\n            setPedido(nuevoPedido);\r\n        }\r\n    }\r\n\r\n    const saveOrUpdatePedido = () => {\r\n        !(pedido.id) ? postPedido(pedido).then(() => fetchPedidos()) :\r\n            putPedido(pedido).then(() => fetchPedidos());\r\n        cleanPedido();\r\n    };\r\n\r\n    const cleanPedido = () => {\r\n        setPedido(pedidoInicial);\r\n        setListaDetalle([]);\r\n        setDetalle(detallePedidoInicial);\r\n    }\r\n\r\n    const actualizarDetalle = (nombreAtributo, valorAtributo) => {\r\n        if (nombreAtributo === 'producto') {\r\n            const index = listaProductos.findIndex(p => p.nombre === valorAtributo);\r\n            const nuevoDetalle = {\r\n                ...detallePedido,\r\n                producto: listaProductos[index],\r\n                precio: detallePedido.cantidad * listaProductos[index].precio\r\n            };\r\n            setDetalle(nuevoDetalle)\r\n        } else {\r\n            const nuevoDetalle = {...detallePedido, [nombreAtributo]: valorAtributo};\r\n            setDetalle(nuevoDetalle);\r\n        }\r\n    }\r\n\r\n    const saveOrUpdateDetalle = () => {\r\n        !(detallePedido.id) ? postDetalle(detallePedido, pedido).then(() => fetchPedidos()) :\r\n            putDetalle(detallePedido).then(() => fetchPedidos());\r\n    };\r\n\r\n    const filasPedidos = listaPedidos.map((e, i) => {\r\n        return <FilaTabla key={i}>\r\n            <CeldaTabla dato={e.id}/>\r\n            <CeldaTabla dato={e.fechaPedido}/>\r\n            <CeldaTabla dato={e.obra.id}/>\r\n            <CeldaTabla dato={e.estado}/>\r\n            <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => seleccionarPedido(e)}/>\r\n        </FilaTabla>\r\n    });\r\n\r\n    const encabezado = [\"ID Pedido\", \"Fecha de Pedido\", \"ID Obra\", \"Estado\", \"\"]\r\n        .map((e) => {\r\n            return <EncabezadoTabla>{e}</EncabezadoTabla>\r\n        })\r\n\r\n    const seleccionarPedido = (p) => {\r\n        setPedido(p);\r\n        setListaDetalle(p.detalle);\r\n        setDetalle(detallePedidoInicial);\r\n    }\r\n\r\n    const eliminarDetalle = (d) => {\r\n        deleteDetalle(d).then(() => fetchPedidos());\r\n    }\r\n\r\n    const filasDetalle = listaDetalle.map((e, i) => {\r\n        return <FilaTabla key={i}>\r\n            <CeldaTabla dato={e.id}/>\r\n            <CeldaTabla dato={e.cantidad}/>\r\n            <CeldaTabla dato={e.precio}/>\r\n            <CeldaTabla dato={e.producto.nombre}/>\r\n            <CeldaBotonTabla titulo=\"Eliminar\" accion={() => eliminarDetalle(e)}/>\r\n            <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => setDetalle(e)}/>\r\n        </FilaTabla>\r\n    });\r\n\r\n    const encabezadoDetalle = [\"ID Detalle\", \"Cantidad\", \"Precio\", \"Producto\", \"\", \"\"]\r\n        .map((e) => {\r\n            return <EncabezadoTabla>{e}</EncabezadoTabla>\r\n        })\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div><h1>Pedidos</h1></div>\r\n            <div className=\"panelForm\">\r\n                <div className=\"panelFormAlta\">\r\n                    <PedidosForm\r\n                        pedido={pedido}\r\n                        actualizarCampos={actualizarPedido}\r\n                        clean={cleanPedido}\r\n                        saveOrUpdate={saveOrUpdatePedido}\r\n                        obras={listaObras}/>\r\n                </div>\r\n                <div className=\"panelFormAlta\">\r\n                    <DetallePedidoForm\r\n                        detallePedido={detallePedido}\r\n                        listaProductos={listaProductos}\r\n                        actualizarCampos={actualizarDetalle}\r\n                        saveOrUpdate={saveOrUpdateDetalle}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"panel\">\r\n                <div><h3>Detalle</h3></div>\r\n                <Tabla>\r\n                    {encabezadoDetalle}\r\n                    {filasDetalle}\r\n                </Tabla>\r\n                <div><h3>Pedidos</h3></div>\r\n                <Tabla encabezado={encabezado} filas={filasPedidos}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Pedidos;","import {useState} from 'react';\r\nimport {Tabla, EncabezadoTabla, FilaTabla, CeldaTabla, CeldaBotonTabla} from '../Tabla'\r\n\r\nconst Pagos = () => {\r\n\r\n    const [listaPedidos, setListaPedidos] = useState([]);\r\n\r\n    const abonarPedido = () => {\r\n        console.log(\"Abonar pedido listo\")\r\n    }\r\n\r\n    const filasPedidos = listaPedidos.map((e, i) => {\r\n        return <FilaTabla key={i}>\r\n            <CeldaTabla dato={e.id}/>\r\n            <CeldaTabla dato={e.fechaPedido}/>\r\n            <CeldaTabla dato={e.obra}/>\r\n            <CeldaTabla dato={e.estado}/>\r\n            <CeldaBotonTabla titulo=\"Abonar\" accion={() => abonarPedido(e)}/>\r\n        </FilaTabla>\r\n    });\r\n\r\n    const encabezado = [\"ID Pedido\", \"Fecha de Pedido\", \"ID Obra\", \"Estado\", \"\"]\r\n        .map((e) => {\r\n            return <EncabezadoTabla>{e}</EncabezadoTabla>\r\n        })\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div><h1>Pagos</h1></div>\r\n            <div className=\"panel\">\r\n                <div><h3>Pedidos</h3></div>\r\n                <Tabla encabezado={encabezado} filas={filasPedidos}/>\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default Pagos;","import '../FormComponents'\r\nimport CampoForm, { ComboForm } from '../FormComponents'\r\n\r\nconst LiquidacionForm = ({ empleado, actualizarCampos, listaEmpleados, liquidarTodos, liquidarEmpleado, actualizarCamposSueldo, actualizarSueldoEmpleado, sueldoEmpleado }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(valorAtributo);\r\n    }\r\n    const handleChangeSueldo = (evt) => {\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCamposSueldo(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className='formbox-container'>\r\n            <ComboForm\r\n                label=\"Empleado\"\r\n                name=\"nombre\"\r\n                value={empleado.nombre}\r\n                onChange={handleChange}\r\n                opciones={listaEmpleados.map(e => { return e.nombre })}\r\n            />\r\n            <CampoForm\r\n                label=\"Monto\"\r\n                name=\"monto\"\r\n                pattern=\"[0-9.]*\"\r\n                value={sueldoEmpleado.monto}\r\n                onChange={handleChangeSueldo} />\r\n            <CampoForm\r\n                label=\"Porcentaje de comision\"\r\n                name=\"comision\"\r\n                pattern=\"[0-9.]*\"\r\n                value={sueldoEmpleado.comision}\r\n                onChange={handleChangeSueldo}\r\n            />\r\n            <div className=\"row\">\r\n                <div className=\"col-25\" />\r\n                <div className=\"col-25\">\r\n                    <button type=\"button\" onClick={actualizarSueldoEmpleado}>Actualizar Sueldo</button>\r\n                </div>\r\n                <div className=\"col-25\">\r\n                    <button type=\"button\" onClick={liquidarEmpleado}>Liquidar Empleado</button>\r\n                </div>\r\n                <div className=\"col-25\">\r\n                    <button type=\"button\" onClick={liquidarTodos}>Liquidar a todos</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default LiquidacionForm;","import {useState} from \"react\";\r\nimport LiquidacionForm from \"./LiquidacionForm\";\r\nimport '../Tabla';\r\nimport '../styles/Form.css';\r\nimport '../styles/Clientes.css';\r\nimport {CeldaTabla, EncabezadoTabla, FilaTabla, Tabla} from '../Tabla';\r\nimport {\r\n    getEmpleados,\r\n    getLiquidaciones,\r\n    getSueldo,\r\n    postLiquidacionEmpleado,\r\n    postLiquidacionTodos,\r\n    postSueldo\r\n} from \"../../RestServices\";\r\n\r\nconst empleadoInicial = {\r\n    nombre: ''\r\n}\r\n\r\nconst sueldoInicial = {\r\n    monto: 0,\r\n    comision: 0\r\n}\r\n\r\nconst Liquidacion = () => {\r\n\r\n    const [listaLiquidacion, setListaLiquidacion] = useState([]);\r\n    const [listaEmpleados, setListaEmpleados] = useState([]);\r\n    const [empleado, setEmpleado] = useState(empleadoInicial);\r\n    const [sueldo, setSueldo] = useState(sueldoInicial);\r\n\r\n    const fetchEmpleados = () => {\r\n        getEmpleados().then(data => setListaEmpleados(data));\r\n    }\r\n\r\n    const fetchLiquidacion = () => {\r\n        getLiquidaciones().then(data => setListaLiquidacion(data));\r\n    }\r\n\r\n    const fetchSueldo = (empleado) => {\r\n        getSueldo(empleado).then(data => setSueldo(data));\r\n    }\r\n\r\n    useState(() => {\r\n        fetchEmpleados();\r\n        fetchLiquidacion();\r\n    }, []);\r\n\r\n\r\n    const liquidarEmpleado = () => {\r\n        postLiquidacionEmpleado(empleado).then(() => fetchLiquidacion());\r\n    }\r\n\r\n    const liquidarTodos = () => {\r\n        postLiquidacionTodos().then(() => fetchLiquidacion());\r\n    }\r\n\r\n    const actualizarEmpleado = (valorAtributo) => {\r\n        const index = listaEmpleados.findIndex(e => e.nombre === valorAtributo);\r\n        setEmpleado(listaEmpleados[index]);\r\n        fetchSueldo(listaEmpleados[index]);\r\n    }\r\n\r\n    const actualizarCamposSueldo = (nombreAtributo, valorAtributo) => {\r\n        const nuevoSueldo = {...sueldo, [nombreAtributo]: valorAtributo};\r\n        setSueldo(nuevoSueldo);\r\n    }\r\n\r\n    const actualizarSueldoEmpleado = () => {\r\n        console.log(sueldo);\r\n        postSueldo(sueldo).then(() => fetchSueldo());\r\n    }\r\n\r\n    const filasLiquidacion = listaLiquidacion.map((e, i) => {\r\n        return <FilaTabla key={i}>\r\n            <CeldaTabla dato={e.id}/>\r\n            <CeldaTabla dato={\r\n                listaEmpleados[listaEmpleados.findIndex(o => o.id === e.empleado.id)].nombre\r\n            }/>\r\n            <CeldaTabla dato={e.fecha}/>\r\n            <CeldaTabla dato={e.monto}/>\r\n        </FilaTabla>\r\n    });\r\n\r\n    const encabezado = [\"ID Liquidacion\", \"Empleado\", \"Fecha\", \"Monto\"].map((e) =>\r\n        <EncabezadoTabla>{e}</EncabezadoTabla>)\r\n\r\n    return (\r\n        <div className='box'>\r\n            <div><h3>Liquidacion</h3></div>\r\n\r\n            <div className=\"panelForm\">\r\n                <div className=\"panelFormAlta\">\r\n                    <LiquidacionForm\r\n                        empleado={empleado}\r\n                        listaEmpleados={listaEmpleados}\r\n                        actualizarCampos={actualizarEmpleado}\r\n                        actualizarCamposSueldo={actualizarCamposSueldo}\r\n                        actualizarSueldoEmpleado={actualizarSueldoEmpleado}\r\n                        liquidarEmpleado={liquidarEmpleado}\r\n                        liquidarTodos={liquidarTodos}\r\n                        sueldoEmpleado={sueldo}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"panelForm\">\r\n                <Tabla encabezado={encabezado} filas={filasLiquidacion}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Liquidacion","import { Link } from \"react-router-dom\";\r\nimport './styles/App.css'\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav>\r\n            <ul className=\"nav-links\">\r\n                <Link className=\"nav-links\" to='/page/clientes'>\r\n                    <li>Clientes</li>\r\n                </Link>\r\n                <Link className=\"nav-links\" to='/page/obras'>\r\n                    <li>Obras</li>\r\n                </Link>\r\n                <Link className=\"nav-links\" to='/page/pagos'>\r\n                    <li>Pagos</li>\r\n                </Link>\r\n                <Link className=\"nav-links\" to='/page/pedidos'>\r\n                    <li>Pedidos</li>\r\n                </Link>\r\n                <Link className=\"nav-links\" to='/page/productos'>\r\n                    <li>Productos</li>\r\n                </Link>\r\n                <Link className=\"nav-links\" to='/page/liquidacion'>\r\n                    <li>Liquidación</li>\r\n                </Link>\r\n                <Link className=\"nav-links\" to='/'>\r\n                    <li>Login</li>\r\n                </Link>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { useState } from \"react\";\r\nimport Clientes from \"./components/clientes/Clientes\";\r\nimport Login from \"./components/Login\";\r\nimport Obras from \"./components/obras/Obras\"\r\nimport Productos from \"./components/productos/Productos\";\r\nimport Pedidos from './components/pedidos/Pedidos';\r\nimport Pagos from './components/pagos/Pagos';\r\nimport Liquidacion from './components/liquidacion/Liquidacion'\r\nimport NavBar from './components/NavBar';\r\n\r\nconst usuarioInicial = {\r\n  id: 103,\r\n  nombre: \"dan2021\",\r\n  password: \"dan2021\",\r\n  autenticado: false\r\n}\r\n\r\nfunction App() {\r\n\r\n  const [usuario, setUsuario] = useState(usuarioInicial);\r\n\r\n  const ingresar = () => {\r\n    const nuevoUsuario = { ...usuario, autenticado: true };\r\n    setUsuario(nuevoUsuario);\r\n  }\r\n\r\n  const actualizarUsuario = (nombreAtributo, valorAtributo) => {\r\n    const nuevoUsuario = { ...usuario, [nombreAtributo]: valorAtributo };\r\n    console.log(nuevoUsuario);\r\n    setUsuario(nuevoUsuario);\r\n    console.log(usuario);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\"  >\r\n            <Login usuario={usuario} ingresar={ingresar} actualizarCampos={actualizarUsuario} />\r\n          </Route>\r\n          <Route path=\"/page/clientes\" component={Clientes} />\r\n          <Route path=\"/page/obras\" component={Obras} />\r\n          <Route path=\"/page/productos\" component={Productos} />\r\n          <Route path=\"/page/pedidos\" component={Pedidos} />\r\n          <Route path=\"/page/pagos\" component={Pagos} />\r\n          <Route path=\"/page/liquidacion\" component={Liquidacion} name='Liquidación' />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}