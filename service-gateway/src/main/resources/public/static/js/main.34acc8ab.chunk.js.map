{"version":3,"sources":["components/FormComponents.jsx","components/clientes/ClientesForm.jsx","components/Tabla.jsx","RestServices.js","components/clientes/Clientes.jsx","components/login/Login.jsx","components/obras/ObrasForm.jsx","components/obras/ClienteObrasForm.jsx","components/obras/Obras.jsx","components/productos/ProductosForm.jsx","components/productos/Productos.jsx","components/pedidos/PedidosForm.jsx","components/pedidos/DetallePedidoForm.jsx","components/pedidos/Pedidos.jsx","components/liquidacion/LiquidacionForm.jsx","components/liquidacion/Liquidacion.jsx","components/NavBar.jsx","App.js","index.js"],"names":["ComboForm","opciones","value","onChange","label","name","options","map","option","index","className","Label","Button","action","onClick","e","CampoForm","pattern","readOnly","ClientesForm","cliente","actualizarCliente","saveOrUpdate","clean","handleChange","evt","nombreAtributo","target","valorAtributo","type","checked","validity","valid","razonSocial","cuit","mail","maxCuentaCorriente","habilitadoOnline","Tabla","encabezado","filas","EncabezadoTabla","children","FilaTabla","CeldaTabla","dato","CeldaBotonTabla","titulo","RAIZ_URL","PORT_GATEWAY","PORT_USUARIO","PORT_PRODUCTO","PORT_PEDIDO","PORT_LIQUIDACION","API_PRODUCTO","API_PEDIDO","API_OBRA","API_DETALLE_PEDIDO","API_LIQUIDACION","API_CLIENTE","API_EMPLEADO","headers","login","a","username","password","URL","axios","post","response","dataResponse","data","status","localStorage","removeItem","message","console","log","method","getObras","GET","postObra","obra","POST","putObra","PUT","id","getPedidos","postPedido","pedido","putPedido","estado","postDetalle","detallePedido","putDetalle","deleteDetalle","DELETE","getProductos","postProducto","producto","putProducto","getLiquidaciones","postLiquidacionTodos","postLiquidacionEmpleado","empleado","postSueldo","sueldo","getSueldo","getClientes","postCliente","putCliente","getEmpleados","getNewHeader","token","getItem","Authorization","port","postfixUrl","request","Error","error","put","get","delete","clienteInicial","Clientes","history","useHistory","useState","setCliente","listaClientes","setListaClientes","fetchClientes","then","useEffect","push","RUTAS","validarCliente","i","atributo","valor","clienteNuevo","preventDefault","toast","success","Login","logged","setLogged","setUsername","setPassword","ingresar","accessToken","setItem","placeholder","onKeyPress","event","key","form","Array","prototype","indexOf","call","elements","focus","handleEnter","ObrasForm","actualizarCampos","descripcion","latitud","longitud","direccion","superficie","tipoObra","ClienteObrasForm","c","obraInicial","Obras","setObra","listaObras","setListaObras","fetchObras","nuevaObra","findIndex","ProductosForm","unidades","nombre","precio","stockActual","stockMinimo","unidad","length","u","unidadInicial","productoInicial","Productos","setProducto","listaProductos","setListaProductos","listaUnidades","setListaUnidades","fetchProductos","validarProducto","nuevoProducto","PedidosForm","obras","verDetalle","fechaPedido","o","DetallePedidoForm","update","hayPedido","cantidad","p","pedidoInicial","detalle","detallePedidoInicial","Pedidos","setPedido","listaPedidos","setListaPedidos","setDetalle","listaDetalle","setListaDetalle","fetchPedidos","validarPedido","validarDetalle","encabezadoDetalle","nuevoPedido","nuevoDetalle","eliminarDetalle","LiquidacionForm","listaEmpleados","liquidarTodos","liquidarEmpleado","actualizarCamposSueldo","actualizarSueldoEmpleado","sueldoEmpleado","handleChangeSueldo","monto","comision","empleadoInicial","sueldoInicial","Liquidacion","listaLiquidacion","setListaLiquidacion","setListaEmpleados","setEmpleado","setSueldo","fetchLiquidacion","fetchSueldo","nuevoSueldo","fecha","NavBar","logout","to","clientes","pedidos","productos","liquidacion","pagos","App","undefined","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","exact","path","component","Root","render","document","getElementById"],"mappings":"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","file":"static/js/main.34acc8ab.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const CampoForm = ({value, onChange, label, name, pattern, readOnly}) => {\r\n    return (\r\n        <div className=\"form-row\">\r\n            <Label value={label}/>\r\n            <div className=\"form-input\">\r\n                <input name={name}\r\n                       pattern={pattern}\r\n                       value={value}\r\n                       onChange={onChange}\r\n                       readOnly={readOnly}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const ComboForm = ({opciones, value, onChange, label, name}) => {\r\n\r\n    const options = opciones ?\r\n        opciones.map((option, index) => <option key={index} value={option}>{option}</option>)\r\n        : <></>\r\n\r\n    return <div className=\"form-row\">\r\n        <Label value={label}/>\r\n        <div className=\"form-input\">\r\n            <select\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}>\r\n                {options}\r\n            </select>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const Label = ({value}) => <label className=\"form-label\">{value}</label>\r\n\r\nexport const Button = ({action, label}) =>\r\n    <div className=\"form-button\">\r\n        <button onClick={(e) => action(e)}>{label}</button>\r\n    </div>\r\n\r\n\r\nexport default CampoForm;","import \"../styles/Form.css\";\r\nimport {Button, Label} from \"../FormComponents\";\r\n\r\nconst ClientesForm = ({cliente, actualizarCliente, saveOrUpdate, clean}) => {\r\n\r\n    const handleChange = evt => {\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.type === 'checkbox' ?\r\n            evt.target.checked : evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCliente(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <div className=\"panel-form-simple\">\r\n            <form className=\"form-box\">\r\n                <div className=\"form-row\">\r\n                    <Label value=\"Razón Social:\"/>\r\n                    <div className=\"form-input\">\r\n                        <input\r\n                            name=\"razonSocial\"\r\n                            value={cliente.razonSocial}\r\n                            onChange={handleChange}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <Label value=\"Cuit:\"/>\r\n                    <div className=\"form-input\">\r\n                        <input\r\n                            type=\"text\"\r\n                            pattern=\"[0-9]*\"\r\n                            name=\"cuit\"\r\n                            value={cliente.cuit}\r\n                            onChange={handleChange}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <Label value=\"Email:\"/>\r\n                    <div className=\"form-input\">\r\n                        <input\r\n                            name=\"mail\"\r\n                            value={cliente.mail}\r\n                            onChange={handleChange}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-row\">\r\n                    <Label value=\"Máximo descubierto:\"/>\r\n                    <div className=\"form-input\">\r\n                        <input\r\n                            type=\"text\"\r\n                            pattern=\"[0-9.]*\"\r\n                            name=\"maxCuentaCorriente\"\r\n                            value={cliente.maxCuentaCorriente}\r\n                            onChange={handleChange}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <Label value=\"Habilitado online:\"/>\r\n                    <div className=\"form-input\" >\r\n                        <input\r\n                            name=\"habilitadoOnline\"\r\n                            type=\"checkbox\"\r\n                            checked={cliente.habilitadoOnline}\r\n                            onChange={handleChange}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-buttons\">\r\n                    <Button label=\"Guardar / Actualizar\" action={saveOrUpdate}/>\r\n                    <Button label=\"Limpiar\" action={clean}/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ClientesForm;","import React from 'react';\r\n\r\nexport const Tabla = ({encabezado, filas}) => {\r\n\r\n    return (\r\n        <div className=\"table-box\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        {encabezado}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                     {filas}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const EncabezadoTabla = ({children}) => {\r\n    return (\r\n        <th>\r\n            {children}\r\n        </th>\r\n    )\r\n}\r\nexport const FilaTabla = ({children}) => {\r\n    return (\r\n        <tr>\r\n            {children}\r\n        </tr>\r\n    )\r\n}\r\nexport const CeldaTabla = ({dato}) => {\r\n    return (\r\n        <td>\r\n            {dato}\r\n        </td>\r\n    )\r\n}\r\nexport const CeldaBotonTabla = ({titulo, action}) => {\r\n    return (\r\n        <td>\r\n            <button className=\"table-button\" onClick={() => action()}>{titulo}</button>\r\n        </td>\r\n    )\r\n}\r\n\r\nexport default Tabla;","import axios from 'axios';\r\n\r\nconst RAIZ_URL = `http://localhost`;\r\n\r\nconst PORT_GATEWAY = '8181'\r\nconst PORT_USUARIO = PORT_GATEWAY\r\nconst PORT_PRODUCTO = PORT_GATEWAY\r\nconst PORT_PEDIDO = PORT_GATEWAY\r\nconst PORT_LIQUIDACION = PORT_GATEWAY\r\n\r\n/*\r\nconst PORT_USUARIO = '9000'\r\nconst PORT_PRODUCTO = '9001'\r\nconst PORT_PEDIDO = '9002'\r\nconst PORT_LIQUIDACION = '9004'\r\n */\r\n\r\nconst API_PRODUCTO = 'producto'\r\nconst API_PEDIDO = 'pedido'\r\nconst API_OBRA = 'obra'\r\nconst API_DETALLE_PEDIDO = 'detallepedido'\r\nconst API_LIQUIDACION = 'liquidacion'\r\nconst API_CLIENTE = 'cliente'\r\nconst API_EMPLEADO = 'empleado'\r\n\r\nconst headers = {\r\n    'Access-Control-Allow-Origin': \"*\",\r\n    'Access-Control-Allow-Methods': \"GET, POST, PATCH, PUT, DELETE, OPTIONS\",\r\n    'Access-Control-Allow-Headers': \"Origin, X-Requested-With, Content-Type, Accept\"\r\n}\r\n\r\n// --- USER METHODS ---\r\nexport const login = async ({username, password}) => {\r\n    const URL = `${RAIZ_URL}:8181/login`;\r\n    try {\r\n        const response = await axios.post(URL, {username, password}, {headers})\r\n        const {data: dataResponse, status} = response\r\n        if (typeof dataResponse === 'string' || status !== 200) {\r\n            if (status === 404) {\r\n                localStorage.removeItem(\"token\")\r\n            }\r\n        } else {\r\n            return dataResponse\r\n        }\r\n    } catch (error) {\r\n        const message = `${error.response ? error.message : error}`;\r\n        console.log(\"Error en el login: \", {method: 'login', URL, message})\r\n    }\r\n}\r\nexport const register = async (user) => POST(`${API_OBRA}`, user);\r\n\r\n// --- OBRA METHODS ---\r\nexport const getObras = async () => GET(PORT_USUARIO, `${API_OBRA}`);\r\nexport const postObra = async (obra) => POST(PORT_USUARIO, `${API_OBRA}`, obra);\r\nexport const putObra = async (obra) => PUT(PORT_USUARIO, `${API_OBRA}/${obra.id}`, obra);\r\n\r\n// --- PEDIDO METHODS ---\r\nexport const getPedidos = async () => GET(PORT_PEDIDO, `${API_PEDIDO}`);\r\nexport const postPedido = async (pedido) => POST(PORT_PEDIDO, `${API_PEDIDO}`, pedido);\r\nexport const putPedido = async (pedido) =>  PUT(PORT_PEDIDO, `${API_PEDIDO}/?id=${pedido.id}&nuevoEstado=${pedido.estado}`);\r\n\r\n\r\n// --- DETALLE PEDIDO METHODS ---\r\nexport const postDetalle = async (detallePedido, pedido) => POST(PORT_PEDIDO, `${API_DETALLE_PEDIDO}/?idPedido=${pedido.id}`, detallePedido);\r\nexport const putDetalle = async (detallePedido) => PUT(PORT_PEDIDO, `${API_DETALLE_PEDIDO}`, detallePedido);\r\nexport const deleteDetalle = async (detallePedido) => DELETE(PORT_PEDIDO, `${API_DETALLE_PEDIDO}/id?idDetalle=${detallePedido.id}`);\r\n\r\n// --- PRODUCTO METHODS ---\r\nexport const getProductos = async () => GET(PORT_PRODUCTO, `${API_PRODUCTO}`);\r\nexport const getUnidades = () => GET(PORT_PRODUCTO, `${API_PRODUCTO}/unidades`);\r\nexport const postProducto = async (producto) => POST(PORT_PRODUCTO, `${API_PRODUCTO}`, producto);\r\nexport const putProducto = async (producto) => PUT(PORT_PRODUCTO, `${API_PRODUCTO}`, producto);\r\n\r\n// --- LIQUIDACION METHODS ---\r\nexport const getLiquidaciones = async () => GET(PORT_LIQUIDACION, `${API_LIQUIDACION}`);\r\nexport const postLiquidacionTodos = async () => POST(PORT_LIQUIDACION, `${API_LIQUIDACION}/todos`);\r\nexport const postLiquidacionEmpleado = async (empleado) => POST(PORT_LIQUIDACION, `${API_LIQUIDACION}/empleado?idEmpleado=${empleado.id}`);\r\nexport const postSueldo = async (sueldo) => POST(PORT_LIQUIDACION, `${API_LIQUIDACION}/sueldo`, sueldo);\r\nexport const getSueldo = async (empleado) => GET(PORT_LIQUIDACION, `${API_LIQUIDACION}/empleado/sueldo?idEmpleado=${empleado.id}`);\r\n\r\n// --- CLIENTE METHODS ---\r\nexport const getClientes = async () => GET(PORT_USUARIO, `${API_CLIENTE}`);\r\nexport const postCliente = async (cliente) => POST(PORT_USUARIO, `${API_CLIENTE}`, cliente);\r\nexport const putCliente = async (cliente) => PUT(PORT_USUARIO, `${API_CLIENTE}`, cliente);\r\n\r\n// --- EMPLEADO METHODS ---\r\nexport const getEmpleados = async () => GET(PORT_USUARIO, `${API_EMPLEADO}`);\r\nexport const postEmpleado = async (empleado) => POST(PORT_USUARIO, `${API_EMPLEADO}`, empleado);\r\nexport const putEmpleado = async (empleado) => PUT(PORT_USUARIO, `${API_EMPLEADO}`, empleado);\r\n\r\nconst getNewHeader = () => {\r\n    const token = localStorage.getItem('token');\r\n    return {...headers, Authorization: `Bearer ${token}`}\r\n}\r\n\r\n// --- GENERAL METHODS ---\r\nexport const POST = async (port, postfixUrl, data) => {\r\n    const URL = `${RAIZ_URL}:${port}/api/${postfixUrl}`;\r\n\r\n    const method = `POST ${URL}`;\r\n\r\n    console.log({request: method, data})\r\n    try {\r\n        const response = await axios.post(URL, data, {headers: getNewHeader()})\r\n        const {data: dataResponse, status} = response\r\n        if (status !== 200) {\r\n            if (status === 401) {\r\n                localStorage.removeItem(\"token\")\r\n                localStorage.removeItem(\"username\")\r\n            }\r\n            throw new Error(dataResponse)\r\n        } else {\r\n            console.log({response: method, dataResponse})\r\n            return {data: dataResponse}\r\n        }\r\n    } catch (error) {\r\n        const message = `${error.response ? error.response.data : error}`;\r\n        console.error({method, message, error: error.response})\r\n        return {error: message}\r\n    }\r\n}\r\n\r\nexport const PUT = async (port, postfixUrl, data) => {\r\n    console.log({postfixUrl})\r\n    const URL = `${RAIZ_URL}:${port}/api/${postfixUrl}`;\r\n\r\n    const method = `PUT ${URL}`\r\n    console.log({request: method, data})\r\n\r\n    try {\r\n        const response = await axios.put(URL, data, {headers: getNewHeader()})\r\n        const {data: dataResponse, status} = response\r\n        if (status !== 200) {\r\n            if (status === 401) {\r\n                localStorage.removeItem(\"token\")\r\n                localStorage.removeItem(\"username\")\r\n            }\r\n            throw new Error(dataResponse)\r\n        } else {\r\n            console.log({response: method, dataResponse})\r\n            return {data: dataResponse}\r\n        }\r\n    } catch (error) {\r\n        const message = `${error.response ? error.response.data : error}`;\r\n        console.error({method, URL, message, error: error.response})\r\n        return {error: message}\r\n    }\r\n}\r\n\r\nexport const GET = async (port, postfixUrl) => {\r\n    const URL = `${RAIZ_URL}:${port}/api/${postfixUrl}`;\r\n\r\n    const method = `GET ${URL}`\r\n\r\n    console.log({request: method})\r\n\r\n    try {\r\n        const response = await axios.get(URL, {headers: getNewHeader()})\r\n\r\n        const {data: dataResponse, status} = response\r\n\r\n        if (status !== 200) {\r\n            if (status === 401) {\r\n                localStorage.removeItem(\"token\")\r\n                localStorage.removeItem(\"username\")\r\n            }\r\n            throw new Error(dataResponse)\r\n        } else {\r\n            console.log({response: method, dataResponse})\r\n            return {data: dataResponse}\r\n        }\r\n    } catch (error) {\r\n        const message = `${error.response ? error.response.data : error}`;\r\n        console.error({method, URL, message, error: error.response})\r\n        return {error: message}\r\n    }\r\n}\r\n\r\nexport const DELETE = async (port, postfixUrl) => {\r\n    const URL = `${RAIZ_URL}:${port}/api/${postfixUrl}`;\r\n    const method = `DELETE ${URL}`\r\n    console.log({request: method})\r\n\r\n    try {\r\n        const response = await axios.delete(URL, {headers: getNewHeader()})\r\n\r\n        const {data: dataResponse, status} = response\r\n\r\n        if (status !== 200) {\r\n            if (status === 401) {\r\n                localStorage.removeItem(\"token\")\r\n                localStorage.removeItem(\"username\")\r\n            }\r\n            throw new Error(dataResponse)\r\n        } else {\r\n            console.log({response: method, dataResponse})\r\n            return {data: dataResponse}\r\n        }\r\n    } catch (error) {\r\n        const message = `${error.response ? error.response.data : error}`;\r\n        console.error({method, URL, message, error: error.response})\r\n        return {error: message}\r\n    }\r\n}","import ClientesForm from './ClientesForm';\r\nimport {CeldaBotonTabla, CeldaTabla, EncabezadoTabla, FilaTabla, Tabla} from '../Tabla';\r\nimport {useEffect, useState} from 'react';\r\nimport '../styles/Tabla.css';\r\nimport {getClientes, postCliente, putCliente} from '../../RestServices';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\nimport {toast} from 'react-toastify';\r\n\r\nconst clienteInicial = {\r\n    razonSocial: '',\r\n    habilitadoOnline: true,\r\n    maxCuentaCorriente: 0.0,\r\n    mail: '',\r\n    cuit: ''\r\n};\r\n\r\nconst Clientes = () => {\r\n    const history = useHistory();\r\n    const [cliente, setCliente] = useState(clienteInicial);\r\n    const [listaClientes, setListaClientes] = useState([]);\r\n\r\n    const fetchClientes = () => {\r\n        getClientes().then(({data}) => {\r\n            if (data) {\r\n                setListaClientes(data)\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"token\")) {\r\n            fetchClientes()\r\n        } else {\r\n            history.push(RUTAS.login[2])\r\n        }\r\n    }, [history]);\r\n\r\n\r\n    const actualizarCliente = (atributo, valor) => {\r\n        const clienteNuevo = {...cliente, [atributo]: valor};\r\n        setCliente(clienteNuevo);\r\n    }\r\n\r\n    const validarCliente = !!(cliente.cuit && cliente.razonSocial && cliente.mail && cliente.maxCuentaCorriente)\r\n\r\n    const saveOrUpdate = (e) => {\r\n        e.preventDefault()\r\n        if (validarCliente) {\r\n            (!(cliente.id)) ? postCliente(cliente).then(({data, error=\"No se ha podido guardar el cliente\"}) => {\r\n                    if (data) {\r\n                        toast.success(\"El cliente se ha guardado correctamente\")\r\n                        fetchClientes();\r\n                        setCliente(clienteInicial);\r\n                    } else {\r\n                        toast.error(error)\r\n                    }\r\n                }) :\r\n                putCliente(cliente).then(({data, error=\"No se ha podido actualizar el cliente\"}) => {\r\n                    if (data) {\r\n                        toast.success(\"El cliente se ha actualizado correctamente\")\r\n                        fetchClientes();\r\n                        setCliente(clienteInicial);\r\n                    } else {\r\n                        toast.error(error)\r\n                    }\r\n                });\r\n        } else\r\n            toast.error(\"Faltan campos del cliente\")\r\n\r\n    };\r\n\r\n    const filasCliente = () => {\r\n        if (listaClientes)\r\n            return listaClientes.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={e.razonSocial}/>\r\n                    <CeldaTabla dato={e.mail}/>\r\n                    <CeldaBotonTabla titulo=\"Seleccionar\" action={() => setCliente(e)}/>\r\n                </FilaTabla>\r\n            });\r\n        else\r\n            return <></>\r\n    }\r\n\r\n    const encabezado = [\"ID Usuario\", \"Razón social\", \"Email\", \"\"].map((e, i) => <EncabezadoTabla\r\n        key={i}>{e}</EncabezadoTabla>)\r\n\r\n    const limpiarCampos = (e) => {\r\n        e.preventDefault()\r\n        setCliente(clienteInicial);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div><h1>Gestión de clientes</h1></div>\r\n            <ClientesForm cliente={cliente}\r\n                          actualizarCliente={actualizarCliente}\r\n                          saveOrUpdate={saveOrUpdate}\r\n                          clean={limpiarCampos}/>\r\n            <Tabla encabezado={encabezado} filas={filasCliente()}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Clientes;","import \"../styles/Form.css\";\r\nimport {Label} from \"../FormComponents\";\r\nimport {useState} from \"react\";\r\nimport {login} from \"../../RestServices\";\r\nimport {toast} from 'react-toastify';\r\n\r\nconst Login = ({logged, setLogged}) => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const ingresar = () => {\r\n        if (!logged) {\r\n            login({username, password}).then((data) => {\r\n                if (data && data.accessToken) {\r\n                    setLogged(true)\r\n                    localStorage.setItem('token', data.accessToken);\r\n                    localStorage.setItem('username', username);\r\n                    toast.success('Se ha logueado correctamente!')\r\n                } else {\r\n                    toast.error('Revise usuario y/o contraseña')\r\n                    setLogged(false)\r\n                    localStorage.removeItem('token');\r\n                    localStorage.removeItem('username');\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function handleEnter(event) {\r\n        if (event.key === 'Enter') {\r\n            const form = event.target.form;\r\n            const index = Array.prototype.indexOf.call(form, event.target);\r\n            form.elements[index + 1].focus();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    if (logged) {\r\n        return <h1>Bienvenido {localStorage.getItem(\"username\")}!</h1>\r\n    } else {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1 className=\"form-step\"> Login </h1>\r\n                <form id='formLogin'>\r\n                    <div className=\"col-75\">\r\n                        <Label value=\"Nombre de usuario\"/>\r\n                        <div className=\"col-75\">\r\n                            <input\r\n                                name=\"nombre\"\r\n                                type=\"text\"\r\n                                placeholder=\"Username (dan2021)\"\r\n                                value={username}\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                                onKeyPress={e => handleEnter(e)}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-75\">\r\n                        <Label value=\"Contraseña\"/>\r\n                        <div className=\"col-75\">\r\n                            <input\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                placeholder=\"Password (dan2021)\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                onKeyPress={event => {\r\n                                    if (event.key === 'Enter') {\r\n                                        ingresar()\r\n                                    }\r\n                                }}/>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div className=\"col-75 button-login\">\r\n                    <div>\r\n                        <button className=\"btn-wide\" onClick={ingresar}>Ingresar</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import {Label} from \"../FormComponents\";\r\n\r\nconst ObrasForm = ({obra, actualizarCampos, saveOrUpdate, clean}) => {\r\n\r\n    const handleChange = (evt) => {\r\n        evt.preventDefault();\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-box\">\r\n            <h3>Obra</h3>\r\n            <div className=\"form-row\">\r\n                <Label value=\"Descripción:\"/>\r\n                <div className=\"form-input\">\r\n                    <input name=\"descripcion\"\r\n                           value={obra.descripcion}\r\n                           onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-row\">\r\n                <Label value=\"Latitud:\"/>\r\n                <div className=\"form-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        pattern=\"[0-9]*\"\r\n                        name=\"latitud\"\r\n                        value={obra.latitud}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-row\">\r\n                <Label value=\"Longitud:\"/>\r\n                <div className=\"form-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        pattern=\"[0-9]*\"\r\n                        name=\"longitud\"\r\n                        value={obra.longitud}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n                <Label value=\"Dirección:\"/>\r\n                <div className=\"form-input\">\r\n                    <input\r\n                        name=\"direccion\"\r\n                        value={obra.direccion}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n                <Label value=\"Superficie:\"/>\r\n                <div className=\"form-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        pattern=\"[0-9]*\"\r\n                        name=\"superficie\"\r\n                        value={obra.superficie}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n                <Label value=\"Tipo de obra:\"/>\r\n                <div className=\"form-input\">\r\n                    <select name=\"tipoObra\" value={obra.tipoObra} onChange={handleChange}>\r\n                        <option value=\"REFORMA\">Reforma</option>\r\n                        <option value=\"CASA\">Casa</option>\r\n                        <option value=\"EDIFICIO\">Edificio</option>\r\n                        <option value=\"VIAL\">Vial</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-buttons\">\r\n                <div className=\"form-button\">\r\n                    <button type=\"button\" onClick={(e) => saveOrUpdate(e)}>Guardar</button>\r\n                </div>\r\n                <div className=\"form-button\">\r\n                    <button type=\"button\" onClick={clean}>Limpiar</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ObrasForm;","import {ComboForm} from \"../FormComponents\";\r\n\r\nconst ClienteObrasForm = ({cliente, actualizarCampos, listaClientes}) => {\r\n\r\n    const handleChange = (evt) => {\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-box\">\r\n            <h3>Cliente</h3>\r\n\r\n            <ComboForm\r\n                label='Razon social:'\r\n                placeholder='Razon Social'\r\n                name='razonSocial'\r\n                value={cliente.razonSocial}\r\n                onChange={handleChange}\r\n                opciones={listaClientes.map(c => {\r\n                    return c.razonSocial\r\n                })}/>\r\n\r\n            <ComboForm\r\n                label='CUIT:'\r\n                placeholder='CUIT'\r\n                name='cuit'\r\n                value={cliente.cuit}\r\n                onChange={handleChange}\r\n                opciones={listaClientes.map(c => {\r\n                    return c.cuit\r\n                })}/>\r\n\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ClienteObrasForm;","import {CeldaBotonTabla, CeldaTabla, EncabezadoTabla, FilaTabla, Tabla} from '../Tabla';\r\nimport ObrasForm from \"./ObrasForm\";\r\nimport ClienteObrasForm from \"./ClienteObrasForm\";\r\nimport \"../styles/Form.css\";\r\nimport \"../styles/Tabla.css\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {getClientes, getObras, postObra, putObra} from '../../RestServices';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\nimport {toast} from 'react-toastify';\r\n\r\nconst clienteInicial = {\r\n    id: null,\r\n    razonSocial: \"\",\r\n    cuit: \"\"\r\n}\r\n\r\nconst obraInicial = {\r\n    id: null,\r\n    descripcion: \"\",\r\n    latitud: \"\",\r\n    longitud: \"\",\r\n    direccion: \"\",\r\n    superficie: \"\",\r\n    tipoObra: \"REFORMA\",\r\n    cliente: clienteInicial\r\n}\r\n\r\nconst Obras = () => {\r\n    const history = useHistory();\r\n    const [obra, setObra] = useState(obraInicial);\r\n    const [cliente, setCliente] = useState(clienteInicial);\r\n    const [listaClientes, setListaClientes] = useState([]);\r\n    const [listaObras, setListaObras] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"token\")) {\r\n            fetchClientes();\r\n            fetchObras();\r\n        } else\r\n            history.push(RUTAS.login)\r\n    }, [history]);\r\n\r\n    const fetchClientes = () => {\r\n        getClientes().then(({data}) => {\r\n            if (data) {\r\n                setListaClientes(data)\r\n                setCliente(data[0])\r\n            }\r\n        });\r\n    }\r\n\r\n    const fetchObras = () => {\r\n        getObras().then(({data}) => {\r\n            if (data)\r\n                setListaObras(data)\r\n        });\r\n    }\r\n\r\n    const actualizarObra = (nombreAtributo, valorAtributo) => {\r\n        const nuevaObra = {...obra, [nombreAtributo]: valorAtributo};\r\n        setObra(nuevaObra);\r\n    }\r\n\r\n    const actualizarCliente = (nombreAtributo, valorAtributo) => {\r\n        const index = listaClientes.findIndex(c => c.[nombreAtributo] === valorAtributo);\r\n        setCliente(listaClientes[index])\r\n        const nuevaObra = {...obra, cliente: cliente};\r\n        setObra(nuevaObra);\r\n    }\r\n\r\n    const validateObra = () => {\r\n        return !!(obra.descripcion && obra.latitud && obra.longitud && obra.superficie);\r\n    }\r\n\r\n    const saveOrUpdate = (e) => {\r\n        e.preventDefault()\r\n        if (validateObra()) {\r\n            obra.cliente = cliente\r\n            !(obra.id) ? postObra(obra).then(({data, error = \"No se ha podido guardar la obra correctamente\"}) => {\r\n                if (data) {\r\n                    toast.success(\"La obra se ha guardado correctamente\")\r\n                    fetchObras();\r\n                    setObra(obraInicial);\r\n                    setCliente(clienteInicial);\r\n                } else\r\n                    toast.error(error)\r\n            }) : putObra(obra).then(({data, error = \"No se ha podido actualizar la obra correctamente\"}) => {\r\n                if (data) {\r\n                    setCliente(data)\r\n                    toast.success(\"La obra se ha actualizado correctamente\")\r\n                    fetchObras();\r\n                    setObra(obraInicial);\r\n                    setCliente(clienteInicial);\r\n                } else\r\n                    toast.error(error)\r\n            });\r\n\r\n        } else {\r\n            console.log({cliente})\r\n            console.log({obra})\r\n            toast.error(\"Faltan indicar ciertos datos de la obra\");\r\n        }\r\n\r\n    };\r\n\r\n    const cleanObra = () => {\r\n        setObra(obraInicial);\r\n        setCliente(clienteInicial);\r\n    }\r\n\r\n    const filasObras = () => {\r\n        if (listaObras) {\r\n            console.log(listaObras)\r\n            return listaObras.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={e.descripcion}/>\r\n                    <CeldaTabla dato={e.direccion}/>\r\n                    <CeldaTabla dato={e.superficie}/>\r\n                    <CeldaTabla dato={e.tipoObra}/>\r\n                    <CeldaBotonTabla titulo=\"Seleccionar\" action={() => {\r\n                        setObra(e);\r\n                        setCliente(e.cliente);\r\n                    }}/>\r\n                </FilaTabla>\r\n            });\r\n        } else {\r\n            return <></>\r\n        }\r\n    }\r\n\r\n    const encabezado = [\"ID Obra\", \"Descripcion\", \"Direccion\", \"Superficie\", \"Tipo de Obra\", \"\"]\r\n        .map((e, i) => {\r\n            return <EncabezadoTabla key={i}>{e}</EncabezadoTabla>\r\n        })\r\n\r\n    return (\r\n        <>\r\n            <h1>Gestion de Obras</h1>\r\n            <div className=\"panel-form-doble\">\r\n                <ObrasForm\r\n                    obra={obra}\r\n                    actualizarCampos={actualizarObra}\r\n                    clean={cleanObra}\r\n                    saveOrUpdate={saveOrUpdate}/>\r\n                <ClienteObrasForm\r\n                    cliente={cliente}\r\n                    actualizarCampos={actualizarCliente}\r\n                    listaClientes={listaClientes}/>\r\n            </div>\r\n            <div className=\"panel\">\r\n                <Tabla encabezado={encabezado} filas={filasObras()}/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Obras;","import '../FormComponents';\r\nimport CampoForm, { ComboForm } from '../FormComponents';\r\n\r\nconst ProductosForm = ({ producto, unidades, actualizarCampos, clean, saveOrUpdate }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        evt.preventDefault();\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-box\">\r\n            <h3>Producto</h3>\r\n\r\n            <CampoForm label='Nombre:'\r\n                name='nombre'\r\n                value={producto.nombre}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm label='Descripción:'\r\n                name='descripcion'\r\n                value={producto.descripcion}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm label='Precio:'\r\n                name='precio'\r\n                pattern=\"[0-9.]*\"\r\n                value={producto.precio}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm label='Stock actual:'\r\n                name='stockActual'\r\n                pattern=\"[0-9.]*\"\r\n                value={producto.stockActual}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm label='Stock mínimo:'\r\n                name='stockMinimo'\r\n                pattern=\"[0-9.]*\"\r\n                value={producto.stockMinimo}\r\n                onChange={handleChange} />\r\n\r\n            <ComboForm\r\n                label=\"Unidad:\"\r\n                name=\"unidad\"\r\n                value={producto.unidad.descripcion}\r\n                opciones={(unidades && unidades.length > 0) ? unidades.map(u => { return u.descripcion }) : []}\r\n                onChange={handleChange} />\r\n\r\n            <div className=\"form-buttons\">\r\n                <div className=\"form-button\">\r\n                    <button type=\"button\" onClick={saveOrUpdate}>Guardar</button>\r\n                </div>\r\n                <div className=\"form-button\">\r\n                    <button type=\"button\" onClick={clean}>Limpiar</button>\r\n                </div>\r\n            </div>\r\n        </form >\r\n    );\r\n}\r\n\r\nexport default ProductosForm;","import {CeldaBotonTabla, CeldaTabla, EncabezadoTabla, FilaTabla, Tabla} from '../Tabla';\r\nimport ProductosForm from './ProductosForm';\r\nimport '../styles/Form.css';\r\nimport {useEffect, useState} from 'react';\r\nimport {getProductos, getUnidades, postProducto, putProducto} from '../../RestServices';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst unidadInicial = {\r\n    descripcion: ''\r\n}\r\n\r\nconst productoInicial = {\r\n    nombre: '',\r\n    descripcion: '',\r\n    precio: '',\r\n    stockActual: '',\r\n    stockMinimo: '',\r\n    unidad: unidadInicial\r\n}\r\n\r\nconst Productos = () => {\r\n    const history = useHistory();\r\n    const [producto, setProducto] = useState(productoInicial);\r\n    const [listaProductos, setListaProductos] = useState([]);\r\n    const [listaUnidades, setListaUnidades] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"token\")) {\r\n            fetchProductos();\r\n        } else\r\n            history.push(RUTAS.login)\r\n    }, [history]);\r\n\r\n    const fetchProductos = () => {\r\n        getProductos().then(({data}) => {\r\n            if (data)\r\n                setListaProductos(data)\r\n        });\r\n        getUnidades().then(({data}) => {\r\n            if (data)\r\n                setListaUnidades(data)\r\n        });\r\n    }\r\n\r\n    const actualizarProducto = (nombreAtributo, valorAtributo) => {\r\n        if (nombreAtributo === 'unidad') valorAtributo = {...unidadInicial, descripcion: valorAtributo};\r\n        const nuevoProducto = {...producto, [nombreAtributo]: valorAtributo};\r\n        setProducto(nuevoProducto);\r\n    }\r\n\r\n    const validarProducto = !!(producto.nombre && producto.precio && producto.descripcion && producto.stockActual && producto.stockMinimo && producto.unidad);\r\n\r\n    const saveOrUpdate = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (validarProducto) {\r\n            (!(producto.id)) ? postProducto(producto).then(({data, error = \"No se ha podido guardar el producto\"}) => {\r\n                    if (data) {\r\n                        toast.success(\"El producto se ha guardado correctamente\")\r\n                        fetchProductos();\r\n                        setProducto(productoInicial);\r\n                    } else {\r\n                        toast.error(error)\r\n                    }\r\n                }) :\r\n                putProducto(producto).then(({data, error = \"No se ha podido actualizar el producto\"}) => {\r\n                    if (data) {\r\n                        toast.success(\"El producto se ha actualizado correctamente\")\r\n                        fetchProductos();\r\n                        setProducto(productoInicial);\r\n                    } else {\r\n                        toast.error(error)\r\n                    }\r\n                });\r\n        } else\r\n            toast.error(\"Faltan campos del producto\")\r\n    };\r\n\r\n    const cleanProducto = () => {\r\n        setProducto(productoInicial);\r\n    }\r\n\r\n    const filasProductos = () => {\r\n        if (listaProductos && listaProductos.length > 0)\r\n            return listaProductos.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={e.nombre}/>\r\n                    <CeldaTabla dato={e.descripcion}/>\r\n                    <CeldaTabla dato={e.precio}/>\r\n                    <CeldaTabla dato={e.stockActual}/>\r\n                    <CeldaTabla dato={e.stockMinimo}/>\r\n                    <CeldaBotonTabla titulo=\"Seleccionar\" action={() => setProducto(e)}/>\r\n                </FilaTabla>\r\n            });\r\n        else\r\n            return <></>\r\n    }\r\n\r\n    const encabezado = [\"ID Producto\", \"Nombre\", \"Descripcion\", \"Precio\", \"Stock Actual\", \"Stock Minimo\", \"\"]\r\n        .map((e, i) => {\r\n            return <EncabezadoTabla key={i}>{e}</EncabezadoTabla>\r\n        })\r\n\r\n    return (\r\n        <>\r\n            <h1>Gestión productos</h1>\r\n            <div className=\"panel-form-simple\">\r\n                <ProductosForm\r\n                    producto={producto}\r\n                    unidades={listaUnidades}\r\n                    actualizarCampos={actualizarProducto}\r\n                    clean={cleanProducto}\r\n                    saveOrUpdate={saveOrUpdate}/>\r\n            </div>\r\n\r\n            <div className=\"panel\">\r\n                <Tabla encabezado={encabezado} filas={filasProductos()}/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Productos;","import CampoForm, {ComboForm, Label} from \"../FormComponents\";\r\nimport React from \"react\";\r\n\r\nconst PedidosForm = ({ pedido, actualizarCampos, clean, saveOrUpdate, verDetalle, obras }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        evt.preventDefault();\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    const estadosPedido =\r\n        ['NUEVO', 'CONFIRMADO', 'PENDIENTE', 'CANCELADO', 'ACEPTADO', 'RECHAZADO', 'EN_PREPARACION', 'ENTREGADO'];\r\n    return (\r\n        <form className=\"form-box\">\r\n            <div className=\"form-row\">\r\n                <h2>Pedido</h2>\r\n            </div>\r\n            <div className=\"form-row\">\r\n                <Label value='Fecha:'/>\r\n                <div className=\"form-input\">\r\n                    <input name='fechaPedido'\r\n                           type='date'\r\n                           pattern=\"\\d{4}/\\d{1,2}/\\d{1,2}\"\r\n                           value={pedido.fechaPedido}\r\n                           onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n            <ComboForm\r\n                label='Obra:'\r\n                name='obra'\r\n                onChange={handleChange}\r\n                opciones={(obras && obras.length > 0) ? obras.map(o => { return o.id }) : []} />\r\n            <ComboForm\r\n                label='Estado:'\r\n                name='estado'\r\n                value={pedido.estado}\r\n                onChange={handleChange}\r\n                opciones={estadosPedido} />\r\n\r\n            <div className=\"form-buttons\">\r\n                <div className=\"form-button\">\r\n                    <button type=\"button\" onClick={clean}>Limpiar</button>\r\n                </div>\r\n                <div className=\"form-button\">\r\n                    <button type=\"button\" onClick={saveOrUpdate}>Guardar</button>\r\n                </div>\r\n            </div>\r\n        </form >\r\n    );\r\n}\r\n\r\nexport default PedidosForm;","import '../FormComponents'\r\nimport CampoForm, {ComboForm} from '../FormComponents';\r\n\r\nconst DetallePedidoForm = ({detallePedido, actualizarCampos, listaProductos, update, hayPedido}) => {\r\n\r\n    const handleChange = (evt) => {\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-box\">\r\n            <div className=\"form-row\">\r\n                <h2>Detalle pedido</h2>\r\n            </div>\r\n            <CampoForm\r\n                label='Cantidad:'\r\n                pattern='[0-9.]*'\r\n                name='cantidad'\r\n                value={detallePedido.cantidad}\r\n                onChange={handleChange}/>\r\n\r\n            <CampoForm\r\n                label='Precio:'\r\n                name='precio'\r\n                readOnly={true}\r\n                value={(detallePedido.cantidad ?? 0) * (detallePedido.producto?.precio ?? 1)}/>\r\n\r\n            <ComboForm\r\n                label='Producto:'\r\n                name='producto'\r\n                onChange={handleChange}\r\n                value={detallePedido.producto?.nombre}\r\n                opciones={(listaProductos && listaProductos.length) ? listaProductos.map(p => {\r\n                    return p.nombre\r\n                }):[]}/>\r\n\r\n            {\r\n                hayPedido ?  <div className=\"form-buttons\">\r\n                    <div className=\"form-button\">\r\n                        <button className=\"btn-wide\" type=\"button\" onClick={update}>Guardar</button>\r\n                    </div>\r\n                </div>\r\n                    : <></>\r\n            }\r\n\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default DetallePedidoForm;","import {CeldaBotonTabla, CeldaTabla, EncabezadoTabla, FilaTabla, Tabla} from '../Tabla';\r\nimport PedidosForm from './PedidosForm';\r\nimport DetallePedidoForm from './DetallePedidoForm'\r\nimport '../styles/Form.css';\r\nimport {useEffect, useState} from \"react\";\r\nimport {\r\n    deleteDetalle,\r\n    getObras,\r\n    getPedidos,\r\n    getProductos,\r\n    postDetalle,\r\n    postPedido,\r\n    putDetalle,\r\n    putPedido\r\n} from '../../RestServices';\r\n\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst pedidoInicial = {\r\n    id: null,\r\n    fechaPedido: '',\r\n    obra: '',\r\n    estado: 'NUEVO',\r\n    detalle: []\r\n}\r\n\r\nconst detallePedidoInicial = {\r\n    id: null,\r\n    cantidad: '',\r\n    precio: '',\r\n    producto: ''\r\n}\r\n\r\nconst Pedidos = () => {\r\n    const history = useHistory();\r\n\r\n    const [pedido, setPedido] = useState(pedidoInicial);\r\n    const [listaPedidos, setListaPedidos] = useState([]);\r\n\r\n    const [detallePedido, setDetalle] = useState(detallePedidoInicial);\r\n    const [listaDetalle, setListaDetalle] = useState([]);\r\n    const [listaProductos, setListaProductos] = useState([]);\r\n    const [listaObras, setListaObras] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"token\")) {\r\n            getPedidos().then(({data}) => {\r\n                if (data)\r\n                    setListaPedidos(data)\r\n            })\r\n            fetchProductos();\r\n            fetchObras();\r\n        } else\r\n            history.push(RUTAS.login)\r\n\r\n    }, [history]);\r\n\r\n    const fetchPedidos = () => {\r\n        getPedidos().then(({data}) => {\r\n            if (data) {\r\n                setListaPedidos(data)\r\n                setListaDetalle(data.detalle)\r\n                setDetalle(data.detalle ? data.detalle[0] : detallePedidoInicial)\r\n            }\r\n        })\r\n    }\r\n\r\n    const fetchProductos = () => {\r\n        getProductos().then(({data}) => {\r\n            if (data) {\r\n                setListaProductos(data)\r\n                detallePedido.producto = data[0]\r\n                setDetalle(detallePedido)\r\n            }\r\n        });\r\n    }\r\n\r\n    const fetchObras = () => {\r\n        getObras().then(({data}) => {\r\n            if (data) {\r\n                setListaObras(data)\r\n                pedido.obra = data[0]\r\n            }\r\n        });\r\n    }\r\n\r\n    const actualizarPedido = (nombreAtributo, valorAtributo) => {\r\n        if (nombreAtributo === 'obra') {\r\n            const index = listaObras.findIndex(o => o.id == valorAtributo);\r\n            const nuevoPedido = {...pedido, obra: listaObras[index]};\r\n            setPedido(nuevoPedido);\r\n\r\n        } else {\r\n            const nuevoPedido = {...pedido, [nombreAtributo]: valorAtributo};\r\n            setPedido(nuevoPedido);\r\n        }\r\n    }\r\n\r\n    const validarPedido = !!(pedido.obra && pedido.estado && pedido.detalle && pedido.fechaPedido);\r\n\r\n    const savePedido = () => {\r\n        postPedido(pedido).then(({data, error = \"No se ha podido guardar el pedido\"}) => {\r\n            if (data) {\r\n                toast.success(\"El pedido se ha guardado correctamente\")\r\n                fetchPedidos();\r\n                setPedido(pedidoInicial);\r\n            } else {\r\n                toast.error(error)\r\n            }\r\n        })\r\n    }\r\n\r\n    const saveOrUpdatePedido = (e) => {\r\n        e.preventDefault()\r\n        if (validarPedido) {\r\n            (!(pedido.id)) ? savePedido() : putPedido(pedido).then(({data, error = \"No se ha podido actualizar el pedido\"}) => {\r\n                console.log({data,  error})\r\n                if (data) {\r\n                    toast.success(\"El pedido se ha actualizado correctamente\")\r\n                    fetchPedidos();\r\n                    setPedido(pedidoInicial);\r\n                } else {\r\n                    toast.error(error)\r\n                }\r\n            });\r\n        } else {\r\n            console.log(pedido)\r\n            toast.error(\"Faltan campos del pedido\")\r\n        }\r\n\r\n    };\r\n\r\n    const cleanPedido = () => {\r\n        setPedido(pedidoInicial);\r\n        setListaDetalle([]);\r\n        setDetalle(detallePedidoInicial);\r\n    }\r\n\r\n    const actualizarDetalle = (nombreAtributo, valorAtributo) => {\r\n        console.log({nombreAtributo, valorAtributo})\r\n        if (nombreAtributo === 'producto') {\r\n            const index = listaProductos.findIndex(p => p.nombre === valorAtributo);\r\n            detallePedido.producto = listaProductos[index]\r\n            detallePedido.precio = (detallePedido.cantidad ?? 0) * (listaProductos[index] ? listaProductos[index].precio : 1)\r\n            setDetalle(detallePedido)\r\n        } else {\r\n            const nuevoDetalle = {...detallePedido, [nombreAtributo]: valorAtributo};\r\n            nuevoDetalle.precio = (detallePedido.cantidad ?? 1) * (detallePedido.producto.precio ?? 1)\r\n            setDetalle(nuevoDetalle);\r\n        }\r\n    }\r\n\r\n    const validarDetalle = !!(detallePedido.producto && detallePedido.precio >= 0 && detallePedido.cantidad);\r\n\r\n    const updateDetalle = (e) => {\r\n        e.preventDefault()\r\n        if (pedido.id) {\r\n            if (validarDetalle) {\r\n                (!!(detallePedido.id)) ?\r\n                    putDetalle(detallePedido, pedido)\r\n                        .then(({data, error = \"No se ha podido actualizar el detalle del pedido\"}) => {\r\n                            if (data) {\r\n                                toast.success(\"El detalle del pedido se ha actualizado correctamente\")\r\n                                fetchPedidos();\r\n                                setDetalle(detallePedidoInicial);\r\n                            } else {\r\n                                toast.error(error)\r\n                            }\r\n                        })\r\n                    : postDetalle(detallePedido, pedido)\r\n                        .then(({data, error = \"No se ha podido guardar el detalle del pedido\"}) => {\r\n                            if (data) {\r\n                                toast.success(\"El detalle del pedido se ha guardado correctamente\")\r\n                                fetchPedidos();\r\n                                setDetalle(detallePedidoInicial);\r\n                            } else {\r\n                                toast.error(error)\r\n                            }\r\n                        });\r\n            } else {\r\n                console.log(detallePedido)\r\n                toast.error(\"Faltan campos del detalle del pedido\")\r\n            }\r\n        } else\r\n            toast.error(\"Debe seleccionar un pedido al cual actualizarle el detalle\")\r\n    };\r\n\r\n\r\n    const seleccionarPedido = (p) => {\r\n        setPedido(p);\r\n        setListaDetalle(p.detalle);\r\n        setDetalle(detallePedidoInicial);\r\n    }\r\n\r\n    const eliminarDetalle = (detallePedido) => deleteDetalle(detallePedido)\r\n        .then(({data, error = \"No se ha podido eliminar el detalle del pedido\"}) => {\r\n            if (data) {\r\n                toast.success(\"El detalle del pedido se ha eliminado correctamente\")\r\n                fetchPedidos();\r\n                setDetalle(detallePedidoInicial);\r\n            } else {\r\n                toast.error(error)\r\n            }\r\n        })\r\n\r\n    const encabezado = [\"ID Pedido\", \"Fecha de Pedido\", \"ID Obra\", \"Estado\", \"\"].map((e, i) => {\r\n        return <EncabezadoTabla key={i}>{e}</EncabezadoTabla>\r\n    })\r\n\r\n    const encabezadoDetalle = [\"ID Detalle\", \"Cantidad\", \"Precio\", \"Producto\", \"\", \"\"].map((e, i) => {\r\n        return <EncabezadoTabla key={i}>{e}</EncabezadoTabla>\r\n    })\r\n\r\n    const filasPedidos = () => {\r\n        if (listaPedidos) {\r\n            return listaPedidos.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={e.fechaPedido}/>\r\n                    <CeldaTabla dato={e.obra.id}/>\r\n                    <CeldaTabla dato={e.estado}/>\r\n                    <CeldaBotonTabla titulo=\"Seleccionar\" action={() => seleccionarPedido(e)}/>\r\n                </FilaTabla>\r\n            });\r\n        } else\r\n            return <></>\r\n    }\r\n\r\n    const filasDetalle = () => {\r\n        if (listaDetalle) {\r\n            return listaDetalle.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={e.cantidad}/>\r\n                    <CeldaTabla dato={e.precio}/>\r\n                    <CeldaTabla dato={e.producto.nombre}/>\r\n                    <CeldaBotonTabla titulo=\"Seleccionar\" action={() => setDetalle(e)}/>\r\n                    <CeldaBotonTabla titulo=\"Eliminar\" action={() => eliminarDetalle(e)}/>\r\n                </FilaTabla>\r\n            });\r\n        }\r\n        return <></>\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1>Gestión pedidos</h1>\r\n            <div className=\"panel-form-doble\">\r\n                <PedidosForm\r\n                    pedido={pedido}\r\n                    actualizarCampos={actualizarPedido}\r\n                    clean={cleanPedido}\r\n                    saveOrUpdate={saveOrUpdatePedido}\r\n                    obras={listaObras}/>\r\n                <DetallePedidoForm\r\n                    hayPedido={pedido && pedido.id}\r\n                    detallePedido={detallePedido}\r\n                    listaProductos={listaProductos}\r\n                    actualizarCampos={actualizarDetalle}\r\n                    update={updateDetalle}/>\r\n            </div>\r\n            <div className=\"table-double\">\r\n                <div className=\"table-div\">\r\n                    <h3>Pedidos</h3>\r\n                    <Tabla encabezado={encabezado} filas={filasPedidos()}/>\r\n                </div>\r\n                <div className=\"table-div\">\r\n                    <h3>Detalle</h3>\r\n                    <Tabla encabezado={encabezadoDetalle} filas={filasDetalle()}/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Pedidos;","import '../FormComponents'\r\nimport CampoForm, { ComboForm } from '../FormComponents'\r\n\r\nconst LiquidacionForm = ({ empleado, actualizarCampos, listaEmpleados, liquidarTodos, liquidarEmpleado, actualizarCamposSueldo, actualizarSueldoEmpleado, sueldoEmpleado }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(valorAtributo);\r\n    }\r\n    const handleChangeSueldo = (evt) => {\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCamposSueldo(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className='form-box'>\r\n            <ComboForm\r\n                label=\"Empleado\"\r\n                name=\"nombre\"\r\n                value={empleado.nombre}\r\n                onChange={handleChange}\r\n                opciones={listaEmpleados.map(e => { return e.nombre })}\r\n            />\r\n            <CampoForm\r\n                label=\"Monto\"\r\n                name=\"monto\"\r\n                pattern=\"[0-9.]*\"\r\n                value={sueldoEmpleado.monto}\r\n                onChange={handleChangeSueldo} />\r\n            <CampoForm\r\n                label=\"Porcentaje de comisión:\"\r\n                name=\"comision\"\r\n                pattern=\"[0-9.]*\"\r\n                value={sueldoEmpleado.comision}\r\n                onChange={handleChangeSueldo}\r\n            />\r\n            <div className=\"form-buttons\">\r\n                <div className=\"form-button\">\r\n                    <button type=\"button\" onClick={actualizarSueldoEmpleado}>Actualizar Sueldo</button>\r\n                </div>\r\n                <div className=\"form-button\">\r\n                    <button type=\"button\" onClick={liquidarEmpleado}>Liquidar Empleado</button>\r\n                </div>\r\n                <div className=\"form-button\">\r\n                    <button type=\"button\" onClick={liquidarTodos}>Liquidar a todos</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default LiquidacionForm;","import {useState} from \"react\";\r\nimport LiquidacionForm from \"./LiquidacionForm\";\r\nimport '../Tabla';\r\nimport '../styles/Form.css';\r\nimport {CeldaTabla, EncabezadoTabla, FilaTabla, Tabla} from '../Tabla';\r\nimport {\r\n    getEmpleados,\r\n    getLiquidaciones,\r\n    getSueldo,\r\n    postLiquidacionEmpleado,\r\n    postLiquidacionTodos,\r\n    postSueldo\r\n} from \"../../RestServices\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst empleadoInicial = {\r\n    nombre: ''\r\n}\r\n\r\nconst sueldoInicial = {\r\n    monto: 0,\r\n    comision: 0\r\n}\r\n\r\nconst Liquidacion = () => {\r\n    const history = useHistory();\r\n    const [listaLiquidacion, setListaLiquidacion] = useState([]);\r\n    const [listaEmpleados, setListaEmpleados] = useState([]);\r\n    const [empleado, setEmpleado] = useState(empleadoInicial);\r\n    const [sueldo, setSueldo] = useState(sueldoInicial);\r\n\r\n    const fetchEmpleados = () => {\r\n        getEmpleados().then(({data}) => {\r\n            if (data) {\r\n                setListaEmpleados(data)\r\n                setEmpleado(data[0])\r\n            }\r\n        });\r\n    }\r\n\r\n    const fetchLiquidacion = () => {\r\n        getLiquidaciones().then(({data}) => {\r\n            if (data)\r\n                setListaLiquidacion(data)\r\n        });\r\n    }\r\n\r\n    const fetchSueldo = (empleado) => {\r\n        if (empleado && empleado.id) {\r\n            getSueldo(empleado).then(({data}) => {\r\n                if (data) {\r\n                    setSueldo(data)\r\n                    toast.success(\"Se ha actualizado el sueldo correctamente al monto de \" + data.monto + \" y comisión \" + data.comision)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    useState(() => {\r\n        if (localStorage.getItem(\"token\")) {\r\n            fetchEmpleados();\r\n            fetchLiquidacion();\r\n        } else\r\n            history.push(RUTAS.login)\r\n\r\n    }, [history]);\r\n\r\n    const liquidarEmpleado = () => {\r\n        if (empleado && empleado.id) {\r\n            postLiquidacionEmpleado(empleado).then(() => fetchLiquidacion());\r\n        }\r\n    }\r\n\r\n    const liquidarTodos = () => {\r\n        postLiquidacionTodos().then(() => fetchLiquidacion());\r\n    }\r\n\r\n    const actualizarEmpleado = (valorAtributo) => {\r\n        const index = listaEmpleados.findIndex(e => e.nombre === valorAtributo);\r\n        setEmpleado(listaEmpleados[index]);\r\n        fetchSueldo(listaEmpleados[index]);\r\n    }\r\n\r\n    const actualizarCamposSueldo = (nombreAtributo, valorAtributo) => {\r\n        const nuevoSueldo = {...sueldo, [nombreAtributo]: valorAtributo};\r\n        setSueldo(nuevoSueldo);\r\n    }\r\n\r\n    const actualizarSueldoEmpleado = () => {\r\n        postSueldo(sueldo).then(() => {\r\n            fetchSueldo()\r\n        });\r\n    }\r\n\r\n\r\n    const filasLiquidacion = () => {\r\n        if (listaLiquidacion)\r\n            return listaLiquidacion.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={\r\n                        (listaEmpleados) ? listaEmpleados[listaEmpleados.findIndex(o => o.id == e.empleado.id)] ? listaEmpleados[listaEmpleados.findIndex(o => o.id == e.empleado.id)].nombre : \"-\" : \"-\"\r\n\r\n                    }/>\r\n                    <CeldaTabla dato={e.fecha}/>\r\n                    <CeldaTabla dato={e.monto}/>\r\n                </FilaTabla>\r\n            });\r\n        else\r\n            return <></>\r\n    }\r\n\r\n    const encabezado = [\"ID Liquidación\", \"Empleado\", \"Fecha\", \"Monto\"].map((e, i) =>\r\n        <EncabezadoTabla key={i}>{e}</EncabezadoTabla>)\r\n\r\n    return (\r\n        <>\r\n            <h1>Gestión de liquidaciones</h1>\r\n\r\n            <div className=\"panel-form-simple\">\r\n                <LiquidacionForm\r\n                    empleado={empleado}\r\n                    listaEmpleados={listaEmpleados}\r\n                    actualizarCampos={actualizarEmpleado}\r\n                    actualizarCamposSueldo={actualizarCamposSueldo}\r\n                    actualizarSueldoEmpleado={actualizarSueldoEmpleado}\r\n                    liquidarEmpleado={liquidarEmpleado}\r\n                    liquidarTodos={liquidarTodos}\r\n                    sueldoEmpleado={sueldo}\r\n                />\r\n            </div>\r\n            <Tabla encabezado={encabezado} filas={filasLiquidacion()}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Liquidacion","import {Link} from \"react-router-dom\";\r\nimport {RUTAS} from \"../App\";\r\n\r\nconst NavBar = ({logout}) => {\r\n\r\n    return (\r\n        <nav>\r\n            <ul className=\"nav-links\">\r\n                <Link className=\"nav-links\" to={RUTAS.clientes}>\r\n                    <li>Clientes</li>\r\n                </Link>\r\n                <Link className=\"nav-links\" to={RUTAS.obras}>\r\n                    <li>Obras</li>\r\n                </Link>\r\n                {/*<Link className=\"nav-links\" to={RUTAS.pagos}>*/}\r\n                {/*    <li>Pagos</li>*/}\r\n                {/*</Link>*/}\r\n                <Link className=\"nav-links\" to={RUTAS.pedidos}>\r\n                    <li>Pedidos</li>\r\n                </Link>\r\n                <Link className=\"nav-links\" to={RUTAS.productos}>\r\n                    <li>Productos</li>\r\n                </Link>\r\n                <Link className=\"nav-links\" to={RUTAS.liquidacion}>\r\n                    <li>Liquidación</li>\r\n                </Link>\r\n                <Link className=\"nav-links\" to={RUTAS.login} onClick={() => logout()}>\r\n                    <li>Cerrar Sesión</li>\r\n                </Link>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport {useEffect, useState} from \"react\";\r\nimport Clientes from \"./components/clientes/Clientes\";\r\nimport Login from \"./components/login/Login\";\r\nimport Obras from \"./components/obras/Obras\"\r\nimport Productos from \"./components/productos/Productos\";\r\nimport Pedidos from './components/pedidos/Pedidos';\r\nimport Pagos from './components/pagos/Pagos';\r\nimport Liquidacion from './components/liquidacion/Liquidacion'\r\nimport NavBar from './components/NavBar';\r\nimport {toast, ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const RUTAS = {\r\n    login: \"/\",\r\n    clientes: \"/page/clientes\",\r\n    obras: \"/page/obras\",\r\n    productos: \"/page/productos\",\r\n    pedidos: \"/page/pedidos\",\r\n    pagos: \"/page/pagos\",\r\n    liquidacion: \"/page/liquidacion\",\r\n    logout: \"/logout\"\r\n}\r\n\r\nfunction App() {\r\n    const [logged, setLogged] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setLogged(localStorage.getItem(\"token\") !== null && localStorage.getItem(\"token\") !== undefined)\r\n    }, []);\r\n\r\n    const logout = () => {\r\n        toast.success('Sesión cerrada')\r\n        setLogged(false)\r\n        localStorage.removeItem('token')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer\r\n                position=\"bottom-right\"\r\n                autoClose={2500}\r\n                hideProgressBar\r\n                newestOnTop\r\n                closeOnClick={false}\r\n                rtl={false}\r\n                pauseOnFocusLoss={false}\r\n                draggable\r\n                pauseOnHover={false}\r\n            />\r\n            <div className=\"App\">\r\n                <Router>\r\n                    {logged ? <NavBar logout={logout}/> : <></>}\r\n                    <Switch>\r\n                        <Route exact path={RUTAS.login}>\r\n                            <Login logged={logged} setLogged={setLogged}/>\r\n                        </Route>\r\n                        <Route path={RUTAS.clientes} component={Clientes}/>\r\n                        <Route path={RUTAS.obras} component={Obras}/>\r\n                        <Route path={RUTAS.productos} component={Productos}/>\r\n                        <Route path={RUTAS.pedidos} component={Pedidos}/>\r\n                        {/*<Route path={RUTAS.pagos} component={Pagos}/>*/}\r\n                        <Route path={RUTAS.liquidacion} component={Liquidacion}/>\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst Root = () => (\r\n    <App/>\r\n)\r\n\r\nrender(<Root/>, document.getElementById('root'))\r\n"],"sourceRoot":""}