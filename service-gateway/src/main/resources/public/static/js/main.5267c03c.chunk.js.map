{"version":3,"sources":["components/FormComponents.jsx","components/clientes/ClientesForm.jsx","components/Tabla.jsx","RestServices.js","components/clientes/Clientes.jsx","components/login/Login.jsx","components/obras/ObrasForm.jsx","components/obras/ClienteObrasForm.jsx","components/obras/Obras.jsx","components/productos/ProductosForm.jsx","components/productos/Productos.jsx","components/pedidos/PedidosForm.jsx","components/pedidos/DetallePedidoForm.jsx","components/pedidos/Pedidos.jsx","components/pagos/Pagos.jsx","components/liquidacion/LiquidacionForm.jsx","components/liquidacion/Liquidacion.jsx","components/NavBar.jsx","App.js","index.js"],"names":["ComboForm","opciones","value","onChange","label","name","options","map","o","index","className","Label","Button","action","onClick","CampoForm","pattern","readOnly","ClientesForm","cliente","actualizarCliente","saveOrUpdate","clean","handleChange","evt","nombreAtributo","target","valorAtributo","type","checked","validity","valid","razonSocial","cuit","mail","maxCuentaCorriente","habilitadoOnline","Tabla","encabezado","filas","EncabezadoTabla","children","FilaTabla","CeldaTabla","dato","CeldaBotonTabla","titulo","RAIZ_URL","PORT_USUARIO","PORT_PRODUCTO","PORT_PEDIDO","PORT_LIQUIDACION","API_PRODUCTO","API_PEDIDO","API_OBRA","API_DETALLE_PEDIDO","API_LIQUIDACION","API_CLIENTE","API_EMPLEADO","headers","login","a","username","password","URL","axios","post","response","dataResponse","data","status","localStorage","removeItem","message","console","log","method","getObras","GET","postObra","obra","POST","putObra","PUT","id","getPedidos","postPedido","pedido","putPedido","postDetalle","detallePedido","putDetalle","deleteDetalle","DELETE","getProductos","postProducto","producto","putProducto","getLiquidaciones","postLiquidacionTodos","postLiquidacionEmpleado","empleado","postSueldo","sueldo","getSueldo","getClientes","postCliente","putCliente","getEmpleados","getNewHeader","token","getItem","Authorization","port","postfixUrl","request","error","put","Error","get","headersCopy","window","accessToken","delete","clienteInicial","Clientes","useState","setCliente","listaClientes","setListaClientes","history","useHistory","useEffect","then","push","RUTAS","fetchClientes","e","i","atributo","valor","clienteNuevo","accion","Login","logged","setLogged","setUsername","setPassword","alert","useAlert","ingresar","setItem","success","placeholder","onKeyPress","event","key","form","Array","prototype","indexOf","call","elements","focus","preventDefault","handleEnter","ObrasForm","actualizarCampos","descripcion","latitud","longitud","direccion","superficie","tipoObra","ClienteObrasForm","c","obraInicial","Obras","setObra","listaObras","setListaObras","fetchObras","nuevaObra","algoObra","findIndex","ProductosForm","unidades","nombre","precio","stockActual","stockMinimo","unidad","u","unidadInicial","productoInicial","Productos","setProducto","listaProductos","setListaProductos","listaUnidades","setListaUnidades","fetchProductos","nuevoProducto","PedidosForm","verDetalle","obras","fechaPedido","estado","DetallePedidoForm","cantidad","p","pedidoInicial","detalle","detallePedidoInicial","Pedidos","setPedido","listaPedidos","setListaPedidos","setDetalle","listaDetalle","setListaDetalle","fetchPedidos","cleanPedido","seleccionarPedido","filasDetalle","encabezadoDetalle","nuevoPedido","nuevoDetalle","filasPedidos","Pagos","LiquidacionForm","listaEmpleados","liquidarTodos","liquidarEmpleado","actualizarCamposSueldo","actualizarSueldoEmpleado","sueldoEmpleado","handleChangeSueldo","monto","comision","empleadoInicial","sueldoInicial","Liquidacion","listaLiquidacion","setListaLiquidacion","setListaEmpleados","setEmpleado","setSueldo","fetchLiquidacion","fetchSueldo","nuevoSueldo","fecha","NavBar","logout","to","clientes","pagos","pedidos","productos","liquidacion","App","undefined","info","exact","path","component","position","positions","BOTTOM_RIGHT","timeout","offset","transition","transitions","SCALE","Root","template","AlertTemplate","render","document","getElementById"],"mappings":"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","file":"static/js/main.5267c03c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const CampoForm = ({value, onChange, label, name, pattern, readOnly}) => {\r\n    return (\r\n        <div className=\"form-row\">\r\n            <Label value={label}/>\r\n            <div className=\"form-input\">\r\n                <input name={name}\r\n                       pattern={pattern}\r\n                       value={value}\r\n                       onChange={onChange}\r\n                       readOnly={readOnly}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const ComboForm = ({opciones, value, onChange, label, name}) => {\r\n\r\n    const options = opciones ?\r\n        opciones.map((o, index) => <option key={index} value={o}>{o}</option>)\r\n        : <></>\r\n\r\n    return <div className=\"form-row\">\r\n        <Label value={label}/>\r\n        <div className=\"form-input\">\r\n            <select\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}>\r\n                {options}\r\n            </select>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const Label = ({value}) => <div className=\"form-label\">\r\n    <label>{value}</label>\r\n</div>\r\n\r\nexport const Button = ({action, label}) =>\r\n    <div className=\"form-button\">\r\n        <button onClick={action}>{label}</button>\r\n    </div>\r\n\r\n\r\nexport default CampoForm;","import \"../styles/Form.css\";\r\nimport {Button, Label} from \"../FormComponents\";\r\n\r\nconst ClientesForm = ({cliente, actualizarCliente, saveOrUpdate, clean}) => {\r\n\r\n    const handleChange = evt => {\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.type === 'checkbox' ?\r\n            evt.target.checked : evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCliente(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <div className=\"panel-form-simple\">\r\n            <form className=\"form-box\">\r\n                <div className=\"form-row\">\r\n                    <Label value=\"Razón Social:\"/>\r\n                    <div className=\"form-input\">\r\n                        <input\r\n                            name=\"razonSocial\"\r\n                            value={cliente.razonSocial}\r\n                            onChange={handleChange}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <Label value=\"Cuit:\"/>\r\n                    <div className=\"form-input\">\r\n                        <input\r\n                            type=\"text\"\r\n                            pattern=\"[0-9]*\"\r\n                            name=\"cuit\"\r\n                            value={cliente.cuit}\r\n                            onChange={handleChange}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <Label value=\"Email:\"/>\r\n                    <div className=\"form-input\">\r\n                        <input\r\n                            name=\"mail\"\r\n                            value={cliente.mail}\r\n                            onChange={handleChange}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-row\">\r\n                    <Label value=\"Máximo descubierto:\"/>\r\n                    <div className=\"form-input\">\r\n                        <input\r\n                            type=\"text\"\r\n                            pattern=\"[0-9.]*\"\r\n                            name=\"maxCuentaCorriente\"\r\n                            value={cliente.maxCuentaCorriente}\r\n                            onChange={handleChange}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <Label value=\"Habilitado online:\"/>\r\n                    <div className=\"form-input\" >\r\n                        <input\r\n                            name=\"habilitadoOnline\"\r\n                            type=\"checkbox\"\r\n                            checked={cliente.habilitadoOnline}\r\n                            onChange={handleChange}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-buttons\">\r\n                    <Button label=\"Guardar / actualizar\" action={() => saveOrUpdate()}/>\r\n                    <Button label=\"Cancelar\" action={clean}/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ClientesForm;","import React from 'react';\r\n\r\nexport const Tabla = ({encabezado, filas}) => {\r\n\r\n    return (\r\n        <div className=\"table-box\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        {encabezado}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                     {filas}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const EncabezadoTabla = ({children}) => {\r\n    return (\r\n        <th className>\r\n            {children}\r\n        </th>\r\n    )\r\n}\r\nexport const FilaTabla = ({children}) => {\r\n    return (\r\n        <tr>\r\n            {children}\r\n        </tr>\r\n    )\r\n}\r\nexport const CeldaTabla = ({dato}) => {\r\n    return (\r\n        <td>\r\n            {dato}\r\n        </td>\r\n    )\r\n}\r\nexport const CeldaBotonTabla = ({titulo, action}) => {\r\n    return (\r\n        <td>\r\n            <button className=\"table-button\" onClick={action}>{titulo}</button>\r\n        </td>\r\n    )\r\n}\r\n\r\nexport default Tabla;","import axios from 'axios';\r\n\r\nconst RAIZ_URL = `http://localhost`;\r\n\r\nconst PORT_GATEWAY = '8181'\r\nconst PORT_USUARIO = '9000'\r\nconst PORT_PRODUCTO = '9001'\r\nconst PORT_PEDIDO = '9002'\r\nconst PORT_CUENTA_CORRIENTE = '9003'\r\nconst PORT_LIQUIDACION = '9004'\r\n\r\nconst API_PRODUCTO = 'producto'\r\nconst API_PEDIDO = 'pedido'\r\nconst API_OBRA = 'obra'\r\nconst API_DETALLE_PEDIDO = 'detallepedido'\r\nconst API_LIQUIDACION = 'liquidacion'\r\nconst API_CLIENTE = 'cliente'\r\nconst API_EMPLEADO = 'empleado'\r\n\r\nconst headers = {\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-Control-Allow-Methods': \"GET, POST, PATCH, PUT, DELETE, OPTIONS\",\r\n    'Access-Control-Allow-Headers': \"Origin, X-Requested-With, Content-Type, Accept\"\r\n}\r\n\r\n// --- USER METHODS ---\r\nexport const login = async ({username, password}) => {\r\n    const URL = `${RAIZ_URL}:8181/login`;\r\n    try {\r\n        const response = await axios.post(URL, {username, password}, {headers})\r\n        const {data: dataResponse, status} = response\r\n        if (typeof dataResponse === 'string' || status !== 200) {\r\n            if (status === 404){\r\n                localStorage.removeItem(\"token\")\r\n            }\r\n        } else {\r\n            return dataResponse\r\n        }\r\n    } catch (error) {\r\n        const message = `${error.response ? error.message : error}`;\r\n        console.log(\"Error en el login: \", {method: 'login', URL, message})\r\n    }\r\n}\r\nexport const register = async (user) => POST(`${API_OBRA}`, user);\r\n\r\n// --- OBRA METHODS ---\r\nexport const getObras = async () => GET(PORT_USUARIO, `${API_OBRA}`);\r\nexport const postObra = async (obra) => POST(PORT_USUARIO,`${API_OBRA}`, obra);\r\nexport const putObra = async (obra) => PUT(PORT_USUARIO,`${API_OBRA}/${obra.id}`, obra);\r\n\r\n// --- PEDIDO METHODS ---\r\nexport const getPedidos = async () => GET(PORT_PEDIDO,`${API_PEDIDO}`);\r\nexport const postPedido = async (pedido) => POST(PORT_PEDIDO,`${API_PEDIDO}`, pedido);\r\nexport const putPedido = async (pedido) => PUT(PORT_PEDIDO,`${API_PEDIDO}/${pedido.id}`, pedido);\r\n\r\n// --- DETALLE PEDIDO METHODS ---\r\nexport const postDetalle = async (detallePedido, pedido) => POST(PORT_PEDIDO,`${API_DETALLE_PEDIDO}/?idPedido=${pedido.id}`, detallePedido);\r\nexport const putDetalle = async (detallePedido) => PUT(PORT_PEDIDO,`${API_DETALLE_PEDIDO}`, detallePedido);\r\nexport const deleteDetalle = async (detallePedido) => DELETE(PORT_PEDIDO,`${API_DETALLE_PEDIDO}/id?idDetalle=${detallePedido.id}`);\r\n\r\n// --- PRODUCTO METHODS ---\r\nexport const getProductos = async () => GET(PORT_PRODUCTO,`${API_PRODUCTO}`);\r\nexport const getUnidades = () => GET(PORT_PRODUCTO,`${API_PRODUCTO}/unidades`);\r\nexport const postProducto = async (producto) => POST(PORT_PRODUCTO,`${API_PRODUCTO}`, producto);\r\nexport const putProducto = async (producto) => PUT(PORT_PRODUCTO,`${API_PRODUCTO}`, producto);\r\n\r\n// --- LIQUIDACION METHODS ---\r\nexport const getLiquidaciones = async () => GET(PORT_LIQUIDACION,`${API_LIQUIDACION}`);\r\nexport const postLiquidacionTodos = async () => POST(PORT_LIQUIDACION,`${API_LIQUIDACION}/todos`);\r\nexport const postLiquidacionEmpleado = async (empleado) => POST(PORT_LIQUIDACION,`${API_LIQUIDACION}/empleado?idEmpleado=${empleado.id}`);\r\nexport const postSueldo = async (sueldo) => POST(PORT_LIQUIDACION,`${API_LIQUIDACION}/sueldo`, sueldo);\r\nexport const getSueldo = async (empleado) => GET(PORT_LIQUIDACION,`${API_LIQUIDACION}/empleado/sueldo?idEmpleado=${empleado.id}`);\r\n\r\n// --- CLIENTE METHODS ---\r\nexport const getClientes = async () => GET(PORT_USUARIO,`${API_CLIENTE}`);\r\nexport const postCliente = async (cliente) => POST(PORT_USUARIO,`${API_CLIENTE}`, cliente);\r\nexport const putCliente = async (cliente) => PUT(PORT_USUARIO,`${API_CLIENTE}`, cliente);\r\n\r\n// --- EMPLEADO METHODS ---\r\nexport const getEmpleados = async () => GET(PORT_USUARIO,`${API_EMPLEADO}`);\r\nexport const postEmpleado = async (empleado) => POST(PORT_USUARIO,`${API_EMPLEADO}`, empleado);\r\nexport const putEmpleado = async (empleado) => PUT(PORT_USUARIO,`${API_EMPLEADO}`, empleado);\r\n\r\nconst getNewHeader = () => {\r\n    const token = localStorage.getItem('token');\r\n    return {...headers, Authorization:`Bearer ${token}`}\r\n}\r\n\r\n// --- GENERAL METHODS ---\r\nexport const POST = async (port, postfixUrl, data) => {\r\n    const URL = `${RAIZ_URL}:${port}/api/${postfixUrl}`;\r\n    console.log({request: URL, data})\r\n    try {\r\n        const response = await axios.post(URL, data, {headers: getNewHeader()})\r\n        const {data: dataResponse, status} = response\r\n        if (typeof dataResponse === 'string' || status !== 200) {\r\n            if (status === 401){\r\n                localStorage.removeItem(\"token\")\r\n                localStorage.removeItem(\"username\")\r\n            }\r\n\r\n        } else {\r\n            console.log({response: URL, dataResponse})\r\n            return dataResponse\r\n        }\r\n    } catch (error) {\r\n        const message = `${error.response ? error.message : error}`;\r\n        console.log(\"Error en método: \", {method: 'POST', URL, message, error: error.response})\r\n    }\r\n}\r\n\r\nexport const PUT = async (port, postfixUrl, data) => {\r\n    const URL = `${RAIZ_URL}:${port}/api/${postfixUrl}`;\r\n\r\n    console.log({request: URL, data})\r\n\r\n    try {\r\n        const response = await axios.put(URL, data, {headers: getNewHeader()})\r\n        const {data: dataResponse, status} = response\r\n        if (typeof dataResponse === 'string' || status !== 200) {\r\n            if (status === 401){\r\n                localStorage.removeItem(\"token\")\r\n                localStorage.removeItem(\"username\")\r\n            }\r\n            throw new Error(dataResponse)\r\n        } else {\r\n            console.log({response: URL, dataResponse})\r\n            return dataResponse\r\n        }\r\n    } catch (error) {\r\n        const message = `${error.response ? error.message : error}`;\r\n        console.log(\"Error en método: \", {method: 'PUT', URL, message, error: error.response})\r\n    }\r\n}\r\n\r\nexport const GET = async (port, postfixUrl) => {\r\n    const URL = `${RAIZ_URL}:${port}/api/${postfixUrl}`;\r\n    console.log({request: URL})\r\n\r\n    try {\r\n        const response = await axios.get(URL, {headers: getNewHeader()})\r\n\r\n        const {data: dataResponse, status} = response\r\n\r\n        if (typeof dataResponse === 'string' || status !== 200) {\r\n            if (status === 401){\r\n                localStorage.removeItem(\"token\")\r\n                localStorage.removeItem(\"username\")\r\n            }\r\n            throw new Error(dataResponse)\r\n        } else {\r\n            console.log(\"Error en método: \", {response: URL, dataResponse})\r\n            return dataResponse\r\n        }\r\n    } catch (error) {\r\n        const message = `${error.response ? error.message : error}`;\r\n        console.error({method: 'GET', URL, message, error: error.response})\r\n    }\r\n}\r\n\r\nexport const DELETE = async (port, postfixUrl) => {\r\n    const URL = `${RAIZ_URL}:${port}/api/${postfixUrl}`;\r\n    console.log({request: URL})\r\n\r\n    try {\r\n        let headersCopy = [...headers, {Authorization: `Bearer ${window.accessToken}`}]\r\n        const response = await axios.delete(URL, {headers: headersCopy})\r\n\r\n        const {data: dataResponse, status} = response\r\n\r\n        if (typeof dataResponse === 'string' || status !== 200) {\r\n            if (status === 401){\r\n                localStorage.removeItem(\"token\")\r\n                localStorage.removeItem(\"username\")\r\n            }\r\n            throw new Error(dataResponse)\r\n        } else {\r\n            console.log(\"Error en método: \", {response: URL, dataResponse})\r\n            return dataResponse\r\n        }\r\n    } catch (error) {\r\n        const message = `${error.response ? error.message : error}`;\r\n        console.error({method: 'DELETE', URL, message, error: error.response})\r\n    }\r\n}","import ClientesForm from './ClientesForm';\r\nimport {CeldaBotonTabla, CeldaTabla, EncabezadoTabla, FilaTabla, Tabla} from '../Tabla';\r\nimport {useEffect, useState} from 'react';\r\nimport '../styles/Tabla.css';\r\nimport {getClientes, postCliente, putCliente} from '../../RestServices';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\n\r\nconst clienteInicial = {\r\n    razonSocial: '',\r\n    habilitadoOnline: true,\r\n    maxCuentaCorriente: 0.0,\r\n    mail: '',\r\n    cuit: ''\r\n};\r\n\r\nconst Clientes = () => {\r\n    const [cliente, setCliente] = useState(clienteInicial);\r\n    const [listaClientes, setListaClientes] = useState([]);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"token\")) {\r\n            getClientes().then(data => {\r\n                if (data) {\r\n                    setListaClientes(data)\r\n                }\r\n            });\r\n        } else {\r\n            history.push(RUTAS.login[2])\r\n        }\r\n    }, [history]);\r\n\r\n    const fetchClientes = () => {\r\n        getClientes().then(data => {\r\n            if (data) {\r\n                setListaClientes(data)\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    const actualizarCliente = (atributo, valor) => {\r\n        const clienteNuevo = {...cliente, [atributo]: valor};\r\n        setCliente(clienteNuevo);\r\n    }\r\n\r\n    const saveOrUpdate = () => {\r\n        (!(cliente.id)) ? postCliente(cliente).then(() => fetchClientes()) :\r\n            putCliente(cliente).then(() => fetchClientes());\r\n        setCliente(clienteInicial);\r\n    };\r\n\r\n    const filasCliente = () => {\r\n        if (listaClientes)\r\n            return listaClientes.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={e.razonSocial}/>\r\n                    <CeldaTabla dato={e.mail}/>\r\n                    <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => setCliente(e)}/>\r\n                </FilaTabla>\r\n            });\r\n        else\r\n            return <></>\r\n    }\r\n\r\n    const encabezado = [\"ID Usuario\", \"Razón social\", \"Email\", \"\"].map((e, i) => <EncabezadoTabla key={i}>{e}</EncabezadoTabla>)\r\n\r\n    const limpiarCampos = () => {\r\n        setCliente(clienteInicial);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div><h1>Gestión de clientes</h1></div>\r\n            <ClientesForm cliente={cliente}\r\n                          actualizarCliente={actualizarCliente}\r\n                          saveOrUpdate={saveOrUpdate}\r\n                          clean={limpiarCampos}/>\r\n            <Tabla encabezado={encabezado} filas={filasCliente()}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Clientes;","import \"../styles/Form.css\";\r\nimport {Label} from \"../FormComponents\";\r\nimport {useState} from \"react\";\r\nimport {login} from \"../../RestServices\";\r\nimport {useAlert} from \"react-alert\";\r\n\r\nconst Login = ({logged, setLogged}) => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const alert = useAlert()\r\n\r\n    const ingresar = () => {\r\n        if (!logged) {\r\n            login({username, password}).then((data) => {\r\n                if (data && data.accessToken) {\r\n                    setLogged(true)\r\n                    localStorage.setItem('token', data.accessToken);\r\n                    localStorage.setItem('username', username);\r\n                    alert.success('Se ha logueado correctamente!')\r\n                } else {\r\n                    alert.error('Revise usuario y/o contraseña')\r\n                    setLogged(false)\r\n                    localStorage.removeItem('token');\r\n                    localStorage.removeItem('username');\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function handleEnter(event) {\r\n        if (event.key === 'Enter') {\r\n            const form = event.target.form;\r\n            const index = Array.prototype.indexOf.call(form, event.target);\r\n            form.elements[index + 1].focus();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    if (logged) {\r\n        return <h1>Bienvenido {localStorage.getItem(\"username\")}!</h1>\r\n    } else {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1 className=\"form-step\"> Login </h1>\r\n                <form id='formLogin'>\r\n                    <div className=\"col-75\">\r\n                        <Label value=\"Nombre de usuario\"/>\r\n                        <div className=\"col-75\">\r\n                            <input\r\n                                name=\"nombre\"\r\n                                type=\"text\"\r\n                                placeholder=\"Username (dan2021)\"\r\n                                value={username}\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                                onKeyPress={e => handleEnter(e)}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-75\">\r\n                        <Label value=\"Contraseña\"/>\r\n                        <div className=\"col-75\">\r\n                            <input\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                placeholder=\"Password (dan2021)\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                onKeyPress={event => {\r\n                                    if (event.key === 'Enter') {\r\n                                        ingresar()\r\n                                    }\r\n                                }}/>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div className=\"col-75 button-login\">\r\n                    <div>\r\n                        <button className=\"btn-wide\" onClick={ingresar}>Ingresar</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import {Label} from \"../FormComponents\";\r\n\r\nconst ObrasForm = ({obra, actualizarCampos, saveOrUpdate, clean}) => {\r\n\r\n    const handleChange = (evt) => {\r\n        evt.preventDefault();\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-box\">\r\n            <h3>Obra</h3>\r\n            <div className=\"form-row\">\r\n                <Label value=\"Descripción:\"/>\r\n                <div className=\"form-input\">\r\n                    <input name=\"descripcion\"\r\n                           value={obra.descripcion}\r\n                           onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-row\">\r\n                <Label value=\"Latitud:\"/>\r\n                <div className=\"form-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        pattern=\"[0-9]*\"\r\n                        name=\"latitud\"\r\n                        value={obra.latitud}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-row\">\r\n                <Label value=\"Longitud:\"/>\r\n                <div className=\"form-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        pattern=\"[0-9]*\"\r\n                        name=\"longitud\"\r\n                        value={obra.longitud}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n                <Label value=\"Dirección:\"/>\r\n                <div className=\"form-input\">\r\n                    <input\r\n                        name=\"direccion\"\r\n                        value={obra.direccion}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n                <Label value=\"Superficie:\"/>\r\n                <div className=\"form-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        pattern=\"[0-9]*\"\r\n                        name=\"superficie\"\r\n                        value={obra.superficie}\r\n                        onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n                <Label value=\"Tipo de obra:\"/>\r\n                <div className=\"form-input\">\r\n                    <select name=\"tipoObra\" value={obra.tipoObra} onChange={handleChange}>\r\n                        <option value=\"REFORMA\">Reforma</option>\r\n                        <option value=\"CASA\">Casa</option>\r\n                        <option value=\"EDIFICIO\">Edificio</option>\r\n                        <option value=\"VIAL\">Vial</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-buttons\">\r\n                <div className=\"form-button\">\r\n                    <button type=\"button\" onClick={clean}>Limpiar</button>\r\n                </div>\r\n                <div className=\"form-button\">\r\n                    <button type=\"button\" onClick={saveOrUpdate}>Guardar</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ObrasForm;","import {ComboForm} from \"../FormComponents\";\r\n\r\nconst ClienteObrasForm = ({cliente, actualizarCampos, listaClientes}) => {\r\n\r\n    const handleChange = (evt) => {\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-box\">\r\n            <h3>Cliente</h3>\r\n\r\n            <ComboForm\r\n                label='Razon Social'\r\n                placeholder='Razon Social'\r\n                name='razonSocial'\r\n                value={cliente.razonSocial}\r\n                onChange={handleChange}\r\n                opciones={listaClientes.map(c => {\r\n                    return c.razonSocial\r\n                })}/>\r\n\r\n            <ComboForm\r\n                label='CUIT'\r\n                placeholder='CUIT'\r\n                name='cuit'\r\n                value={cliente.cuit}\r\n                onChange={handleChange}\r\n                opciones={listaClientes.map(c => {\r\n                    return c.cuit\r\n                })}/>\r\n\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ClienteObrasForm;","import {CeldaBotonTabla, CeldaTabla, EncabezadoTabla, FilaTabla, Tabla} from '../Tabla';\r\nimport ObrasForm from \"./ObrasForm\";\r\nimport ClienteObrasForm from \"./ClienteObrasForm\";\r\nimport \"../styles/Form.css\";\r\nimport \"../styles/Tabla.css\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {getClientes, getObras, postObra, putObra} from '../../RestServices';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\nimport {useAlert} from \"react-alert\";\r\n\r\nconst clienteInicial = {\r\n    id: null,\r\n    razonSocial: \"\",\r\n    cuit: \"\"\r\n}\r\n\r\nconst obraInicial = {\r\n    id: null,\r\n    descripcion: \"\",\r\n    latitud: 0,\r\n    longitud: 0,\r\n    direccion: \"\",\r\n    superficie: 0,\r\n    tipoObra: \"\",\r\n    cliente: clienteInicial\r\n}\r\n\r\nconst Obras = () => {\r\n    const history = useHistory();\r\n    const alert = useAlert();\r\n    const [obra, setObra] = useState(obraInicial);\r\n    const [cliente, setCliente] = useState(clienteInicial);\r\n    const [listaClientes, setListaClientes] = useState([]);\r\n    const [listaObras, setListaObras] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"token\")) {\r\n            fetchClientes();\r\n            fetchObras();\r\n        } else\r\n            history.push(RUTAS.login)\r\n    }, [history]);\r\n\r\n    const fetchClientes = () => {\r\n        getClientes().then(data => {\r\n            if (data)\r\n                setListaClientes(data)\r\n        });\r\n    }\r\n\r\n    const fetchObras = () => {\r\n        getObras().then(data => {\r\n            if (data)\r\n                setListaObras(data)\r\n        });\r\n    }\r\n\r\n    const actualizarObra = (nombreAtributo, valorAtributo) => {\r\n        const nuevaObra = {...obra, [nombreAtributo]: valorAtributo};\r\n        setObra(nuevaObra);\r\n    }\r\n\r\n    const actualizarCliente = (nombreAtributo, valorAtributo) => {\r\n        const index = listaClientes.findIndex(c => c.[nombreAtributo] === valorAtributo);\r\n        setCliente(listaClientes[index])\r\n        const nuevaObra = {...obra, cliente: listaClientes[index]};\r\n        setObra(nuevaObra);\r\n    }\r\n\r\n    const validateObra = () => {\r\n        return !!(obra.descripcion && obra.latitud && obra.longitud && obra.superficie && obra.tipoObra);\r\n    }\r\n\r\n    const saveOrUpdate = () => {\r\n        if (validateObra()) {\r\n            obra.cliente = cliente\r\n\r\n            const algoObra = () => {\r\n                fetchObras()\r\n            }\r\n            !(obra.id) ? postObra(obra).then(algoObra) : putObra(obra).then(algoObra);\r\n            setObra(obraInicial);\r\n            setCliente(clienteInicial);\r\n        } else {\r\n            alert.error(\"Faltan indicar ciertos datos de la obra\");\r\n        }\r\n\r\n    };\r\n\r\n    const cleanObra = () => {\r\n        setObra(obraInicial);\r\n        setCliente(clienteInicial);\r\n    }\r\n\r\n    const filasObras = () => {\r\n        if (listaObras) {\r\n            return listaObras.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={e.descripcion}/>\r\n                    <CeldaTabla dato={e.direccion}/>\r\n                    <CeldaTabla dato={e.superficie}/>\r\n                    <CeldaTabla dato={e.tipoObra}/>\r\n                    <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => {\r\n                        setObra(e);\r\n                        setCliente(e.cliente);\r\n                    }}/>\r\n                </FilaTabla>\r\n            });\r\n        } else {\r\n            return <></>\r\n        }\r\n    }\r\n\r\n    const encabezado = [\"ID Obra\", \"Descripcion\", \"Direccion\", \"Superficie\", \"Tipo de Obra\", \"\"]\r\n        .map((e, i) => {\r\n            return <EncabezadoTabla key={i}>{e}</EncabezadoTabla>\r\n        })\r\n\r\n    return (\r\n        <>\r\n            <h1>Gestion de Obras</h1>\r\n            <div className=\"panel-form-doble\">\r\n                <ObrasForm\r\n                    obra={obra}\r\n                    actualizarCampos={actualizarObra}\r\n                    clean={cleanObra}\r\n                    saveOrUpdate={saveOrUpdate}/>\r\n                <ClienteObrasForm\r\n                    cliente={cliente}\r\n                    actualizarCampos={actualizarCliente}\r\n                    listaClientes={listaClientes}/>\r\n            </div>\r\n            <div className=\"panel\">\r\n                <Tabla encabezado={encabezado} filas={filasObras()}/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Obras;","import '../FormComponents';\r\nimport CampoForm, { ComboForm } from '../FormComponents';\r\n\r\nconst ProductosForm = ({ producto, unidades, actualizarCampos, clean, saveOrUpdate }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        evt.preventDefault();\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-box\">\r\n            <h3>Producto</h3>\r\n\r\n            <CampoForm label='Nombre:'\r\n                name='nombre'\r\n                value={producto.nombre}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm label='Descripción:'\r\n                name='descripcion'\r\n                value={producto.descripcion}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm label='Precio:'\r\n                name='precio'\r\n                pattern=\"[0-9.]*\"\r\n                value={producto.precio}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm label='Stock actual:'\r\n                name='stockActual'\r\n                pattern=\"[0-9.]*\"\r\n                value={producto.stockActual}\r\n                onChange={handleChange} />\r\n\r\n            <CampoForm label='Stock mínimo:'\r\n                name='stockMinimo'\r\n                pattern=\"[0-9.]*\"\r\n                value={producto.stockMinimo}\r\n                onChange={handleChange} />\r\n\r\n            <ComboForm\r\n                label=\"Unidad:\"\r\n                name=\"unidad\"\r\n                value={producto.unidad.descripcion}\r\n                opciones={unidades ? unidades.map(u => { return u.descripcion }) : []}\r\n                onChange={handleChange} />\r\n\r\n            <div className=\"form-buttons\">\r\n                <div className=\"form-button\">\r\n                    <button type=\"button\" onClick={clean}>Limpiar</button>\r\n                </div>\r\n                <div className=\"form-button\">\r\n                    <button type=\"button\" onClick={saveOrUpdate}>Guardar</button>\r\n                </div>\r\n            </div>\r\n        </form >\r\n    );\r\n}\r\n\r\nexport default ProductosForm;","import {CeldaBotonTabla, CeldaTabla, EncabezadoTabla, FilaTabla, Tabla} from '../Tabla';\r\nimport ProductosForm from './ProductosForm';\r\nimport '../styles/Form.css';\r\nimport {useEffect, useState} from 'react';\r\nimport {getProductos, getUnidades, postProducto, putProducto} from '../../RestServices';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\n\r\nconst unidadInicial = {\r\n    descripcion: ''\r\n}\r\n\r\nconst productoInicial = {\r\n    nombre: '',\r\n    descripcion: '',\r\n    precio: 0,\r\n    stockActual: 0,\r\n    stockMinimo: 0,\r\n    unidad: unidadInicial\r\n}\r\n\r\nconst Productos = () => {\r\n    const history = useHistory();\r\n    const [producto, setProducto] = useState(productoInicial);\r\n    const [listaProductos, setListaProductos] = useState([]);\r\n    const [listaUnidades, setListaUnidades] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"token\")) {\r\n            fetchProductos();\r\n        } else\r\n            history.push(RUTAS.login)\r\n    }, [history]);\r\n\r\n    const fetchProductos = () => {\r\n        getProductos().then(data => {\r\n            if (data)\r\n                setListaProductos(data)\r\n        });\r\n        getUnidades().then(data => {\r\n            if (data)\r\n                setListaUnidades(data)\r\n        });\r\n    }\r\n\r\n    const actualizarProducto = (nombreAtributo, valorAtributo) => {\r\n        if (nombreAtributo === 'unidad') valorAtributo = {...unidadInicial, descripcion: valorAtributo};\r\n        const nuevoProducto = {...producto, [nombreAtributo]: valorAtributo};\r\n        setProducto(nuevoProducto);\r\n    }\r\n\r\n    const saveOrUpdate = () => {\r\n        !(producto.id) ? postProducto(producto).then(() => fetchProductos()) :\r\n            putProducto(producto).then(() => fetchProductos());\r\n        setProducto(productoInicial);\r\n    };\r\n\r\n    const cleanProducto = () => {\r\n        setProducto(productoInicial);\r\n    }\r\n\r\n    const filasProductos = () => {\r\n        if (listaProductos)\r\n            return listaProductos.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={e.nombre}/>\r\n                    <CeldaTabla dato={e.descripcion}/>\r\n                    <CeldaTabla dato={e.precio}/>\r\n                    <CeldaTabla dato={e.stockActual}/>\r\n                    <CeldaTabla dato={e.stockMinimo}/>\r\n                    <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => setProducto(e)}/>\r\n                </FilaTabla>\r\n            });\r\n        else\r\n            return <></>\r\n    }\r\n\r\n    const encabezado = [\"ID Producto\", \"Nombre\", \"Descripcion\", \"Precio\", \"Stock Actual\", \"Stock Minimo\", \"\"]\r\n        .map((e, i) => {\r\n            return <EncabezadoTabla key={i}>{e}</EncabezadoTabla>\r\n        })\r\n\r\n    return (\r\n        <>\r\n            <h1>Gestión productos</h1>\r\n            <div className=\"panel-form-simple\">\r\n                <ProductosForm\r\n                    producto={producto}\r\n                    unidades={listaUnidades}\r\n                    actualizarCampos={actualizarProducto}\r\n                    clean={cleanProducto}\r\n                    saveOrUpdate={saveOrUpdate}/>\r\n            </div>\r\n\r\n            <div className=\"panel\">\r\n                <Tabla encabezado={encabezado} filas={filasProductos}/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Productos;","import CampoForm, { ComboForm } from \"../FormComponents\";\r\n\r\nconst PedidosForm = ({ pedido, actualizarCampos, clean, saveOrUpdate, verDetalle, obras }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        evt.preventDefault();\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    const estadosPedido =\r\n        ['NUEVO', 'CONFIRMADO', 'PENDIENTE', 'CANCELADO', 'ACEPTADO', 'RECHAZADO', 'EN_PREPARACION', 'ENTREGADO'];\r\n    return (\r\n        <form className=\"form-box\">\r\n            <div className=\"form-row\">\r\n                <h2>Pedido</h2>\r\n            </div>\r\n            <CampoForm\r\n                label='Fecha:'\r\n                name='fechaPedido'\r\n                value={pedido.fechaPedido}\r\n                onChange={handleChange} />\r\n            <ComboForm\r\n                label='Obra:'\r\n                name='obra'\r\n                onChange={handleChange}\r\n                opciones={obras.map(o => { return o.id })} />\r\n            <ComboForm\r\n                label='Estado:'\r\n                name='estado'\r\n                value={pedido.estado}\r\n                onChange={handleChange}\r\n                opciones={estadosPedido} />\r\n\r\n            <div className=\"form-buttons\">\r\n                <div className=\"form-button\">\r\n                    <button type=\"button\" onClick={clean}>Limpiar</button>\r\n                </div>\r\n                <div className=\"form-button\">\r\n                    <button type=\"button\" onClick={verDetalle}>Ver Detalle</button>\r\n                </div>\r\n                <div className=\"form-button\">\r\n                    <button type=\"button\" onClick={saveOrUpdate}>Guardar</button>\r\n                </div>\r\n            </div>\r\n        </form >\r\n    );\r\n}\r\n\r\nexport default PedidosForm;","import '../FormComponents'\r\nimport CampoForm, {ComboForm} from '../FormComponents';\r\n\r\nconst DetallePedidoForm = ({detallePedido, actualizarCampos, listaProductos, saveOrUpdate}) => {\r\n\r\n    const handleChange = (evt) => {\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-box\">\r\n            <div className=\"form-row\">\r\n                <h2>Detalle pedido</h2>\r\n            </div>\r\n            <CampoForm\r\n                label='Cantidad:'\r\n                pattern='[0-9.]*'\r\n                name='cantidad'\r\n                value={detallePedido.cantidad}\r\n                onChange={handleChange}/>\r\n\r\n            <CampoForm\r\n                label='Precio:'\r\n                name='precio'\r\n                readOnly={true}\r\n                value={(detallePedido.cantidad ?? 0) * (detallePedido.producto.precio ?? 1)}/>\r\n\r\n            <ComboForm\r\n                label='Producto:'\r\n                name='producto'\r\n                onChange={handleChange}\r\n                value={detallePedido.producto.nombre}\r\n                opciones={listaProductos.map(p => {\r\n                    return p.nombre\r\n                })}/>\r\n\r\n            <div className=\"form-buttons\">\r\n                <div className=\"form-button\">\r\n                    <button className=\"btn-wide\" type=\"button\" onClick={saveOrUpdate}>Guardar</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default DetallePedidoForm;","import {Tabla, FilaTabla, CeldaTabla, CeldaBotonTabla, EncabezadoTabla} from '../Tabla';\r\nimport PedidosForm from './PedidosForm';\r\nimport DetallePedidoForm from './DetallePedidoForm'\r\nimport '../styles/Form.css';\r\nimport {useEffect, useState} from \"react\";\r\nimport {\r\n    getPedidos,\r\n    postPedido,\r\n    putPedido,\r\n    postDetalle,\r\n    putDetalle,\r\n    deleteDetalle,\r\n    getProductos,\r\n    getObras\r\n} from '../../RestServices';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\n\r\nconst pedidoInicial = {\r\n    id: null,\r\n    fechaPedido: '',\r\n    obra: '',\r\n    estado: 'NUEVO',\r\n    detalle: []\r\n}\r\n\r\nconst detallePedidoInicial = {\r\n    id: null,\r\n    cantidad: '',\r\n    precio: 0,\r\n    producto: ''\r\n}\r\n\r\nconst Pedidos = () => {\r\n    const history = useHistory();\r\n\r\n    const [pedido, setPedido] = useState(pedidoInicial);\r\n    const [listaPedidos, setListaPedidos] = useState([]);\r\n\r\n    const [detallePedido, setDetalle] = useState(detallePedidoInicial);\r\n    const [listaDetalle, setListaDetalle] = useState([]);\r\n    const [listaProductos, setListaProductos] = useState([]);\r\n    const [listaObras, setListaObras] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"token\")){\r\n            fetchPedidos();\r\n            fetchProductos();\r\n            fetchObras();\r\n        }\r\n        else\r\n            history.push(RUTAS.login)\r\n\r\n    }, [listaPedidos, listaDetalle, history]);\r\n\r\n    const fetchPedidos = () => {\r\n        getPedidos().then(data => {\r\n            if (data)\r\n                setListaPedidos(data)\r\n        })\r\n    }\r\n\r\n    const fetchProductos = () => {\r\n        getProductos().then(data => {\r\n            if (data)\r\n                setListaProductos(data)\r\n        });\r\n    }\r\n\r\n    const fetchObras = () => {\r\n        getObras().then(data => {\r\n            if (data)\r\n                setListaObras(data)\r\n        });\r\n    }\r\n\r\n    const actualizarPedido = (nombreAtributo, valorAtributo) => {\r\n        if (nombreAtributo === 'obra') {\r\n            const index = listaObras.findIndex(o => o.id === valorAtributo);\r\n            const nuevoPedido = {...pedido, obra: listaObras[index]};\r\n            setPedido(nuevoPedido);\r\n        } else {\r\n            const nuevoPedido = {...pedido, [nombreAtributo]: valorAtributo};\r\n            setPedido(nuevoPedido);\r\n        }\r\n    }\r\n\r\n    const saveOrUpdatePedido = () => {\r\n        !(pedido.id) ? postPedido(pedido).then(() => fetchPedidos()) :\r\n            putPedido(pedido).then(() => fetchPedidos());\r\n        cleanPedido();\r\n    };\r\n\r\n    const cleanPedido = () => {\r\n        setPedido(pedidoInicial);\r\n        setListaDetalle([]);\r\n        setDetalle(detallePedidoInicial);\r\n    }\r\n\r\n    const actualizarDetalle = (nombreAtributo, valorAtributo) => {\r\n        if (nombreAtributo === 'producto') {\r\n            const index = listaProductos.findIndex(p => p.nombre === valorAtributo);\r\n            const nuevoDetalle = {\r\n                ...detallePedido,\r\n                producto: listaProductos[index],\r\n                precio: (detallePedido.cantidad ?? 0) * (listaProductos[index] ? listaProductos[index].precio : 1)\r\n            };\r\n            setDetalle(nuevoDetalle)\r\n        } else {\r\n            const nuevoDetalle = {...detallePedido, [nombreAtributo]: valorAtributo};\r\n            setDetalle(nuevoDetalle);\r\n        }\r\n    }\r\n\r\n    const saveOrUpdateDetalle = () => {\r\n        !(detallePedido.id) ? postDetalle(detallePedido, pedido).then(() => fetchPedidos()) :\r\n            putDetalle(detallePedido).then(() => fetchPedidos());\r\n    };\r\n\r\n    const filasPedidos = () => {\r\n        if (listaPedidos){\r\n            listaPedidos.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={e.fechaPedido}/>\r\n                    <CeldaTabla dato={e.obra.id}/>\r\n                    <CeldaTabla dato={e.estado}/>\r\n                    <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => seleccionarPedido(e)}/>\r\n                </FilaTabla>\r\n            });\r\n        }\r\n        else\r\n            return <></>\r\n    }\r\n\r\n    const encabezado = [\"ID Pedido\", \"Fecha de Pedido\", \"ID Obra\", \"Estado\"]\r\n        .map((e, i) => {\r\n            return <EncabezadoTabla key={i}>{e}</EncabezadoTabla>\r\n        })\r\n\r\n    const seleccionarPedido = (p) => {\r\n        setPedido(p);\r\n        setListaDetalle(p.detalle);\r\n        setDetalle(detallePedidoInicial);\r\n    }\r\n\r\n    const eliminarDetalle = (d) => {\r\n        deleteDetalle(d).then(() => fetchPedidos());\r\n    }\r\n\r\n    const filasDetalle = listaDetalle.map((e, i) => {\r\n        return <FilaTabla key={i}>\r\n            <CeldaTabla dato={e.id}/>\r\n            <CeldaTabla dato={e.cantidad}/>\r\n            <CeldaTabla dato={e.precio}/>\r\n            <CeldaTabla dato={e.producto.nombre}/>\r\n            <CeldaBotonTabla titulo=\"Eliminar\" accion={() => eliminarDetalle(e)}/>\r\n            <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => setDetalle(e)}/>\r\n        </FilaTabla>\r\n    });\r\n\r\n    const encabezadoDetalle = [\"ID Detalle\", \"Cantidad\", \"Precio\", \"Producto\", \"Eliminar\", \"Seleccionar\"]\r\n        .map((e, i) => {\r\n            return <EncabezadoTabla key={i}>{e}</EncabezadoTabla>\r\n        })\r\n\r\n    return (\r\n        <>\r\n            <h1>Gestión pedidos</h1>\r\n            <div className=\"panel-form-doble\">\r\n                <PedidosForm\r\n                    pedido={pedido}\r\n                    actualizarCampos={actualizarPedido}\r\n                    clean={cleanPedido}\r\n                    saveOrUpdate={saveOrUpdatePedido}\r\n                    obras={listaObras}/>\r\n                <DetallePedidoForm\r\n                    detallePedido={detallePedido}\r\n                    listaProductos={listaProductos}\r\n                    actualizarCampos={actualizarDetalle}\r\n                    saveOrUpdate={saveOrUpdateDetalle}/>\r\n            </div>\r\n            <div className=\"panel\">\r\n                <div><h3>Detalle</h3></div>\r\n                <Tabla encabezado={encabezadoDetalle} filas={filasDetalle}/>\r\n                <div><h3>Pedidos</h3></div>\r\n                <Tabla encabezado={encabezado} filas={filasPedidos()}/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Pedidos;","import {useEffect, useState} from 'react';\r\nimport {CeldaBotonTabla, CeldaTabla, EncabezadoTabla, FilaTabla, Tabla} from '../Tabla'\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\n\r\nconst Pagos = () => {\r\n    const history = useHistory();\r\n\r\n    const [listaPedidos, setListaPedidos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"token\")) {\r\n            history.push(RUTAS.login)\r\n        }\r\n    }, [history]);\r\n\r\n    const abonarPedido = () => {\r\n        console.log(\"Abonar pedido listo\")\r\n    }\r\n\r\n    const filasPedidos = () => {\r\n        if (listaPedidos) {\r\n            return listaPedidos.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={e.fechaPedido}/>\r\n                    <CeldaTabla dato={e.obra}/>\r\n                    <CeldaTabla dato={e.estado}/>\r\n                    <CeldaBotonTabla titulo=\"Abonar\" accion={() => abonarPedido(e)}/>\r\n                </FilaTabla>\r\n            });\r\n        } else return <></>\r\n    }\r\n\r\n    const encabezado = [\"ID Pedido\", \"Fecha de Pedido\", \"ID Obra\", \"Estado\", \"\"]\r\n        .map((e, i) => {\r\n            return <EncabezadoTabla key={i}>{e}</EncabezadoTabla>\r\n        })\r\n\r\n    return (\r\n        <>\r\n            <h1>Gestión de pagos</h1>\r\n            <div className=\"panel\">\r\n                <h2>Pedidos</h2>\r\n                <Tabla encabezado={encabezado} filas={filasPedidos()}/>\r\n            </div>\r\n        </>);\r\n}\r\n\r\nexport default Pagos;","import '../FormComponents'\r\nimport CampoForm, { ComboForm } from '../FormComponents'\r\n\r\nconst LiquidacionForm = ({ empleado, actualizarCampos, listaEmpleados, liquidarTodos, liquidarEmpleado, actualizarCamposSueldo, actualizarSueldoEmpleado, sueldoEmpleado }) => {\r\n\r\n    const handleChange = (evt) => {\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCampos(valorAtributo);\r\n    }\r\n    const handleChangeSueldo = (evt) => {\r\n        const nombreAtributo = evt.target.name;\r\n        const valorAtributo = evt.target.value;\r\n        if (evt.target.validity.valid) actualizarCamposSueldo(nombreAtributo, valorAtributo);\r\n    }\r\n\r\n    return (\r\n        <form className='form-box'>\r\n            <ComboForm\r\n                label=\"Empleado\"\r\n                name=\"nombre\"\r\n                value={empleado.nombre}\r\n                onChange={handleChange}\r\n                opciones={listaEmpleados.map(e => { return e.nombre })}\r\n            />\r\n            <CampoForm\r\n                label=\"Monto\"\r\n                name=\"monto\"\r\n                pattern=\"[0-9.]*\"\r\n                value={sueldoEmpleado.monto}\r\n                onChange={handleChangeSueldo} />\r\n            <CampoForm\r\n                label=\"Porcentaje de comisión:\"\r\n                name=\"comision\"\r\n                pattern=\"[0-9.]*\"\r\n                value={sueldoEmpleado.comision}\r\n                onChange={handleChangeSueldo}\r\n            />\r\n            <div className=\"form-buttons\">\r\n                <div className=\"form-button\">\r\n                    <button type=\"button\" onClick={actualizarSueldoEmpleado}>Actualizar Sueldo</button>\r\n                </div>\r\n                <div className=\"form-button\">\r\n                    <button type=\"button\" onClick={liquidarEmpleado}>Liquidar Empleado</button>\r\n                </div>\r\n                <div className=\"form-button\">\r\n                    <button type=\"button\" onClick={liquidarTodos}>Liquidar a todos</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default LiquidacionForm;","import {useState} from \"react\";\r\nimport LiquidacionForm from \"./LiquidacionForm\";\r\nimport '../Tabla';\r\nimport '../styles/Form.css';\r\nimport {CeldaTabla, EncabezadoTabla, FilaTabla, Tabla} from '../Tabla';\r\nimport {\r\n    getEmpleados,\r\n    getLiquidaciones,\r\n    getSueldo,\r\n    postLiquidacionEmpleado,\r\n    postLiquidacionTodos,\r\n    postSueldo\r\n} from \"../../RestServices\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {RUTAS} from \"../../App\";\r\n\r\nconst empleadoInicial = {\r\n    nombre: ''\r\n}\r\n\r\nconst sueldoInicial = {\r\n    monto: 0,\r\n    comision: 0\r\n}\r\n\r\nconst Liquidacion = () => {\r\n    const history = useHistory();\r\n    const [listaLiquidacion, setListaLiquidacion] = useState([]);\r\n    const [listaEmpleados, setListaEmpleados] = useState([]);\r\n    const [empleado, setEmpleado] = useState(empleadoInicial);\r\n    const [sueldo, setSueldo] = useState(sueldoInicial);\r\n\r\n    const fetchEmpleados = () => {\r\n        getEmpleados().then(data => {\r\n            if (data)\r\n                setListaEmpleados(data)\r\n        });\r\n    }\r\n\r\n    const fetchLiquidacion = () => {\r\n        getLiquidaciones().then(data => {\r\n            if (data)\r\n                setListaLiquidacion(data)\r\n        });\r\n    }\r\n\r\n    const fetchSueldo = (empleado) => {\r\n        getSueldo(empleado).then(data => {\r\n            if (data)\r\n                setSueldo(data)\r\n        });\r\n    }\r\n\r\n    useState(() => {\r\n        if (localStorage.getItem(\"token\")) {\r\n            fetchEmpleados();\r\n            fetchLiquidacion();\r\n        } else\r\n            history.push(RUTAS.login)\r\n\r\n    }, [history]);\r\n\r\n    const liquidarEmpleado = () => {\r\n        postLiquidacionEmpleado(empleado).then(() => fetchLiquidacion());\r\n    }\r\n\r\n    const liquidarTodos = () => {\r\n        postLiquidacionTodos().then(() => fetchLiquidacion());\r\n    }\r\n\r\n    const actualizarEmpleado = (valorAtributo) => {\r\n        const index = listaEmpleados.findIndex(e => e.nombre === valorAtributo);\r\n        setEmpleado(listaEmpleados[index]);\r\n        fetchSueldo(listaEmpleados[index]);\r\n    }\r\n\r\n    const actualizarCamposSueldo = (nombreAtributo, valorAtributo) => {\r\n        const nuevoSueldo = {...sueldo, [nombreAtributo]: valorAtributo};\r\n        setSueldo(nuevoSueldo);\r\n    }\r\n\r\n    const actualizarSueldoEmpleado = () => {\r\n        console.log(sueldo);\r\n        postSueldo(sueldo).then(() => {\r\n            fetchSueldo()\r\n        });\r\n    }\r\n\r\n\r\n    const filasLiquidacion = () => {\r\n        if (listaLiquidacion)\r\n            return listaLiquidacion.map((e, i) => {\r\n                return <FilaTabla key={i}>\r\n                    <CeldaTabla dato={e.id}/>\r\n                    <CeldaTabla dato={\r\n                        listaEmpleados[listaEmpleados.findIndex(o => o.id === e.empleado.id)].nombre\r\n                    }/>\r\n                    <CeldaTabla dato={e.fecha}/>\r\n                    <CeldaTabla dato={e.monto}/>\r\n                </FilaTabla>\r\n            });\r\n        else\r\n            return <></>\r\n    }\r\n\r\n    const encabezado = [\"ID Liquidación\", \"Empleado\", \"Fecha\", \"Monto\"].map((e, i) =>\r\n        <EncabezadoTabla key={i}>{e}</EncabezadoTabla>)\r\n\r\n    return (\r\n        <>\r\n            <h1>Gestión de liquidaciones</h1>\r\n\r\n            <div className=\"panel-form-simple\">\r\n                <LiquidacionForm\r\n                    empleado={empleado}\r\n                    listaEmpleados={listaEmpleados}\r\n                    actualizarCampos={actualizarEmpleado}\r\n                    actualizarCamposSueldo={actualizarCamposSueldo}\r\n                    actualizarSueldoEmpleado={actualizarSueldoEmpleado}\r\n                    liquidarEmpleado={liquidarEmpleado}\r\n                    liquidarTodos={liquidarTodos}\r\n                    sueldoEmpleado={sueldo}\r\n                />\r\n            </div>\r\n            <Tabla encabezado={encabezado} filas={filasLiquidacion()}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Liquidacion","import {Link} from \"react-router-dom\";\r\nimport {RUTAS} from \"../App\";\r\n\r\nconst NavBar = ({logout}) => {\r\n\r\n    return (\r\n        <nav>\r\n            <ul className=\"nav-links\">\r\n                <Link className=\"nav-links\" to={RUTAS.clientes}>\r\n                    <li>Clientes</li>\r\n                </Link>\r\n                <Link className=\"nav-links\" to={RUTAS.obras}>\r\n                    <li>Obras</li>\r\n                </Link>\r\n                <Link className=\"nav-links\" to={RUTAS.pagos}>\r\n                    <li>Pagos</li>\r\n                </Link>\r\n                <Link className=\"nav-links\" to={RUTAS.pedidos}>\r\n                    <li>Pedidos</li>\r\n                </Link>\r\n                <Link className=\"nav-links\" to={RUTAS.productos}>\r\n                    <li>Productos</li>\r\n                </Link>\r\n                <Link className=\"nav-links\" to={RUTAS.liquidacion}>\r\n                    <li>Liquidación</li>\r\n                </Link>\r\n                <Link className=\"nav-links\" to={RUTAS.login} onClick={() => logout()}>\r\n                    <li>Cerrar Sesión</li>\r\n                </Link>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport {useEffect, useState} from \"react\";\r\nimport Clientes from \"./components/clientes/Clientes\";\r\nimport Login from \"./components/login/Login\";\r\nimport Obras from \"./components/obras/Obras\"\r\nimport Productos from \"./components/productos/Productos\";\r\nimport Pedidos from './components/pedidos/Pedidos';\r\nimport Pagos from './components/pagos/Pagos';\r\nimport Liquidacion from './components/liquidacion/Liquidacion'\r\nimport NavBar from './components/NavBar';\r\nimport {useAlert} from \"react-alert\";\r\n\r\nexport const RUTAS = {\r\n    login: \"/\",\r\n    clientes: \"/page/clientes\",\r\n    obras: \"/page/obras\",\r\n    productos: \"/page/productos\",\r\n    pedidos: \"/page/pedidos\",\r\n    pagos: \"/page/pagos\",\r\n    liquidacion: \"/page/liquidacion\",\r\n    logout: \"/logout\"\r\n}\r\n\r\nfunction App() {\r\n    const [logged, setLogged] = useState(false);\r\n    const alert = useAlert()\r\n\r\n    useEffect(() => {\r\n        setLogged(localStorage.getItem(\"token\") !== null && localStorage.getItem(\"token\") !== undefined)\r\n    }, []);\r\n\r\n    const logout = () => {\r\n        alert.info(\"Sesión cerrada\")\r\n        setLogged(false)\r\n        localStorage.removeItem('token')\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Router>\r\n                {logged ? <NavBar logout={logout}/> : <></>}\r\n\r\n                <Switch>\r\n\r\n                    <Route exact path={RUTAS.login}>\r\n                        <Login logged={logged} setLogged={setLogged}/>\r\n                    </Route>\r\n                    <Route path={RUTAS.clientes} component={Clientes}/>\r\n                    <Route path={RUTAS.obras} component={Obras}/>\r\n                    <Route path={RUTAS.productos} component={Productos}/>\r\n                    <Route path={RUTAS.pedidos} component={Pedidos}/>\r\n                    <Route path={RUTAS.pagos} component={Pagos}/>\r\n                    <Route path={RUTAS.liquidacion} component={Liquidacion}/>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {positions, Provider as AlertProvider, transitions} from 'react-alert'\r\nimport AlertTemplate from 'react-alert-template-basic'\r\n\r\n// optional configuration\r\nconst options = {\r\n    // you can also just use 'bottom center'\r\n    position: positions.BOTTOM_RIGHT,\r\n    timeout: 3000,\r\n    offset: '10px',\r\n    // you can also just use 'scale'\r\n    transition: transitions.SCALE\r\n}\r\n\r\nconst Root = () => (\r\n    <AlertProvider template={AlertTemplate} {...options}>\r\n        <App/>\r\n    </AlertProvider>\r\n)\r\n\r\nrender(<Root/>, document.getElementById('root'))\r\n"],"sourceRoot":""}