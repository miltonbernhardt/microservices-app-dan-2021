version: '2'
services:
  postgresdb:
    container_name: postgresdb
    image: postgres:latest
    restart: always
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./scripts/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=dan2021
      - POSTGRES_USER=dan2021
      - POSTGRES_PASSWORD=dan2021
    ports:
      - "5432:5432"
    networks:
      - infra
      - app

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - infra

#  mongo:
#    container_name: mongo
#    image: mongo
#    restart: always
#    ports:
#      - "27017:27017"
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: dan2021
#      MONGO_INITDB_ROOT_PASSWORD: dan2021
#    networks:
#      - infra
#      - app

#  mongo-express:
#    container_name: mongo-express
#    image: mongo-express
#    restart: always
#    ports:
#      - "8081:8081"
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: dan2021
#      ME_CONFIG_MONGODB_ADMINPASSWORD: dan2021
#    networks:
#      - infra

  artemis:
    container_name: artemis
    image: artemis:1.0.0
    restart: always
    ports:
      - "61616:61616"
    networks:
      - app
      - infra

  service-discovery:
    container_name: service-discovery
    image: dan/service-discovery:1.0.0
    ports:
      - "8761:8761"
    networks:
      - app

  service-gateway:
    container_name: service-gateway
    image: dan/service-gateway:1.0.0
    ports:
      - "8181:8181"
    environment:
      - "SERVER_PORT=8181"
      - "DISCOVERY-SERVICE-URL=service-discovery:8761"
    networks:
      - app
      - infra

  ms-cuentacorriente:
    container_name: ms-cuentacorriente
    image: dan/ms-cuentacorriente:1.0.0
    ports:
      - "9003:9003"
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
      - "SERVER_PORT=9003"
      - "SPRING_DATASOURCE_URL=jdbc:postgresql://postgresdb:5432/dan2021?currentSchema=ms_cuentacorriente"
      - "SPRING_DATA_MONGODB_URI=mongodb://dan2021:dan2021@mongodb:27017/dan2021"
      - "EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka"
    networks:
      - app

  ms-pedido:
    container_name: ms-pedido
    image: dan/ms-pedido:1.0.0
    ports:
      - "9002:9002"
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
      - "SERVER_PORT=9002"
      - "SPRING_DATASOURCE_URL=jdbc:postgresql://postgresdb:5432/dan2021?currentSchema=ms_pedido"
      - "SPRING_DATA_MONGODB_URI=mongodb://dan2021:dan2021@mongodb:27017/dan2021"
      - "EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka"
      - "SPRING_ARTEMIS_HOST=artemis"
      - "SPRING_ARTEMIS_PORT=61616"
    networks:
      - app

  ms-producto:
    container_name: ms-producto
    image: dan/ms-producto:1.0.0
    ports:
      - "9001:9001"
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
      - "SERVER_PORT=9001"
      - "SPRING_DATASOURCE_URL=jdbc:postgresql://postgresdb:5432/dan2021?currentSchema=ms_producto"
      - "SPRING_DATA_MONGODB_URI=mongodb://dan2021:dan2021@mongodb:27017/dan2021"
      - "EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka"
      - "SPRING_ARTEMIS_HOST=artemis"
      - "SPRING_ARTEMIS_PORT=61616"
    networks:
      - app

  ms-usuario:
    container_name: ms-usuario
    image: dan/ms-usuario:1.0.0
    ports:
      - "9000:9000"
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
      - "SERVER_PORT=9000"
      - "SPRING_DATASOURCE_URL=jdbc:postgresql://postgresdb:5432/dan2021?currentSchema=ms_usuario"
      - "SPRING_DATA_MONGODB_URI=mongodb://dan2021:dan2021@mongodb:27017/dan2021"
      - "EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka"
    networks:
      - app

#   ToDo:
#   s
#      http://user:password@localhost:8761/eureka) todo para seguridad
#  https://cloud.spring.io/spring-cloud-netflix/multi/multi__service_discovery_eureka_clients.html

#     Parte 02 – Agregar telemetría
#       agregar Prometheus
#       agregar Graphana
#     Parte 05 – Para el frontend
#       agregar Node

networks:
  infra:
    driver: bridge
  app:
    driver: bridge
