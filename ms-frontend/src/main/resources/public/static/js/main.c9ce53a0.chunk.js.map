{"version":3,"sources":["components/clientes/ClientesForm.jsx","components/Tabla.jsx","components/services/ClienteService.js","components/clientes/Clientes.jsx","components/Login.jsx","components/obras/ObrasForm.jsx","components/FormComponents.jsx","components/obras/ClienteObrasForm.jsx","components/services/ObraService.js","components/obras/Obras.jsx","components/productos/ProductosForm.jsx","components/services/ProductoService.js","components/productos/Productos.jsx","components/pedidos/PedidosForm.jsx","components/pedidos/DetallePedidoForm.jsx","components/services/PedidoService.js","components/pedidos/Pedidos.jsx","components/pagos/Pagos.jsx","components/liquidacion/LiquidacionForm.jsx","components/services/EmpleadoSertvice.js","components/services/LiquidacionService.js","components/liquidacion/Liquidacion.jsx","components/NavBar.jsx","App.js","reportWebVitals.js","index.js"],"names":["ClientesForm","cliente","actualizarCliente","saveOrUpdate","clean","handleChange","evt","nombreAtributo","target","name","valorAtributo","type","checked","value","validity","valid","className","razonSocial","onChange","pattern","cuit","mail","maxCuentaCorriente","habilitadoOnline","onClick","Tabla","titulo","children","EncabezadoTabla","FilaTabla","clave","CeldaTabla","dato","CeldaBotonTabla","accion","DIRECCION_CLIENTE","PUERTO_CLIENTE","API_CLIENTE","getClientes","axios","get","catch","err","alert","clienteInicial","Clientes","useState","setCliente","listaClientes","setListaClientes","useEffect","fetchClientes","a","then","res","data","filasCliente","map","e","indice","id","encabezado","atributo","valor","clienteNuevo","put","putCliente","post","postCliente","Login","usuario","ingresar","actualizarCampos","preventDefault","placeholder","nombre","password","ObrasForm","obra","descripcion","latitud","longitud","direccion","superficie","tipoObra","ComboForm","opciones","label","o","index","CampoForm","readOnly","ClienteObrasForm","c","API_OBRA","getObras","obraInicial","Obras","setObra","listaObras","setListaObras","fetchObras","filasObras","nuevaObra","putObra","postObra","findIndex","ProductosForm","producto","unidades","precio","stockActual","stockMinimo","unidad","u","DIRECCION_PRODUCTO","PUERTO_PRODUCTO","API_PRODUCTO","getProductos","unidadInicial","productoInicial","Productos","setProducto","listaProductos","setListaProductos","listaUnidades","setListaUnidades","fetchProductos","filasProductos","nuevoProducto","putProducto","postProducto","PedidosForm","pedido","verDetalle","obras","fechaPedido","estado","DetallePedidoForm","detallePedido","cantidad","p","DIRECCION_PEDIDO","PUERTO_PEDIDO","API_PEDIDO","API_DETALLE_PEDIDO","pedidoInicial","detalle","detallePedidoInicial","Pedidos","setPedido","listaPedidos","setListaPedidos","setDetalle","listaDetalle","setListaDetalle","fetchPedidos","cleanPedido","filasPedidos","seleccionarPedido","eliminarDetalle","d","delete","deleteDetalle","filasDetalle","encabezadoDetalle","nuevoPedido","putPedido","postPedido","nuevoDetalle","putDetalle","postDetalle","Pagos","LiquidacionForm","empleado","listaEmpleados","liquidarTodos","liquidarEmpleado","actualizarCamposSueldo","actualizarSueldoEmpleado","sueldoEmpleado","handleChangeSueldo","monto","comision","API_EMPLEADO","DIRECCION_LIQUIDACION","PUERTO_LIQUIDACION","API_LIQUIDACION","getSueldo","empleadoInicial","sueldoInicial","Liquidacion","listaLiquidacion","setListaLiquidacion","setListaEmpleados","setEmpleado","sueldo","setSueldo","fetchEmpleados","fetchLiquidacion","fetchSueldo","filasLiquidacion","fecha","nuevoSueldo","console","log","postSueldo","postLiquidacionEmpleado","NavBar","to","usuarioInicial","autenticado","App","setUsuario","exact","path","nuevoUsuario","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9ce53a0.chunk.js","sourcesContent":["import \"../styles/Form.css\";\n\nconst ClientesForm = ({ cliente, actualizarCliente, saveOrUpdate, clean }) => {\n\n    const handleChange = evt => {\n        const nombreAtributo = evt.target.name;\n        const valorAtributo = evt.target.type === 'checkbox' ?\n            evt.target.checked : evt.target.value;\n        if (evt.target.validity.valid) actualizarCliente(nombreAtributo, valorAtributo);\n    }\n\n    return (\n        <form className=\"form-box container\">\n            <div className=\"row\">\n                <div className=\"col-25 form-label\">\n                    <label>Razon Social</label>\n                </div>\n                <div className=\"col-75\">\n                    <input\n                        name=\"razonSocial\"\n                        value={cliente.razonSocial}\n                        onChange={handleChange} />\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-25 form-label\">\n                    <label >Cuit</label>\n                </div>\n                <div className=\"col-75\">\n                    <input\n                        type=\"text\"\n                        pattern=\"[0-9]*\"\n                        name=\"cuit\"\n                        value={cliente.cuit}\n                        onChange={handleChange} />\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-25 form-label\">\n                    <label>Email</label>\n                </div>\n                <div className=\"col-75\">\n                    <input\n                        name=\"mail\"\n                        value={cliente.mail}\n                        onChange={handleChange} />\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col-25 form-label\">\n                    <label>Maximo Descubierto</label>\n                </div>\n                <div className=\"col-75\">\n                    <input\n                        type=\"text\"\n                        pattern=\"[0-9.]*\"\n                        name=\"maxCuentaCorriente\"\n                        value={cliente.maxCuentaCorriente}\n                        onChange={handleChange} />\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-25 form-label\">\n                    <label>Habilitado Online</label>\n                </div>\n                <div className=\"col-75\">\n                    <input\n                        name=\"habilitadoOnline\"\n                        type=\"checkbox\"\n                        checked={cliente.habilitadoOnline}\n                        onChange={handleChange} />\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-50 \">\n                    <button type=\"button\" onClick={clean}>Cancelar</button>\n                </div>\n                <div className=\"col-50\">\n                    <button type=\"button\" onClick={saveOrUpdate}>Guardar</button>\n                </div>\n            </div>\n        </form >\n    )\n}\nexport default ClientesForm;","import React from 'react';\nexport const Tabla = ({ titulo, children }) => {\n\n    return (\n        <div >\n            <h2>{titulo}</h2>\n            <table>\n                {children}\n            </table>\n        </div>\n    )\n}\n\nexport const EncabezadoTabla = ({ children }) => {\n    return (\n        <th>\n            {children}\n        </th>\n    )\n}\nexport const FilaTabla = ({ children, clave }) => {\n    return (\n        <tr key={clave}>\n            {children}\n        </tr>\n    )\n}\nexport const CeldaTabla = ({ dato }) => {\n    return (\n        <td className=\"celdaTabla\">\n            {dato}\n        </td>\n    )\n}\nexport const CeldaBotonTabla = ({ titulo, accion }) => {\n    return (\n        <td className=\"celdaTabla\">\n            <button onClick={accion}>{titulo}</button>\n        </td>\n    )\n}\n\nexport default Tabla;","import axios from 'axios';\n\nexport const DIRECCION_CLIENTE = 'localhost';\nexport const PUERTO_CLIENTE = '9000';\nexport const API_CLIENTE = '/api/cliente'\n\nexport const getClientes = () => {\n    const res = axios.get(`http://${DIRECCION_CLIENTE}:${PUERTO_CLIENTE}${API_CLIENTE}`)\n        .catch(err => alert(err));\n    return res;\n}\n\nexport const postCliente = (cliente) => {\n    const res = axios\n        .post(`http://${DIRECCION_CLIENTE}:${PUERTO_CLIENTE}${API_CLIENTE}`, cliente)\n        .catch(err => alert(err));\n    return res;\n}\n\nexport const putCliente = (cliente) => {\n    const res = axios\n        .put(`http://${DIRECCION_CLIENTE}:${PUERTO_CLIENTE}${API_CLIENTE}`, cliente)\n        .catch(err => alert(err));\n    return res;\n}","import ClientesForm from './ClientesForm';\nimport { Tabla, FilaTabla, CeldaTabla, CeldaBotonTabla, EncabezadoTabla } from '../Tabla';\nimport { useEffect, useState } from 'react';\nimport '../styles/Clientes.css';\nimport '../styles/Tabla.css';\nimport '../services/ClienteService';\nimport { getClientes, postCliente, putCliente } from '../services/ClienteService';\n\nconst clienteInicial = {\n    razonSocial: '-',\n    habilitadoOnline: true,\n    maxCuentaCorriente: 0.0,\n    mail: '',\n    cuit: ''\n};\n\nconst Clientes = () => {\n\n    const [cliente, setCliente] = useState(clienteInicial);\n    const [listaClientes, setListaClientes] = useState([]);\n\n    useEffect(() => {\n        fetchClientes();\n    }, []);\n\n    const fetchClientes = async () => {\n        getClientes().then(res => setListaClientes(res.data));\n    }\n\n\n    const actualizarCliente = (atributo, valor) => {\n        const clienteNuevo = { ...cliente, [atributo]: valor };\n        setCliente(clienteNuevo);\n    }\n\n    const saveOrUpdate = () => {\n        (!(cliente.id)) ? postCliente(cliente).then(() => fetchClientes()) :\n            putCliente(cliente).then(() => fetchClientes());\n        setCliente(clienteInicial);\n    };\n\n    const filasCliente = listaClientes.map((e, indice) => {\n        return <FilaTabla clave={e.indice} >\n            <CeldaTabla dato={e.id} />\n            <CeldaTabla dato={e.razonSocial} />\n            <CeldaTabla dato={e.mail} />\n            <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => setCliente(e)} />\n        </FilaTabla>\n    });\n\n    const encabezado = [\"ID Usuario\", \"Razon Social\", \"e-mail\", \"\"].map((e) => {\n        return <EncabezadoTabla>{e}</EncabezadoTabla>\n    })\n\n    const limpiarCampos = () => {\n        setCliente(clienteInicial);\n    }\n\n    return (\n        <div className=\"box\">\n            <div><h1>Gestion de clientes</h1></div>\n            <div className=\"panelForm\">\n                <div className=\"panelFormAlta\">\n                    <ClientesForm cliente={cliente}\n                        actualizarCliente={actualizarCliente}\n                        saveOrUpdate={saveOrUpdate}\n                        clean={limpiarCampos} />\n                </div>\n                <div className=\"panelFormBusqueda\">Busqueda</div>\n            </div>\n            <div className=\"panel\">\n                <Tabla >\n                    {encabezado}\n                    {filasCliente}\n                </Tabla>\n            </div>\n        </div>\n    )\n}\n\nexport default Clientes;","import \"./styles/Form.css\";\n\nconst Login = ({ usuario, ingresar, actualizarCampos }) => {\n\n    const handleChange = (evt) => {\n        evt.preventDefault();\n        // console.log(evt.target.value);\n        const nombreAtributo = evt.target.name;\n        const valorAtributo = evt.target.value;\n        actualizarCampos(nombreAtributo, valorAtributo);\n    }\n\n    return (\n        <div className=\"container\">\n            <h1 className=\"form-step\"> Login </h1>\n            <form >\n                <div className=\"row\">\n                    <div className=\"col-25 form-label\">\n                        <label>Nombre de usuario</label>\n                    </div>\n                    <div className=\"col-75\">\n                        <input\n                            name=\"nombre\"\n                            type=\"text\"\n                            placeholder=\"usuario\"\n                            value={usuario.nombre}\n                            onChange={handleChange} />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-25 form-label\">\n                        <label>Contraseña</label>\n                    </div>\n                    <div className=\"col-75\">\n                        <input\n                            name=\"password\"\n                            type=\"password\"\n                            placeholder=\"Contraseña\"\n                            value={usuario.password}\n                            onChange={handleChange} />\n                    </div>\n                </div>\n            </form>\n            <div className=\"row\">\n                <div className=\"col-25\" />\n                <div className=\"col-75\">\n                    <button className=\"btn-wide\" onClick={ingresar}>Ingresar</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;","const ObrasForm = ({ obra, actualizarCampos, saveOrUpdate, clean }) => {\n\n    const handleChange = (evt) => {\n        evt.preventDefault();\n        // console.log(evt.target.value);\n        const nombreAtributo = evt.target.name;\n        const valorAtributo = evt.target.value;\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\n    }\n\n    return (\n        <form className=\"form-box container\">\n            <h3>Obra</h3>\n            <div className=\"row\">\n                <div className=\"col-25 form-label\">\n                    <label>Descripcion</label>\n                </div>\n                <div className=\"col-75\">\n                    <input name=\"descripcion\"\n                        value={obra.descripcion}\n                        onChange={handleChange} />\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-25 form-label\">\n                    <label >Latitud</label>\n                </div>\n                <div className=\"col-75\">\n                    <input\n                        type=\"text\"\n                        pattern=\"[0-9]*\"\n                        name=\"latitud\"\n                        value={obra.latitud}\n                        onChange={handleChange} />\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-25 form-label\">\n                    <label>Longitud</label>\n                </div>\n                <div className=\"col-75\">\n                    <input\n                        type=\"text\"\n                        pattern=\"[0-9]*\"\n                        name=\"longitud\"\n                        value={obra.longitud}\n                        onChange={handleChange} />\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col-25 form-label\">\n                    <label>Direccion</label>\n                </div>\n                <div className=\"col-75\">\n                    <input\n                        name=\"direccion\"\n                        value={obra.direccion}\n                        onChange={handleChange} />\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col-25 form-label\">\n                    <label>Superficie</label>\n                </div>\n                <div className=\"col-75\">\n                    <input\n                        type=\"text\"\n                        pattern=\"[0-9]*\"\n                        name=\"superficie\"\n                        value={obra.superficie}\n                        onChange={handleChange} />\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col-25 form-label\">\n                    <label>Tipo de Obra</label>\n                </div>\n                <div className=\"col-75\">\n                    <select name=\"tipoObra\" value={obra.tipoObra} onChange={handleChange} >\n                        <option value=\"REFORMA\">Reforma</option>\n                        <option value=\"CASA\">Casa</option>\n                        <option value=\"EDIFICIO\">Edificio</option>\n                        <option value=\"VIAL\">Vial</option>\n\n                    </select>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col-50 \">\n                    <button type=\"button\" onClick={clean}>Limpiar</button>\n                </div>\n                <div className=\"col-50\">\n                    <button type=\"button\" onClick={saveOrUpdate}>Guardar</button>\n                </div>\n            </div>\n        </form >\n    );\n}\n\nexport default ObrasForm;","import Select from \"react-select\";\n\nexport const CampoForm = ({ value, onChange, label, name, pattern, readOnly }) => {\n    return (\n        <div className=\"row\">\n            <div className=\"col-25 form-label\">\n                <label>{label}</label>\n            </div>\n            <div className=\"col-75\">\n                <input name={name}\n                    pattern={pattern}\n                    value={value}\n                    onChange={onChange}\n                    readOnly={readOnly} />\n            </div>\n        </div>\n    );\n}\n\nexport const ComboForm = ({ opciones, value, onChange, label, name }) => {\n    return <div className=\"row\">\n        <div className=\"col-25 form-label\">\n            <label >{label}</label>\n        </div>\n        <div className=\"col-75\">\n            <select\n                name={name}\n                value={value}\n                onChange={onChange} >\n                {opciones.map((o, index) => {\n                    return <option key={index} value={o} >{o}</option>\n                })}\n            </select>\n        </div>\n    </div>\n}\n\nexport const ReactComboForm = ({ opciones, value, onChange, label, name, placeholder }) => {\n    return <div className=\"row\">\n        <div className=\"col-25 form-label\">\n            <label >{label}</label>\n        </div>\n        <div className=\"col-75\">\n            <Select\n                placeholder={placeholder}\n                name={name}\n                value={value}\n                onChange={onChange}\n                options={opciones} />\n        </div>\n    </div>\n}\n\nexport default CampoForm;","import { ComboForm } from \"../FormComponents\";\n\nconst ClienteObrasForm = ({ cliente, actualizarCampos, listaClientes }) => {\n\n    const handleChange = (evt) => {\n        const nombreAtributo = evt.target.name;\n        const valorAtributo = evt.target.value;\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\n    }\n\n    return (\n        <form className=\"form-box container\">\n            <h3>Cliente</h3>\n\n            <ComboForm\n                label='Razon Social'\n                placeholder='Razon Social'\n                name='razonSocial'\n                value={cliente.razonSocial}\n                onChange={handleChange}\n                opciones={listaClientes.map(c => { return c.razonSocial })} />\n\n            <ComboForm\n                label='CUIT'\n                placeholder='CUIT'\n                name='cuit'\n                value={cliente.cuit}\n                onChange={handleChange}\n                opciones={listaClientes.map(c => { return c.cuit })} />\n\n        </form >\n    );\n}\n\nexport default ClienteObrasForm;","import axios from 'axios';\n\nexport const DIRECCION_CLIENTE = 'localhost';\nexport const PUERTO_CLIENTE = '9000';\nexport const API_OBRA = '/api/obra'\n\nexport const getObras = () => {\n    const res = axios.get(`http://${DIRECCION_CLIENTE}:${PUERTO_CLIENTE}${API_OBRA}`)\n        .catch(err => alert(err));\n    return res;\n}\n\nexport const postObra = (obra) => {\n    const res = axios\n        .post(`http://${DIRECCION_CLIENTE}:${PUERTO_CLIENTE}${API_OBRA}`, obra)\n        .catch(err => alert(err));\n    return res;\n}\n\nexport const putObra = (obra) => {\n    const res = axios\n        .put(`http://${DIRECCION_CLIENTE}:${PUERTO_CLIENTE}${API_OBRA}/${obra.id}`, obra)\n        .catch(err => alert(err));\n    return res;\n}","import { Tabla, FilaTabla, CeldaTabla, CeldaBotonTabla, EncabezadoTabla } from '../Tabla';\nimport ObrasForm from \"./ObrasForm\";\nimport ClienteObrasForm from \"./ClienteObrasForm\";\nimport \"../styles/Form.css\";\nimport \"../styles/Tabla.css\";\nimport { useState, useEffect } from \"react\";\nimport { getClientes } from '../services/ClienteService';\nimport { getObras, postObra, putObra } from '../services/ObraService';\n\nconst clienteInicial = {\n    id: null,\n    razonSocial: \"\",\n    cuit: \"\"\n}\n\nconst obraInicial = {\n    id: null,\n    descripcion: \"\",\n    latitud: 0,\n    longitud: 0,\n    direccion: \"\",\n    superficie: 0,\n    tipoObra: \"\",\n    cliente: clienteInicial\n}\n\nconst Obras = () => {\n\n    const [obra, setObra] = useState(obraInicial);\n    const [cliente, setCliente] = useState(clienteInicial);\n    const [listaClientes, setListaClientes] = useState([]);\n    const [listaObras, setListaObras] = useState([]);\n\n    useEffect(() => {\n        fetchClientes();\n        fetchObras();\n    }, []);\n\n    const fetchClientes = async () => {\n        getClientes().then(res => setListaClientes(res.data));\n    }\n\n    const fetchObras = async () => {\n        getObras().then(res => setListaObras(res.data));\n    }\n\n    const actualizarObra = (nombreAtributo, valorAtributo) => {\n        const nuevaObra = { ...obra, [nombreAtributo]: valorAtributo };\n        setObra(nuevaObra);\n    }\n\n    const actualizarCliente = (nombreAtributo, valorAtributo) => {\n        const index = listaClientes.findIndex(c => c.[nombreAtributo] === valorAtributo);\n        setCliente(listaClientes[index])\n        const nuevaObra = { ...obra, cliente: listaClientes[index] };\n        setObra(nuevaObra);\n    }\n\n    const saveOrUpdate = () => {\n        !(obra.id) ? postObra(obra).then(() => fetchObras()) :\n            putObra(obra).then(() => fetchObras());\n        setObra(obraInicial);\n        setCliente(clienteInicial);\n    };\n\n    const cleanObra = () => {\n        setObra(obraInicial);\n        setCliente(clienteInicial);\n    }\n\n    const filasObras = listaObras.map((e, indice) => {\n        return <FilaTabla clave={e.indice} >\n            <CeldaTabla dato={e.id} />\n            <CeldaTabla dato={e.descripcion} />\n            <CeldaTabla dato={e.direccion} />\n            <CeldaTabla dato={e.superficie} />\n            <CeldaTabla dato={e.tipoObra} />\n            <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => {\n                setObra(e); setCliente(e.cliente);\n            }} />\n        </FilaTabla>\n    });\n\n    const encabezado = [\"ID Obra\", \"Descripcion\", \"Direccion\", \"Superficie\", \"Tipo de Obra\", \"\"]\n        .map((e) => {\n            return <EncabezadoTabla>{e}</EncabezadoTabla>\n        })\n\n    return (\n        <div className=\"box\">\n            <div><h1>Gestion de Obras</h1></div>\n            <div className=\"panelForm\">\n                <div className=\"panelFormAlta\">\n\n                    <ObrasForm\n                        obra={obra}\n                        actualizarCampos={actualizarObra}\n                        clean={cleanObra}\n                        saveOrUpdate={saveOrUpdate} />\n                </div>\n\n                <div className=\"panelFormBusqueda\">\n\n                    <ClienteObrasForm\n                        cliente={cliente}\n                        actualizarCampos={actualizarCliente}\n                        listaClientes={listaClientes} />\n                </div>\n            </div>\n            <div className=\"panel\">\n                <Tabla >\n                    {encabezado}\n                    {filasObras}\n                </Tabla>\n            </div>\n        </div>\n    );\n}\n\nexport default Obras;","import '../FormComponents';\nimport CampoForm, { ComboForm } from '../FormComponents';\n\nconst ProductosForm = ({ producto, unidades, actualizarCampos, clean, saveOrUpdate }) => {\n\n    const handleChange = (evt) => {\n        evt.preventDefault();\n        const nombreAtributo = evt.target.name;\n        const valorAtributo = evt.target.value;\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\n    }\n\n    return (\n        <form className=\"form-box container\">\n            <h3>Producto</h3>\n\n            <CampoForm label='Nombre del Producto'\n                name='nombre'\n                value={producto.nombre}\n                onChange={handleChange} />\n\n            <CampoForm label='Descripcion'\n                name='descripcion'\n                value={producto.descripcion}\n                onChange={handleChange} />\n\n            <CampoForm label='Precio'\n                name='precio'\n                pattern=\"[0-9.]*\"\n                value={producto.precio}\n                onChange={handleChange} />\n\n            <CampoForm label='Stock Actual'\n                name='stockActual'\n                pattern=\"[0-9.]*\"\n                value={producto.stockActual}\n                onChange={handleChange} />\n\n            <CampoForm label='Stock Minimo'\n                name='stockMinimo'\n                pattern=\"[0-9.]*\"\n                value={producto.stockMinimo}\n                onChange={handleChange} />\n\n            <ComboForm\n                label=\"Unidad\"\n                name=\"unidad\"\n                value={producto.unidad.descripcion}\n                opciones={unidades.map(u => { return u.descripcion })}\n                onChange={handleChange} />\n\n            <div className=\"row\">\n                <div className=\"col-50 \">\n                    <button type=\"button\" onClick={clean}>Limpiar</button>\n                </div>\n                <div className=\"col-50\">\n                    <button type=\"button\" onClick={saveOrUpdate}>Guardar</button>\n                </div>\n            </div>\n        </form >\n    );\n}\n\nexport default ProductosForm;","import axios from 'axios';\n\nexport const DIRECCION_PRODUCTO = 'localhost';\nexport const PUERTO_PRODUCTO = '9001';\nexport const API_PRODUCTO = '/api/producto'\n\nexport const getProductos = () => {\n    const res = axios.get(`http://${DIRECCION_PRODUCTO}:${PUERTO_PRODUCTO}${API_PRODUCTO}`)\n        .catch(err => alert(err));\n    return res;\n}\n\nexport const getUnidades = () => {\n    const res = axios.get(`http://${DIRECCION_PRODUCTO}:${PUERTO_PRODUCTO}${API_PRODUCTO}/unidades`)\n        .catch(err => alert(err));\n    return res;\n}\n\nexport const postProducto = (producto) => {\n    const res = axios\n        .post(`http://${DIRECCION_PRODUCTO}:${PUERTO_PRODUCTO}${API_PRODUCTO}`, producto)\n        .catch(err => alert(err));\n    return res;\n}\n\nexport const putProducto = (producto) => {\n    const res = axios\n        .put(`http://${DIRECCION_PRODUCTO}:${PUERTO_PRODUCTO}${API_PRODUCTO}`, producto)\n        .catch(err => alert(err));\n    return res;\n}","import { Tabla, FilaTabla, CeldaTabla, CeldaBotonTabla, EncabezadoTabla } from '../Tabla';\nimport ProductosForm from './ProductosForm';\nimport '../styles/Form.css';\nimport '../styles/Clientes.css';\nimport { useEffect, useState } from 'react';\nimport { getProductos, getUnidades, postProducto, putProducto } from '../services/ProductoService';\n\nconst unidadInicial = {\n    descripcion: ''\n}\n\nconst productoInicial = {\n    nombre: '',\n    descripcion: '',\n    precio: 0,\n    stockActual: 0,\n    stockMinimo: 0,\n    unidad: unidadInicial\n}\n\nconst Productos = () => {\n\n    const [producto, setProducto] = useState(productoInicial);\n    const [listaProductos, setListaProductos] = useState([]);\n    const [listaUnidades, setListaUnidades] = useState([]);\n\n    useEffect(() => {\n        fetchProductos();\n    }, []);\n\n    const fetchProductos = async () => {\n        getProductos().then(res => setListaProductos(res.data));\n        getUnidades().then(res => setListaUnidades(res.data));\n    }\n\n    const actualizarProducto = (nombreAtributo, valorAtributo) => {\n        if (nombreAtributo === 'unidad') valorAtributo = { ...unidadInicial, descripcion: valorAtributo };\n        const nuevoProducto = { ...producto, [nombreAtributo]: valorAtributo };\n        setProducto(nuevoProducto);\n    }\n\n    const saveOrUpdate = () => {\n        !(producto.id) ? postProducto(producto).then(() => fetchProductos()) :\n            putProducto(producto).then(() => fetchProductos());\n        setProducto(productoInicial);\n    };\n\n    const cleanProducto = () => {\n        setProducto(productoInicial);\n    }\n\n    const filasProductos = listaProductos.map((e, indice) => {\n        return <FilaTabla clave={e.indice} >\n            <CeldaTabla dato={e.id} />\n            <CeldaTabla dato={e.nombre} />\n            <CeldaTabla dato={e.descripcion} />\n            <CeldaTabla dato={e.precio} />\n            <CeldaTabla dato={e.stockActual} />\n            <CeldaTabla dato={e.stockMinimo} />\n            <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => setProducto(e)} />\n        </FilaTabla>\n    });\n\n    const encabezado = [\"ID Producto\", \"Nombre\", \"Descripcion\", \"Precio\", \"Stock Actual\", \"Stock Minimo\", \"\"]\n        .map((e) => {\n            return <EncabezadoTabla>{e}</EncabezadoTabla>\n        })\n\n    return (\n        <div className=\"box\">\n            <div><h1>Productos</h1></div>\n            <div className=\"panel\">\n                <ProductosForm\n                    producto={producto}\n                    unidades={listaUnidades}\n                    actualizarCampos={actualizarProducto}\n                    clean={cleanProducto}\n                    saveOrUpdate={saveOrUpdate} />\n            </div>\n            <div className=\"panel\">\n                <Tabla >\n                    {encabezado}\n                    {filasProductos}\n                </Tabla>\n            </div>\n        </div>\n    );\n}\n\nexport default Productos;","import CampoForm, { ComboForm } from \"../FormComponents\";\nimport { getObras } from \"../services/ObraService\";\n\nconst PedidosForm = ({ pedido, actualizarCampos, clean, saveOrUpdate, verDetalle, obras }) => {\n\n    const handleChange = (evt) => {\n        evt.preventDefault();\n        // console.log(evt.target.value);\n        const nombreAtributo = evt.target.name;\n        const valorAtributo = evt.target.value;\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\n    }\n\n    const estadosPedido =\n        ['NUEVO', 'CONFIRMADO', 'PENDIENTE', 'CANCELADO', 'ACEPTADO', 'RECHAZADO', 'EN_PREPARACION', 'ENTREGADO'];\n    return (\n        <form className=\"form-box container\">\n            <CampoForm\n                label='Fecha'\n                name='fechaPedido'\n                value={pedido.fechaPedido}\n                onChange={handleChange} />\n            <ComboForm\n                label='Obra'\n                name='obra'\n                onChange={handleChange}\n                opciones={obras.map(o => { return o.id })} />\n            <ComboForm\n                label='Estado'\n                name='estado'\n                value={pedido.estado}\n                onChange={handleChange}\n                opciones={estadosPedido} />\n\n            <div className=\"row\">\n                <div className=\"col-25 \">\n                    <button type=\"button\" onClick={clean}>Limpiar</button>\n                </div>\n                <div className=\"col-50\">\n                    <button type=\"button\" onClick={verDetalle}>Ver Detalle</button>\n                </div>\n                <div className=\"col-25\">\n                    <button type=\"button\" onClick={saveOrUpdate}>Guardar</button>\n                </div>\n            </div>\n        </form >\n    );\n}\n\nexport default PedidosForm;","import '../FormComponents'\nimport CampoForm, { ComboForm } from '../FormComponents';\n\nconst DetallePedidoForm = ({ detallePedido, actualizarCampos, listaProductos, saveOrUpdate }) => {\n\n    const handleChange = (evt) => {\n        const nombreAtributo = evt.target.name;\n        const valorAtributo = evt.target.value;\n        if (evt.target.validity.valid) actualizarCampos(nombreAtributo, valorAtributo);\n    }\n\n    return (\n        <form className=\"formbox container\">\n\n            <CampoForm\n                label='Cantidad'\n                pattern='[0-9.]*'\n                name='cantidad'\n                value={detallePedido.cantidad}\n                onChange={handleChange} />\n\n            <CampoForm\n                label='Precio'\n                name='precio'\n                readOnly={true}\n                value={detallePedido.cantidad * detallePedido.producto.precio} />\n\n            <ComboForm\n                label='Producto'\n                name='producto'\n                onChange={handleChange}\n                value={detallePedido.producto.nombre}\n                opciones={listaProductos.map(p => { return p.nombre })} />\n\n            <div className=\"row\">\n                <div className=\"col-25\" />\n                <div className=\"col-75\">\n                    <button className=\"btn-wide\" type=\"button\" onClick={saveOrUpdate}>Guardar</button>\n                </div>\n            </div>\n        </form >\n    );\n}\n\nexport default DetallePedidoForm;","import axios from 'axios';\n\nexport const DIRECCION_PEDIDO = 'localhost';\nexport const PUERTO_PEDIDO = '9002';\nexport const API_PEDIDO = '/api/pedido'\nexport const API_DETALLE_PEDIDO = '/api/detallepedido'\n\nexport const getPedidos = () => {\n    const res = axios.get(`http://${DIRECCION_PEDIDO}:${PUERTO_PEDIDO}${API_PEDIDO}`)\n        .catch(err => alert(err));\n    return res;\n}\n\nexport const postPedido = (pedido) => {\n    const res = axios\n        .post(`http://${DIRECCION_PEDIDO}:${PUERTO_PEDIDO}${API_PEDIDO}`, pedido)\n        .catch(err => alert(err));\n    return res;\n}\n\nexport const putPedido = (pedido) => {\n    const res = axios\n        .put(`http://${DIRECCION_PEDIDO}:${PUERTO_PEDIDO}${API_PEDIDO}/${pedido.id}`, pedido)\n        .catch(err => alert(err));\n    return res;\n}\n\nexport const postDetalle = (detallePedido, pedido) => {\n    const res = axios\n        .post(`http://${DIRECCION_PEDIDO}:${PUERTO_PEDIDO}${API_DETALLE_PEDIDO}/?idPedido=${pedido.id}`, detallePedido)\n        .catch(err => alert(err));\n    return res;\n}\n\nexport const putDetalle = (detallePedido) => {\n    const res = axios\n        .put(`http://${DIRECCION_PEDIDO}:${PUERTO_PEDIDO}${API_DETALLE_PEDIDO}`, detallePedido)\n        .catch(err => alert(err));\n    return res;\n}\n\nexport const deleteDetalle = (detallePedido) => {\n    const res = axios\n        .delete(`http://${DIRECCION_PEDIDO}:${PUERTO_PEDIDO}${API_DETALLE_PEDIDO}/id?idDetalle=${detallePedido.id}`)\n        .catch(err => alert(err));\n    return res;\n}","import { Tabla, FilaTabla, CeldaTabla, CeldaBotonTabla, EncabezadoTabla } from '../Tabla';\nimport PedidosForm from './PedidosForm';\nimport DetallePedidoForm from './DetallePedidoForm'\nimport '../styles/Form.css';\nimport '../styles/Clientes.css';\nimport { useEffect, useState } from \"react\";\nimport { getPedidos, postPedido, putPedido, postDetalle, putDetalle, deleteDetalle } from '../services/PedidoService';\nimport '../services/ProductoService';\nimport { getProductos } from '../services/ProductoService';\nimport { getObras } from '../services/ObraService';\n\nconst pedidoInicial = {\n    id: null,\n    fechaPedido: '',\n    obra: '',\n    estado: 'NUEVO',\n    detalle: []\n}\n\nconst detallePedidoInicial = {\n    id: null,\n    cantidad: '',\n    precio: 0,\n    producto: ''\n}\n\nconst Pedidos = () => {\n\n    const [pedido, setPedido] = useState(pedidoInicial);\n    const [listaPedidos, setListaPedidos] = useState([]);\n\n    const [detallePedido, setDetalle] = useState(detallePedidoInicial);\n    const [listaDetalle, setListaDetalle] = useState([]);\n    const [listaProductos, setListaProductos] = useState([]);\n    const [listaObras, setListaObras] = useState([]);\n\n    useEffect(() => {\n        fetchPedidos();\n        fetchProductos();\n        fetchObras();\n    }, [listaPedidos, listaDetalle]);\n\n    const fetchPedidos = () => {\n        getPedidos().then(res => setListaPedidos(res.data))\n    }\n\n    const fetchProductos = () => {\n        getProductos().then(res => setListaProductos(res.data));\n    }\n\n    const fetchObras = () => {\n        getObras().then(res => setListaObras(res.data));\n    }\n\n    const actualizarPedido = (nombreAtributo, valorAtributo) => {\n        if (nombreAtributo === 'obra') {\n            const index = listaObras.findIndex(o => o.id == valorAtributo);\n            const nuevoPedido = { ...pedido, obra: listaObras[index] };\n            setPedido(nuevoPedido);\n        } else {\n            const nuevoPedido = { ...pedido, [nombreAtributo]: valorAtributo };\n            setPedido(nuevoPedido);\n        }\n    }\n\n    const saveOrUpdatePedido = () => {\n        !(pedido.id) ? postPedido(pedido).then(() => fetchPedidos()) :\n            putPedido(pedido).then(() => fetchPedidos());\n        cleanPedido();\n    };\n\n    const cleanPedido = () => {\n        setPedido(pedidoInicial);\n        setListaDetalle([]);\n        setDetalle(detallePedidoInicial);\n    }\n\n    const actualizarDetalle = (nombreAtributo, valorAtributo) => {\n        if (nombreAtributo === 'producto') {\n            const index = listaProductos.findIndex(p => p.nombre === valorAtributo);\n            const nuevoDetalle = {\n                ...detallePedido,\n                producto: listaProductos[index],\n                precio: detallePedido.cantidad * listaProductos[index].precio\n            };\n            setDetalle(nuevoDetalle)\n        }\n        else {\n            const nuevoDetalle = { ...detallePedido, [nombreAtributo]: valorAtributo };\n            setDetalle(nuevoDetalle);\n        }\n    }\n\n    const saveOrUpdateDetalle = () => {\n        !(detallePedido.id) ? postDetalle(detallePedido, pedido).then(() => fetchPedidos()) :\n            putDetalle(detallePedido).then(() => fetchPedidos());\n    };\n\n    const filasPedidos = listaPedidos.map((e, indice) => {\n        return <FilaTabla clave={e.indice} >\n            <CeldaTabla dato={e.id} />\n            <CeldaTabla dato={e.fechaPedido} />\n            <CeldaTabla dato={e.obra.id} />\n            <CeldaTabla dato={e.estado} />\n            <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => seleccionarPedido(e)} />\n        </FilaTabla>\n    });\n\n    const encabezado = [\"ID Pedido\", \"Fecha de Pedido\", \"ID Obra\", \"Estado\", \"\"]\n        .map((e) => {\n            return <EncabezadoTabla>{e}</EncabezadoTabla>\n        })\n\n    const seleccionarPedido = (p) => {\n        setPedido(p);\n        setListaDetalle(p.detalle);\n        setDetalle(detallePedidoInicial);\n    }\n\n    const eliminarDetalle = (d) => {\n        deleteDetalle(d).then(() => fetchPedidos());\n    }\n\n    const filasDetalle = listaDetalle.map((e, indice) => {\n        return <FilaTabla clave={e.indice} >\n            <CeldaTabla dato={e.id} />\n            <CeldaTabla dato={e.cantidad} />\n            <CeldaTabla dato={e.precio} />\n            <CeldaTabla dato={e.producto.nombre} />\n            <CeldaBotonTabla titulo=\"Eliminar\" accion={() => eliminarDetalle(e)} />\n            <CeldaBotonTabla titulo=\"Seleccionar\" accion={() => setDetalle(e)} />\n        </FilaTabla>\n    });\n\n    const encabezadoDetalle = [\"ID Detalle\", \"Cantidad\", \"Precio\", \"Producto\", \"\", \"\"]\n        .map((e) => {\n            return <EncabezadoTabla>{e}</EncabezadoTabla>\n        })\n\n    return (\n        <div className=\"box\">\n            <div><h1>Pedidos</h1></div>\n            <div className=\"panelForm\">\n                <div className=\"panelFormAlta\">\n                    <PedidosForm\n                        pedido={pedido}\n                        actualizarCampos={actualizarPedido}\n                        clean={cleanPedido}\n                        saveOrUpdate={saveOrUpdatePedido}\n                        obras={listaObras} />\n                </div>\n                <div className=\"panelFormAlta\">\n                    <DetallePedidoForm\n                        detallePedido={detallePedido}\n                        listaProductos={listaProductos}\n                        actualizarCampos={actualizarDetalle}\n                        saveOrUpdate={saveOrUpdateDetalle} />\n                </div>\n            </div>\n            <div className=\"panel\">\n                <div><h3>Detalle</h3></div>\n                <Tabla >\n                    {encabezadoDetalle}\n                    {filasDetalle}\n                </Tabla>\n                <div><h3>Pedidos</h3></div>\n                <Tabla >\n                    {encabezado}\n                    {filasPedidos}\n                </Tabla>\n            </div>\n        </div>\n    );\n}\nexport default Pedidos;","import { useState } from 'react';\nimport { CampoForm, ComboForms } from '../FormComponents'\nimport { Tabla, EncabezadoTabla, FilaTabla, CeldaTabla, CeldaBotonTabla } from '../Tabla'\n\nconst Pagos = () => {\n\n    const [listaPedidos, setListaPedidos] = useState([]);\n\n    const abonarPedido = () => { }\n\n    const filasPedidos = listaPedidos.map((e, indice) => {\n        return <FilaTabla clave={e.indice} >\n            <CeldaTabla dato={e.id} />\n            <CeldaTabla dato={e.fechaPedido} />\n            <CeldaTabla dato={e.obra} />\n            <CeldaTabla dato={e.estado} />\n            <CeldaBotonTabla titulo=\"Abonar\" accion={() => abonarPedido(e)} />\n        </FilaTabla>\n    });\n\n    const encabezado = [\"ID Pedido\", \"Fecha de Pedido\", \"ID Obra\", \"Estado\", \"\"]\n        .map((e) => {\n            return <EncabezadoTabla>{e}</EncabezadoTabla>\n        })\n\n\n    return (\n        <div className=\"box\">\n            <div><h1>Pagos</h1></div>\n            <div className=\"panel\">\n\n                <div><h3>Pedidos</h3></div>\n                <Tabla >\n                    {encabezado}\n                    {filasPedidos}\n                </Tabla>\n            </div>\n        </div>);\n}\n\nexport default Pagos;","import '../FormComponents'\nimport CampoForm, { ComboForm } from '../FormComponents'\n\nconst LiquidacionForm = ({ empleado, actualizarCampos, listaEmpleados, liquidarTodos, liquidarEmpleado, actualizarCamposSueldo, actualizarSueldoEmpleado, sueldoEmpleado }) => {\n\n    const handleChange = (evt) => {\n        const nombreAtributo = evt.target.name;\n        const valorAtributo = evt.target.value;\n        if (evt.target.validity.valid) actualizarCampos(valorAtributo);\n    }\n    const handleChangeSueldo = (evt) => {\n        const nombreAtributo = evt.target.name;\n        const valorAtributo = evt.target.value;\n        if (evt.target.validity.valid) actualizarCamposSueldo(nombreAtributo, valorAtributo);\n    }\n\n    return (\n        <form className='formbox-container'>\n            <ComboForm\n                label=\"Empleado\"\n                name=\"nombre\"\n                value={empleado.nombre}\n                onChange={handleChange}\n                opciones={listaEmpleados.map(e => { return e.nombre })}\n            />\n            <CampoForm\n                label=\"Monto\"\n                name=\"monto\"\n                pattern=\"[0-9.]*\"\n                value={sueldoEmpleado.monto}\n                onChange={handleChangeSueldo} />\n            <CampoForm\n                label=\"Porcentaje de comision\"\n                name=\"comision\"\n                pattern=\"[0-9.]*\"\n                value={sueldoEmpleado.comision}\n                onChange={handleChangeSueldo}\n            />\n            <div className=\"row\">\n                <div className=\"col-25\" />\n                <div className=\"col-25\">\n                    <button type=\"button\" onClick={actualizarSueldoEmpleado}>Actualizar Sueldo</button>\n                </div>\n                <div className=\"col-25\">\n                    <button type=\"button\" onClick={liquidarEmpleado}>Liquidar Empleado</button>\n                </div>\n                <div className=\"col-25\">\n                    <button type=\"button\" onClick={liquidarTodos}>Liquidar a todos</button>\n                </div>\n            </div>\n        </form>\n    );\n}\n\nexport default LiquidacionForm;","import axios from 'axios';\n\nexport const DIRECCION_CLIENTE = 'localhost';\nexport const PUERTO_CLIENTE = '9000';\nexport const API_EMPLEADO = '/api/empleado'\n\nexport const getEmpleados = () => {\n    const res = axios.get(`http://${DIRECCION_CLIENTE}:${PUERTO_CLIENTE}${API_EMPLEADO}`)\n        .catch(err => alert(err));\n    return res;\n}\n\nexport const postEmpleado = (empleado) => {\n    const res = axios\n        .post(`http://${DIRECCION_CLIENTE}:${PUERTO_CLIENTE}${API_EMPLEADO}`, empleado)\n        .catch(err => alert(err));\n    return res;\n}\n\nexport const putEmpleado = (empleado) => {\n    const res = axios\n        .put(`http://${DIRECCION_CLIENTE}:${PUERTO_CLIENTE}${API_EMPLEADO}`, empleado)\n        .catch(err => alert(err));\n    return res;\n}","import axios from 'axios';\n\nexport const DIRECCION_LIQUIDACION = 'localhost';\nexport const PUERTO_LIQUIDACION = '9004';\nexport const API_LIQUIDACION = '/api/liquidacion'\n\nexport const getLiquidaciones = () => {\n    const res = axios.get(`http://${DIRECCION_LIQUIDACION}:${PUERTO_LIQUIDACION}${API_LIQUIDACION}`)\n        .catch(err => alert(err));\n    return res;\n}\n\nexport const postLiquidacionTodos = () => {\n    const res = axios\n        .post(`http://${DIRECCION_LIQUIDACION}:${PUERTO_LIQUIDACION}${API_LIQUIDACION}/todos`)\n        .catch(err => alert(err));\n    return res;\n}\n\nexport const postLiquidacionEmpleado = (empleado) => {\n    const res = axios\n        .post(`http://${DIRECCION_LIQUIDACION}:${PUERTO_LIQUIDACION}${API_LIQUIDACION}/empleado?idEmpleado=${empleado.id}`)\n        .catch(err => alert(err));\n    return res;\n}\n\nexport const postSueldo = (sueldo) => {\n    const res = axios\n        .post(`http://${DIRECCION_LIQUIDACION}:${PUERTO_LIQUIDACION}${API_LIQUIDACION}/empleado/sueldo`, sueldo)\n        .catch(err => alert(err));\n    return res;\n}\n\nexport const getSueldo = (empleado) => {\n    const res = axios\n        .get(`http://${DIRECCION_LIQUIDACION}:${PUERTO_LIQUIDACION}${API_LIQUIDACION}/empleado/sueldo?idEmpleado=${empleado.id}`)\n        .catch(err => alert(err));\n    return res;\n}\n","import { useState } from \"react\";\nimport LiquidacionForm from \"./LiquidacionForm\";\nimport '../Tabla';\nimport '../styles/Form.css';\nimport '../styles/Clientes.css';\nimport { getEmpleados } from \"../services/EmpleadoSertvice\";\nimport { CeldaTabla, Tabla, EncabezadoTabla, FilaTabla } from '../Tabla';\nimport { getLiquidaciones, getSueldo, postLiquidacionEmpleado, postLiquidacionTodos, postSueldo } from \"../services/LiquidacionService\";\n\nconst empleadoInicial = {\n    nombre: ''\n}\n\nconst sueldoInicial = {\n    monto: 0,\n    comision: 0\n}\n\nconst Liquidacion = () => {\n\n    const [listaLiquidacion, setListaLiquidacion] = useState([]);\n    const [listaEmpleados, setListaEmpleados] = useState([]);\n    const [empleado, setEmpleado] = useState(empleadoInicial);\n    const [sueldo, setSueldo] = useState(sueldoInicial);\n\n    const fetchEmpleados = async () => {\n        getEmpleados().then(res => {\n            setListaEmpleados(res.data)\n        });\n    }\n\n    const fetchLiquidacion = async () => {\n        getLiquidaciones().then(res => setListaLiquidacion(res.data));\n    }\n\n    const fetchSueldo = async (empleado) => {\n        getSueldo(empleado).then(res => setSueldo(res.data));\n    }\n\n    useState(() => {\n        fetchEmpleados();\n        fetchLiquidacion();\n    }, []);\n\n\n    const liquidarEmpleado = () => {\n        postLiquidacionEmpleado(empleado).then(() => fetchLiquidacion());\n    }\n\n    const liquidarTodos = () => {\n        postLiquidacionTodos().then(() => fetchLiquidacion());\n    }\n\n    const actualizarEmpleado = (valorAtributo) => {\n        const index = listaEmpleados.findIndex(e => e.nombre == valorAtributo);\n        setEmpleado(listaEmpleados[index]);\n        fetchSueldo(listaEmpleados[index]);\n    }\n\n    const actualizarCamposSueldo = (nombreAtributo, valorAtributo) => {\n        const nuevoSueldo = { ...sueldo, [nombreAtributo]: valorAtributo };\n        setSueldo(nuevoSueldo);\n    }\n\n    const actualizarSueldoEmpleado = () => {\n        console.log(sueldo);\n        postSueldo(sueldo).then(() => fetchSueldo());\n    }\n\n    const filasLiquidacion = listaLiquidacion.map((e, indice) => {\n        return <FilaTabla clave={indice} >\n            <CeldaTabla dato={e.id} />\n            <CeldaTabla dato={\n                listaEmpleados[listaEmpleados.findIndex(o => o.id == e.empleado.id)].nombre\n            } />\n            <CeldaTabla dato={e.fecha} />\n            <CeldaTabla dato={e.monto} />\n        </FilaTabla>\n    });\n\n    const encabezado = [\"ID Liquidacion\", \"Empleado\", \"Fecha\", \"Monto\"]\n        .map((e) => {\n            return <EncabezadoTabla>{e}</EncabezadoTabla>\n        })\n\n    return (\n        <div className='box'>\n            <div><h3>Liquidacion</h3></div>\n\n            <div className=\"panelForm\">\n                <div className=\"panelFormAlta\">\n                    <LiquidacionForm\n                        empleado={empleado}\n                        listaEmpleados={listaEmpleados}\n                        actualizarCampos={actualizarEmpleado}\n                        actualizarCamposSueldo={actualizarCamposSueldo}\n                        actualizarSueldoEmpleado={actualizarSueldoEmpleado}\n                        liquidarEmpleado={liquidarEmpleado}\n                        liquidarTodos={liquidarTodos}\n                        sueldoEmpleado={sueldo}\n                    />\n\n                </div>\n\n            </div>\n            <div className=\"panelForm\">\n                <Tabla>\n                    {encabezado}\n                    {filasLiquidacion}\n                </Tabla>\n            </div>\n        </div>\n    );\n}\n\nexport default Liquidacion\n    ;","import { Link } from \"react-router-dom\";\nimport './styles/App.css'\n\nconst NavBar = () => {\n    return (\n        <nav>\n            <ul className=\"nav-links\">\n                <Link className=\"nav-links\" to='/clientes'>\n                    <li>Clientes</li>\n                </Link>\n                <Link className=\"nav-links\" to='/obras'>\n                    <li>Obras</li>\n                </Link>\n                <Link className=\"nav-links\" to='/pagos'>\n                    <li>Pagos</li>\n                </Link>\n                <Link className=\"nav-links\" to='/pedidos'>\n                    <li>Pedidos</li>\n                </Link>\n                <Link className=\"nav-links\" to='/productos'>\n                    <li>Productos</li>\n                </Link>\n                <Link className=\"nav-links\" to='/liquidacion'>\n                    <li>Liquidacion</li>\n                </Link>\n                <Link className=\"nav-links\" to='/'>\n                    <li>Login</li>\n                </Link>\n            </ul>\n        </nav>\n    );\n}\n\nexport default NavBar;","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useState } from \"react\";\nimport Clientes from \"./components/clientes/Clientes\";\nimport Login from \"./components/Login\";\nimport Obras from \"./components/obras/Obras\"\nimport Productos from \"./components/productos/Productos\";\nimport Pedidos from './components/pedidos/Pedidos';\nimport Pagos from './components/pagos/Pagos';\nimport Liquidacion from './components/liquidacion/Liquidacion'\nimport NavBar from './components/NavBar';\n\nconst usuarioInicial = {\n  id: null,\n  nombre: \"\",\n  password: \"\",\n  autenticado: false\n}\n\nfunction App() {\n\n  const [usuario, setUsuario] = useState(usuarioInicial);\n\n  const ingresar = () => {\n    const nuevoUsuario = { ...usuario, autenticado: true };\n    setUsuario(nuevoUsuario);\n  }\n\n  const actualizarUsuario = (nombreAtributo, valorAtributo) => {\n    const nuevoUsuario = { ...usuario, [nombreAtributo]: valorAtributo };\n    console.log(nuevoUsuario);\n    setUsuario(nuevoUsuario);\n    console.log(usuario);\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\"  >\n            <Login usuario={usuario} ingresar={ingresar} actualizarCampos={actualizarUsuario} />\n          </Route>\n          <Route path=\"/clientes\" component={Clientes} />\n          <Route path=\"/obras\" component={Obras} />\n          <Route path=\"/productos\" component={Productos} />\n          <Route path=\"/pedidos\" component={Pedidos} />\n          <Route path=\"/pagos\" component={Pagos} />\n          <Route path=\"/liquidacion\" component={Liquidacion} name='Liquidacion' />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}